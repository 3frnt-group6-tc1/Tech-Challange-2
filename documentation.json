{
    "pipes": [
        {
            "name": "BrlPipe",
            "id": "pipe-BrlPipe-286a861b2f93efd149ab8fb84347337c43152dd2d85c9705aca09678ea96c4e6454d03b502ab047801b95de180df5405b35b028ed091db8ee64a589c6cb64779",
            "file": "src/app/shared/pipes/brl.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "brl",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'brl',\r\n  standalone: true\r\n})\r\nexport class BrlPipe implements PipeTransform {\r\n  transform(value: number | string): string {\r\n    const number = typeof value === 'string' ? parseFloat(value) : value;\r\n    if (isNaN(number)) return 'R$ 0,00';\r\n\r\n    return number.toLocaleString('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL',\r\n    });\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "Balance",
            "id": "interface-Balance-7ae4ce76e231f7b4e99c37840d18290cdf6bc071ac557a62eeeab30180a4572a357232a06bba7408132a7a1b8bfd4c2243ea81047dd9923111fa9892d932d6e7",
            "file": "src/app/shared/models/balance.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Balance {\r\n  totalCredits: number;\r\n  totalDebits: number;\r\n  balance: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "balance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "totalCredits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "totalDebits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "OptionItem",
            "id": "interface-OptionItem-775a5082a652613eaa2b929bb0e3ce67e8ced61ef3c31823039451e8d62cf49e844bfbbd6e48720aea4ca429880f99cc3c68a77d98172f56a4efa80b9b124e1c",
            "file": "src/app/shared/components/input/input.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\ninterface OptionItem {\r\n  display: string;\r\n  value: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  imports: [CommonModule],\r\n  templateUrl: './input.component.html',\r\n  styleUrl: './input.component.scss',\r\n})\r\nexport class InputComponent {\r\n  @Input() options: (string | OptionItem)[] = [];\r\n  @Input() size: 'G' | 'P' = 'G';\r\n  @Input() placeholder = 'Selecione o tipo de transação';\r\n  @Output() selectionChange = new EventEmitter<any>();\r\n\r\n  isOpen = false;\r\n  selectedOption: string | null = null;\r\n\r\n  toggleDropdown() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  selectOption(option: string | OptionItem) {\r\n    this.selectedOption = typeof option === 'string' ? option : option.display;\r\n    this.isOpen = false;\r\n    this.selectionChange.emit(typeof option === 'string' ? option : option.value);\r\n  }\r\n\r\n  getDisplayValue(option: string | OptionItem): string {\r\n    return typeof option === 'string' ? option : option.display;\r\n  }\r\n}",
            "properties": [
                {
                    "name": "display",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "StatementItem",
            "id": "interface-StatementItem-fd111aa45799bdeb26dd6fb2392190ac2ff8289644044d3101a56e7e8e1176d86abbdf2bf5cb0cefd6d175f51b78706a47de63338054ba20f5b0e31c3e560bd6",
            "file": "src/app/shared/models/statement.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface StatementItem {\r\n  id: string;\r\n  description: string;\r\n  amount: number;\r\n  date: string;\r\n  credit: boolean;\r\n  debit: boolean;\r\n}",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "credit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "debit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Transaction",
            "id": "interface-Transaction-95b0dd36b17f89d6480bc28e1b6f758cedf967670d517a03a71b30f5d5270933c6e856d1841b6029b2d513e31d32c544cee155ebda5c4463d63f529da9fa41d3",
            "file": "src/app/shared/models/transaction.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export enum TransactionType {\r\n  Exchange = 'exchange',\r\n  Loan = 'loan',\r\n  Transfer = 'transfer',\r\n}\r\n\r\nexport const CREDIT_TYPES: TransactionType[] = [\r\n  TransactionType.Exchange,\r\n  TransactionType.Loan,\r\n];\r\nexport const DEBIT_TYPES: TransactionType[] = [TransactionType.Transfer];\r\n\r\nexport interface Transaction {\r\n  id?: string;\r\n  type: TransactionType;\r\n  amount: number;\r\n  date: Date;\r\n  description: string;\r\n  id_user: string;\r\n}\r\n\r\nexport function isCredit(type: TransactionType): boolean {\r\n  return CREDIT_TYPES.includes(type);\r\n}\r\n\r\nexport function isDebit(type: TransactionType): boolean {\r\n  return DEBIT_TYPES.includes(type);\r\n}\r\n\r\nexport const TRANSACTION_TYPE_LABELS: Record<string, TransactionType> = {\r\n  'Câmbio de Moeda': TransactionType.Exchange,\r\n  'Empréstimo e Financiamento': TransactionType.Loan,\r\n  'DOC/TED': TransactionType.Transfer,\r\n};\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "id_user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TransactionData",
            "id": "interface-TransactionData-12ed3103a72fb59e4806e5acc427925d136bf16f29096cb99dbcdc4c0156469e677a0a92168175cdbaf7947f89a02926dbe3d38f251cfc2ccd5fc1113cdc7bb1",
            "file": "src/app/shared/models/transaction-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TransactionData {\r\n  day: string;\r\n  entries: number;\r\n  exits: number;\r\n}",
            "properties": [
                {
                    "name": "day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "entries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "exits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TransactionData",
            "id": "interface-TransactionData-4e26c9c1e845c9afbe08ef809189f14032939f5a820a270ebb3e7f559cc7fd730e0edd85073b69430327633d7858d7426f9435e52b1d08e2f3c42e971ff3b46a-1",
            "file": "src/app/shared/components/grafic/grafic.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\ninterface TransactionData {\r\n  day: string;\r\n  entries: number;\r\n  exits: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-grafic',\r\n  imports: [CommonModule],\r\n  templateUrl: './grafic.component.html',\r\n  styleUrl: './grafic.component.scss',\r\n})\r\n\r\nexport class GraficComponent {\r\n  @Input() transactionData: TransactionData[] = [];\r\n  @Input() maxChartValue = 20000;\r\n  @Input() barMaxHeight = 170;\r\n}\r\n",
            "properties": [
                {
                    "name": "day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "entries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "exits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TransactionData-1"
        },
        {
            "name": "TransactionForm",
            "id": "interface-TransactionForm-a62c2649d6a53ba16bf4e3fe49e1de17939e38919afd0c16a8a87a28fb962d8ee09d2f1cbeabdf11f711374ce509eeeab784739b11c3e11beb31c435aa9922d1",
            "file": "src/app/shared/components/transaction-form/transaction-form.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ButtonComponent } from '../button/button.component';\r\nimport { TextComponent } from '../text/text.component';\r\nimport { InputComponent } from '../input/input.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TransactionService } from '../../services/Transaction/transaction-service';\r\nimport {\r\n  Transaction,\r\n  TransactionType,\r\n  TRANSACTION_TYPE_LABELS,\r\n} from '../../models/transaction';\r\nimport { systemConfig } from '../../../app.config';\r\n\r\nexport interface TransactionForm {\r\n  type: string;\r\n  amount: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-transaction-form',\r\n  templateUrl: './transaction-form.component.html',\r\n  styleUrls: ['./transaction-form.component.scss'],\r\n  imports: [\r\n    ButtonComponent,\r\n    TextComponent,\r\n    InputComponent,\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class TransactionFormComponent implements OnInit {\r\n  transactionOptions = Object.keys(TRANSACTION_TYPE_LABELS);\r\n  form: TransactionForm = this.createEmptyForm();\r\n\r\n  private createEmptyForm(): TransactionForm {\r\n    return {\r\n      type: this.transactionOptions[0],\r\n      amount: '00,00',\r\n    };\r\n  }\r\n\r\n  constructor(private transactionService: TransactionService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  submitForm() {\r\n    const type = TRANSACTION_TYPE_LABELS[this.form.type] as TransactionType;\r\n    const amount = Number((this.form.amount as string).replace(',', '.'));\r\n\r\n    const transaction: Transaction = {\r\n      type,\r\n      amount,\r\n      date: new Date(),\r\n      description: this.form.type,\r\n      id_user: systemConfig.userId,\r\n    } as Transaction;\r\n\r\n    this.transactionService.create(transaction).subscribe(\r\n      () => {\r\n        this.resetForm();\r\n      },\r\n      (error) => {\r\n        console.error('Error creating transaction:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  resetForm() {\r\n    this.form = this.createEmptyForm();\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-c2654ed724b00fdc0f4ac6fa76db906ee4752427f1a4069b5efd9b3975230739483950484656e41e94ff4b7f4f5c9b9dcb96b0358c47a1d1ce257a68f7fedf91",
            "file": "src/app/shared/models/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  id: string\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-acfb83a3bf1608e848a4add7247d340ee6d52c31c07208956d2c6afeebb7d70bf8f80d18f3135be7bcbec9b866702bf3145d1a3a7bd8aaf2c2405731a3294eed",
            "file": "src/app/shared/services/Theme/theme.service.ts",
            "properties": [
                {
                    "name": "darkModeClass",
                    "defaultValue": "'dark'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "storageKey",
                    "defaultValue": "'darkMode'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "disableDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "enableDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  private darkModeClass = 'dark';\r\n  private storageKey = 'darkMode';\r\n\r\n  constructor() {\r\n    this.loadTheme();\r\n  }\r\n\r\n  toggleDarkMode(): void {\r\n    const isDark = this.isDarkMode();\r\n    if (isDark) {\r\n      this.disableDarkMode();\r\n      localStorage.setItem(this.storageKey, '0');\r\n    } else {\r\n      this.enableDarkMode();\r\n      localStorage.setItem(this.storageKey, '1');\r\n    }\r\n  }\r\n\r\n  enableDarkMode(): void {\r\n    document.documentElement.classList.add(this.darkModeClass);\r\n    localStorage.setItem(this.storageKey, '1');\r\n  }\r\n\r\n  disableDarkMode(): void {\r\n    document.documentElement.classList.remove(this.darkModeClass);\r\n    localStorage.setItem(this.storageKey, '0');\r\n  }\r\n\r\n  isDarkMode(): boolean {\r\n    return document.documentElement.classList.contains(this.darkModeClass);\r\n  }\r\n\r\n  loadTheme(): void {\r\n    const stored = localStorage.getItem(this.storageKey);\r\n\r\n    if (stored === '1') {\r\n      this.enableDarkMode();\r\n    } else if (stored === '0') {\r\n      this.disableDarkMode();\r\n    } else {\r\n      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n        this.enableDarkMode();\r\n      } else {\r\n        this.disableDarkMode();\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TransactionEventService",
            "id": "injectable-TransactionEventService-911a61fb5aaa84af651cb9d85b67cd0b6ff6f57e128b1f0b2f5d269880b14bb061750a89f4ccf1629e6a98c3e0e0c1a18f31f9dbdad10c3cbee03679edef7ae5",
            "file": "src/app/shared/services/TransactionEvent/transaction-event.service.ts",
            "properties": [
                {
                    "name": "transactionCreated",
                    "defaultValue": "new Subject<Transaction>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "transactionCreated$",
                    "defaultValue": "this.transactionCreated.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "transactionDeleted",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "transactionDeleted$",
                    "defaultValue": "this.transactionDeleted.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "transactionUpdated",
                    "defaultValue": "new Subject<Transaction>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "transactionUpdated$",
                    "defaultValue": "this.transactionUpdated.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "notifyTransactionCreated",
                    "args": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "notifyTransactionDeleted",
                    "args": [
                        {
                            "name": "transactionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transactionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "notifyTransactionUpdated",
                    "args": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Transaction } from '../../models/transaction';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransactionEventService {\r\n  private readonly transactionCreated = new Subject<Transaction>();\r\n  transactionCreated$ = this.transactionCreated.asObservable();\r\n\r\n  private readonly transactionUpdated = new Subject<Transaction>();\r\n  transactionUpdated$ = this.transactionUpdated.asObservable();\r\n\r\n  private readonly transactionDeleted = new Subject<string>();\r\n  transactionDeleted$ = this.transactionDeleted.asObservable();\r\n\r\n  notifyTransactionCreated(transaction: Transaction): void {\r\n    this.transactionCreated.next(transaction);\r\n  }\r\n\r\n  notifyTransactionUpdated(transaction: Transaction): void {\r\n    this.transactionUpdated.next(transaction);\r\n  }\r\n\r\n  notifyTransactionDeleted(transactionId: string): void {\r\n    this.transactionDeleted.next(transactionId);\r\n  }\r\n}",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TransactionService",
            "id": "injectable-TransactionService-d8869cdbad63a8ce0a0de7bdf3aa1bc50e56652cf75892578fccb63244889de6886df41a1e1962c0598b656a352b5ac18fa11c97f77868d76d9dd2cdbe6ce55d",
            "file": "src/app/shared/services/Transaction/transaction-service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "apiConfig.baseUrl + apiConfig.transactionsEndpoint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Transaction>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "transactionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transactionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Transaction[]>",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "transactionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Transaction>",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transactionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getByUserId",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "types",
                            "type": "TransactionType[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Transaction[]>",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "types",
                            "type": "TransactionType[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCreditsByUserId",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Transaction[]>",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDebitsByUserId",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Transaction[]>",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserBalance",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Balance>",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "read",
                    "args": [
                        {
                            "name": "transactionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Transaction>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transactionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "transactionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Transaction>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transactionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport {\r\n  Transaction,\r\n  TransactionType,\r\n  DEBIT_TYPES,\r\n  CREDIT_TYPES,\r\n} from '../../models/transaction';\r\nimport { Balance } from '../../models/balance';\r\nimport { apiConfig } from '../../../app.config';\r\nimport { TransactionEventService } from '../TransactionEvent/transaction-event.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TransactionService {\r\n  private apiUrl = apiConfig.baseUrl + apiConfig.transactionsEndpoint;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private transactionEventService: TransactionEventService\r\n  ) {}\r\n\r\n  create(transaction: Transaction): Observable<Transaction> {\r\n    return this.http.post<Transaction>(this.apiUrl, transaction).pipe(\r\n      tap((createdTransaction) => {\r\n        this.transactionEventService.notifyTransactionCreated(\r\n          createdTransaction\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  read(transactionId: string): Observable<Transaction> {\r\n    return this.http.get<Transaction>(`${this.apiUrl}/${transactionId}`);\r\n  }\r\n\r\n  update(\r\n    transactionId: string,\r\n    transaction: Transaction\r\n  ): Observable<Transaction> {\r\n    return this.http\r\n      .put<Transaction>(`${this.apiUrl}/${transactionId}`, transaction)\r\n      .pipe(\r\n        tap((updatedTransaction) => {\r\n          this.transactionEventService.notifyTransactionUpdated(\r\n            updatedTransaction\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(transactionId: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${transactionId}`).pipe(\r\n      tap(() => {\r\n        this.transactionEventService.notifyTransactionDeleted(transactionId);\r\n      })\r\n    );\r\n  }\r\n\r\n  getAll(): Observable<Transaction[]> {\r\n    return this.http.get<Transaction[]>(this.apiUrl);\r\n  }\r\n\r\n  getById(transactionId: string): Observable<Transaction> {\r\n    return this.http.get<Transaction>(`${this.apiUrl}/${transactionId}`);\r\n  }\r\n\r\n  getByUserId(\r\n    userId: string,\r\n    types?: TransactionType[]\r\n  ): Observable<Transaction[]> {\r\n    let url = `${this.apiUrl}?id_user=${userId}`;\r\n    if (types && types.length > 0) {\r\n      url += `&type=${types.join(',')}`;\r\n    }\r\n    return this.http.get<Transaction[]>(url);\r\n  }\r\n\r\n  getCreditsByUserId(userId: string): Observable<Transaction[]> {\r\n    return this.getByUserId(userId, CREDIT_TYPES);\r\n  }\r\n\r\n  getDebitsByUserId(userId: string): Observable<Transaction[]> {\r\n    return this.getByUserId(userId, DEBIT_TYPES);\r\n  }\r\n\r\n  getUserBalance(userId: string): Observable<Balance> {\r\n    return this.getByUserId(userId).pipe(\r\n      map((transactions) => {\r\n        const totalCredits = transactions\r\n          .filter((t) => CREDIT_TYPES.includes(t.type))\r\n          .reduce((sum, t) => sum + t.amount, 0);\r\n\r\n        const totalDebits = transactions\r\n          .filter((t) => DEBIT_TYPES.includes(t.type))\r\n          .reduce((sum, t) => sum + t.amount, 0);\r\n\r\n        return {\r\n          totalCredits,\r\n          totalDebits,\r\n          balance: totalCredits - totalDebits,\r\n        };\r\n      })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "transactionEventService",
                        "type": "TransactionEventService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "transactionEventService",
                        "type": "TransactionEventService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-12684765e1f175f7ada7330accf33f1b591dc9f13e1c45a8c03d4804dcae2378d8fe18b02a307d1726cd97847139a69ed295649321762cba0b73cfc0e9cae02d",
            "file": "src/app/shared/services/User/user-service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "apiConfig.baseUrl + apiConfig.usersEndpoint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<User>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<User[]>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<User>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "read",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<User>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<User>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../../models/user';\r\nimport { apiConfig } from '../../../app.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  private apiUrl = apiConfig.baseUrl + apiConfig.usersEndpoint;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  create(user: User): Observable<User> {\r\n    return this.http.post<User>(this.apiUrl, user);\r\n  }\r\n\r\n  read(userId: string): Observable<User> {\r\n    return this.http.get<User>(`${this.apiUrl}/${userId}`);\r\n  }\r\n\r\n  update(userId: string, user: User): Observable<User> {\r\n    return this.http.put<User>(`${this.apiUrl}/${userId}`, user);\r\n  }\r\n\r\n  delete(userId: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${userId}`);\r\n  }\r\n\r\n  getAll(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.apiUrl);\r\n  }\r\n\r\n  getById(userId: string): Observable<User> {\r\n    return this.http.get<User>(`${this.apiUrl}/${userId}`);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "MockBrlPipe",
            "id": "class-MockBrlPipe-b92860d134328ad15045ebaf7f5200d7272383474cc0add4173a7b602cc3dfaec84068402ca03a85524ae5e5cac2ce05a8bc1a528426e3bc45d13dfa28798c9f",
            "file": "src/app/shared/components/statement/statement.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { StatementComponent } from './statement.component';\nimport { TextComponent } from '../text/text.component';\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { BrlPipe } from '../../pipes/brl.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../../services/Transaction/transaction-service';\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-arrow-pencil',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowPencilComponent {}\n\n@Component({\n  selector: 'app-icon-bin',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12z\"></path></svg>',\n  standalone: true\n})\nclass MockIconBinComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-down-left',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowDownLeftComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-right',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowRightComponent {}\n\n@Component({\n  selector: 'app-delete-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Delete Modal</div>',\n  inputs: ['isOpen'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockDeleteModalComponent {}\n\n@Component({\n  selector: 'app-edit-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Edit Modal</div>',\n  inputs: ['isOpen', 'transaction'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockEditModalComponent {}\n\n// Mock do TransactionService e TransactionEventService\nconst mockTransactionService = {\n  getByUserId: () => of([\n    {\n      id: '1',\n      type: 'exchange',\n      description: 'Câmbio de moeda',\n      amount: 1500.75,\n      date: new Date('2023-05-10'),\n      id_user: 'user123'\n    },\n    {\n      id: '2',\n      type: 'transfer',\n      description: 'Transferência bancária',\n      amount: 750.50,\n      date: new Date('2023-05-08'),\n      id_user: 'user123'\n    },\n    {\n      id: '3',\n      type: 'loan',\n      description: 'Empréstimo pessoal',\n      amount: 3000,\n      date: new Date('2023-05-05'),\n      id_user: 'user123'\n    }\n  ]),\n  delete: () => of({}),\n  update: () => of({})\n};\n\nconst mockTransactionEventService = {\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n};\n\n// Criando um mock do BrlPipe\nclass MockBrlPipe extends BrlPipe {\n  override transform(value: any): string {\n    return `R$ ${value.toFixed(2).replace('.', ',')}`;\n  }\n}\n\nconst meta: Meta<StatementComponent> = {\n  title: 'Componentes/Statement',\n  component: StatementComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule, \n        HttpClientModule,\n        TextComponent,\n        MockIconArrowPencilComponent,\n        MockIconBinComponent,\n        MockIconDollarComponent,\n        MockIconArrowDownLeftComponent,\n        MockIconArrowRightComponent,\n        MockDeleteModalComponent,\n        MockEditModalComponent\n      ],\n      providers: [\n        { provide: BrlPipe, useClass: MockBrlPipe },\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    showDetails: {\n      control: 'boolean',\n      description: 'Exibe detalhes das transações',\n    },\n    showAllTransactions: {\n      control: 'boolean',\n      description: 'Exibe todas as transações ou apenas as 6 mais recentes',\n    },\n    customTitle: {\n      control: 'text',\n      description: 'Título personalizado para o componente',\n    },\n    showLastTransactionsSubtitle: {\n      control: 'boolean',\n      description: 'Exibe o subtítulo de últimas transações',\n    },\n    swapColumns: {\n      control: 'boolean',\n      description: 'Inverte a ordem das colunas',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe um extrato de transações financeiras com opções para editar e excluir transações.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StatementComponent>;\n\nexport const Default: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: false\n  },\n};\n\nexport const AllTransactions: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: true,\n    customTitle: 'Histórico Completo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const CompactView: Story = {\n  args: {\n    showDetails: false,\n    showAllTransactions: false,\n    customTitle: 'Resumo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const SwappedColumns: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: true\n  },\n};\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [
                "BrlPipe"
            ],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Router",
            "id": "class-Router-91bbc9abef01461860859982f431ace3e1935f2eeba265502e0f1166be2a641bd55cbea429ea774fd7345f562e2857c762ac609694bce00b7399bec4928afb63",
            "file": "src/app/shared/components/aside/aside.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { AsideComponent } from './aside.component';\nimport { MenuItemComponent } from '../menu-item/menu-item.component';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { NgClass, NgComponentOutlet } from '@angular/common';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/panel';\n  events = {\n    subscribe: () => {}\n  };\n}\n\n// Componentes de ícones mock para os exemplos\n@Component({\n  selector: 'app-icon-home',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>',\n  standalone: true\n})\nclass MockIconHomeComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-list',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line><line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line><line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line><line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line></svg>',\n  standalone: true\n})\nclass MockIconListComponent {}\n\n@Component({\n  selector: 'app-icon-card',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>',\n  standalone: true\n})\nclass MockIconCardComponent {}\n\n@Component({\n  selector: 'app-icon-settings',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle></svg>',\n  standalone: true\n})\nclass MockIconSettingsComponent {}\n\nconst meta: Meta<AsideComponent> = {\n  title: 'Componentes/Aside',\n  component: AsideComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]),\n        MenuItemComponent,\n        NgClass,\n        NgComponentOutlet,\n        MockIconHomeComponent,\n        MockIconDollarComponent,\n        MockIconListComponent,\n        MockIconCardComponent,\n        MockIconSettingsComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de barra lateral de navegação com menu de itens para as principais seções da aplicação.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<AsideComponent>;\n\nexport const Default: Story = {\n  args: {\n    currentRoute: '/panel'\n  },\n};\n\nexport const TransactionsActive: Story = {\n  args: {\n    currentRoute: '/transactions'\n  },\n};\n\nexport const CardsActive: Story = {\n  args: {\n    currentRoute: '/cards'\n  },\n};\n\nexport const ConfigurationsActive: Story = {\n  args: {\n    currentRoute: '/configurations'\n  },\n};\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "events",
                    "defaultValue": "{\n    subscribe: () => {}\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "url",
                    "defaultValue": "'/panel'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Router",
            "id": "class-Router-9c4d50b08941ea4829b23b4d3bf4539daf2943a4c7f103487235857d5c889b2a00ba8f1a1e8c07ab19d00778433597e5f9b5d0010058c681017bfbcafad4d2ab-1",
            "file": "src/app/shared/components/footer/footer.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { FooterComponent } from './footer.component';\nimport { CommonModule } from '@angular/common';\nimport { TextComponent } from '../text/text.component';\nimport { ButtonComponent } from '../button/button.component';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/';\n  events = of({});\n  navigate() {}\n}\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-whatsapp',\n  template: '<div class=\"w-4 h-4 bg-green-500\">WhatsApp</div>',\n  standalone: true\n})\nclass MockIconWhatsappComponent {}\n\n@Component({\n  selector: 'app-icon-instagram',\n  template: '<div class=\"w-4 h-4 bg-pink-500\">Instagram</div>',\n  standalone: true\n})\nclass MockIconInstagramComponent {}\n\n@Component({\n  selector: 'app-icon-youtube',\n  template: '<div class=\"w-4 h-4 bg-red-500\">YouTube</div>',\n  standalone: true\n})\nclass MockIconYoutubeComponent {}\n\nconst meta: Meta<FooterComponent> = {\n  title: 'Componentes/Footer',\n  component: FooterComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        TextComponent,\n        ButtonComponent,\n        MockIconLogoComponent,\n        MockIconWhatsappComponent,\n        MockIconInstagramComponent,\n        MockIconYoutubeComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    company: {\n      control: 'text',\n      description: 'Nome da empresa',\n      table: {\n        defaultValue: { summary: 'ByteBank' },\n      },\n    },\n    version: {\n      control: 'text',\n      description: 'Versão da aplicação',\n      table: {\n        defaultValue: { summary: '1.0.0' },\n      },\n    },\n    year: {\n      control: 'number',\n      description: 'Ano atual para o copyright',\n      table: {\n        defaultValue: { summary: '2025' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de rodapé da aplicação, com diferentes layouts para usuários logados e não logados.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<FooterComponent>;\n\nexport const LoggedOut: Story = {\n  args: {\n    isLoggedIn: false,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n};\n\nexport const LoggedIn: Story = {\n  args: {\n    isLoggedIn: true,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n};\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "events",
                    "defaultValue": "of({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "url",
                    "defaultValue": "'/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "navigate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Router-1"
        },
        {
            "name": "Router",
            "id": "class-Router-b15c97a105addf40642efcd58ef03e3f425a08317301491b6aefd7c293f40f6a6bbcf92c764e4f5d4f3994767edcc735d8aa6cc1030d478d12bb1b2085af5b87-2",
            "file": "src/app/shared/components/menu/menu.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { MenuComponent } from './menu.component';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from '../button/button.component';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Mock do ThemeService\nclass ThemeService {\n  isDarkMode() { return false; }\n  toggleDarkMode() {}\n}\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\nconst meta: Meta<MenuComponent> = {\n  title: 'Componentes/Menu',\n  component: MenuComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        ButtonComponent,\n        MockIconExitComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() },\n        { provide: ThemeService, useValue: new ThemeService() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    mobile: {\n      control: 'boolean',\n      description: 'Define se está em modo mobile',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    tablet: {\n      control: 'boolean',\n      description: 'Define se está em modo tablet',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    menuOpen: {\n      control: 'boolean',\n      description: 'Define se o menu está aberto',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    closeMenu: {\n      action: 'closeMenu',\n      description: 'Evento emitido quando o menu é fechado',\n    },\n    menuRefReady: {\n      action: 'menuRefReady',\n      description: 'Evento emitido quando a referência do menu está pronta',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de menu da aplicação, com diferentes layouts para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MenuComponent>;\n\nexport const LoggedOutMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false,\n    menuOpen: true,\n  },\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    menuOpen: false,\n  },\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    menuOpen: true,\n  },\n};\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "events",
                    "defaultValue": "of({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "url",
                    "defaultValue": "'/panel'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "navigate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Router-2"
        },
        {
            "name": "RouterMock",
            "id": "class-RouterMock-c16badd8263508c1cbc0db71dfe44d6787e6b800d3eadc331661087da90832cb823c5a00c7a4596f075bb984a804ab8271c2bc21b35ece1389d354ffd40663b2",
            "file": "src/app/shared/components/header/header.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { HeaderComponent } from './header.component';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonComponent } from '../button/button.component';\nimport { TextComponent } from '../text/text.component';\nimport { MenuComponent } from '../menu/menu.component';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { UserService } from '../../services/User/user-service';\n\n// Mock dos serviços necessários\nclass ThemeService {\n  toggleDarkMode() {}\n  isDarkMode = false;\n}\n\nclass RouterMock {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Componentes mock para ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\n@Component({\n  selector: 'app-icon-darkmode',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Dark</div>',\n  standalone: true\n})\nclass MockIconDarkmodeComponent {}\n\n@Component({\n  selector: 'app-icon-hamburger',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Menu</div>',\n  standalone: true\n})\nclass MockIconHamburgerComponent {}\n\n@Component({\n  selector: 'app-icon-bell',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Bell</div>',\n  standalone: true\n})\nclass MockIconBellComponent {}\n\n@Component({\n  selector: 'app-icon-account-circle',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Account</div>',\n  standalone: true\n})\nclass MockIconAccountCircleComponent {}\n\n@Component({\n  selector: 'app-icon-arrowdown',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Arrow</div>',\n  standalone: true\n})\nclass MockIconArrowdownComponent {}\n\nexport default {\n  title: 'Componentes/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule.forChild([]),\n        ButtonComponent,\n        TextComponent,\n        MenuComponent,\n        MockIconLogoComponent,\n        MockIconExitComponent,\n        MockIconDarkmodeComponent,\n        MockIconHamburgerComponent,\n        MockIconBellComponent,\n        MockIconAccountCircleComponent,\n        MockIconArrowdownComponent\n      ],\n      providers: [\n        {\n          provide: ThemeService,\n          useValue: {\n            isDarkMode: () => false,\n            toggleDarkMode: () => {}\n          }\n        },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: UserService, useValue: {\n          getById: () => of({ name: 'Usuário Teste' })\n        }},\n        { provide: Router, useValue: new RouterMock() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de cabeçalho da aplicação, com diferentes estados para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      }\n    }\n  }\n} as Meta<HeaderComponent>;\n\ntype Story = StoryObj<HeaderComponent>;\n\n// Nota: Este componente é complexo e depende de muitos serviços e componentes.\n// Para o Storybook, seria melhor criar uma versão simplificada ou usar mocks mais elaborados.\n// As stories abaixo são exemplos, mas podem não funcionar corretamente no Storybook.\n\nexport const LoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const NotLoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n};\n\nexport const NotLoggedInMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n};\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "events",
                    "defaultValue": "of({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "url",
                    "defaultValue": "'/panel'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methods": [
                {
                    "name": "navigate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ThemeService",
            "id": "class-ThemeService-c16badd8263508c1cbc0db71dfe44d6787e6b800d3eadc331661087da90832cb823c5a00c7a4596f075bb984a804ab8271c2bc21b35ece1389d354ffd40663b2",
            "file": "src/app/shared/components/header/header.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { HeaderComponent } from './header.component';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonComponent } from '../button/button.component';\nimport { TextComponent } from '../text/text.component';\nimport { MenuComponent } from '../menu/menu.component';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { UserService } from '../../services/User/user-service';\n\n// Mock dos serviços necessários\nclass ThemeService {\n  toggleDarkMode() {}\n  isDarkMode = false;\n}\n\nclass RouterMock {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Componentes mock para ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\n@Component({\n  selector: 'app-icon-darkmode',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Dark</div>',\n  standalone: true\n})\nclass MockIconDarkmodeComponent {}\n\n@Component({\n  selector: 'app-icon-hamburger',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Menu</div>',\n  standalone: true\n})\nclass MockIconHamburgerComponent {}\n\n@Component({\n  selector: 'app-icon-bell',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Bell</div>',\n  standalone: true\n})\nclass MockIconBellComponent {}\n\n@Component({\n  selector: 'app-icon-account-circle',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Account</div>',\n  standalone: true\n})\nclass MockIconAccountCircleComponent {}\n\n@Component({\n  selector: 'app-icon-arrowdown',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Arrow</div>',\n  standalone: true\n})\nclass MockIconArrowdownComponent {}\n\nexport default {\n  title: 'Componentes/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule.forChild([]),\n        ButtonComponent,\n        TextComponent,\n        MenuComponent,\n        MockIconLogoComponent,\n        MockIconExitComponent,\n        MockIconDarkmodeComponent,\n        MockIconHamburgerComponent,\n        MockIconBellComponent,\n        MockIconAccountCircleComponent,\n        MockIconArrowdownComponent\n      ],\n      providers: [\n        {\n          provide: ThemeService,\n          useValue: {\n            isDarkMode: () => false,\n            toggleDarkMode: () => {}\n          }\n        },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: UserService, useValue: {\n          getById: () => of({ name: 'Usuário Teste' })\n        }},\n        { provide: Router, useValue: new RouterMock() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de cabeçalho da aplicação, com diferentes estados para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      }\n    }\n  }\n} as Meta<HeaderComponent>;\n\ntype Story = StoryObj<HeaderComponent>;\n\n// Nota: Este componente é complexo e depende de muitos serviços e componentes.\n// Para o Storybook, seria melhor criar uma versão simplificada ou usar mocks mais elaborados.\n// As stories abaixo são exemplos, mas podem não funcionar corretamente no Storybook.\n\nexport const LoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const NotLoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n};\n\nexport const NotLoggedInMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n};\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "isDarkMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methods": [
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ThemeService",
            "id": "class-ThemeService-b15c97a105addf40642efcd58ef03e3f425a08317301491b6aefd7c293f40f6a6bbcf92c764e4f5d4f3994767edcc735d8aa6cc1030d478d12bb1b2085af5b87-1",
            "file": "src/app/shared/components/menu/menu.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { MenuComponent } from './menu.component';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from '../button/button.component';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Mock do ThemeService\nclass ThemeService {\n  isDarkMode() { return false; }\n  toggleDarkMode() {}\n}\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\nconst meta: Meta<MenuComponent> = {\n  title: 'Componentes/Menu',\n  component: MenuComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        ButtonComponent,\n        MockIconExitComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() },\n        { provide: ThemeService, useValue: new ThemeService() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    mobile: {\n      control: 'boolean',\n      description: 'Define se está em modo mobile',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    tablet: {\n      control: 'boolean',\n      description: 'Define se está em modo tablet',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    menuOpen: {\n      control: 'boolean',\n      description: 'Define se o menu está aberto',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    closeMenu: {\n      action: 'closeMenu',\n      description: 'Evento emitido quando o menu é fechado',\n    },\n    menuRefReady: {\n      action: 'menuRefReady',\n      description: 'Evento emitido quando a referência do menu está pronta',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de menu da aplicação, com diferentes layouts para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MenuComponent>;\n\nexport const LoggedOutMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false,\n    menuOpen: true,\n  },\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    menuOpen: false,\n  },\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    menuOpen: true,\n  },\n};\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [],
            "methods": [
                {
                    "name": "isDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ThemeService-1"
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2c5b9b3672f00d36426219ab785636189b928a923f119e313de803b99d92d397607eecad806158e3b574d3d73f69d68a6f079f8b1e98febc80980b88acbfb5cf",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'TechChallenge - FIAP'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "FooterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { HeaderComponent } from './shared/components/header/header.component';\r\nimport { FooterComponent } from './shared/components/footer/footer.component';\r\nimport { ThemeService } from './shared/services/Theme/theme.service'; // ajuste o path se necessário\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    RouterOutlet,\r\n    HeaderComponent,\r\n    FooterComponent\r\n],\r\n  template: `\r\n    <app-header></app-header>\r\n    <router-outlet></router-outlet>\r\n    <app-footer></app-footer>\r\n  `,\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n  title = 'TechChallenge - FIAP';\r\n\r\n  constructor(private themeService: ThemeService) {}\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "AsideComponent",
            "id": "component-AsideComponent-2fd386db2899cf99c2903b10944ca9272bbd2c20434551404db736b1d393d19f30ade17c8fdce32a124eae20d17365c0dc07e66686bebec404ce1c7f255c60aa",
            "file": "src/app/shared/components/aside/aside.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-aside",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./aside.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentRoute",
                    "defaultValue": "'/inicio'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "iconCard",
                    "defaultValue": "IconCardComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "iconDollar",
                    "defaultValue": "IconDollarComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "iconHome",
                    "defaultValue": "IconHomeComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "iconList",
                    "defaultValue": "IconListComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "iconSettings",
                    "defaultValue": "IconSettingsComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MenuItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuItemComponent } from '../menu-item/menu-item.component';\r\nimport { IconHomeComponent } from '../../assets/icons/icon-home.component';\r\nimport { IconDollarComponent } from '../../assets/icons/icon-dollar.component';\r\nimport { IconListComponent } from '../../assets/icons/icon-list.component';\r\nimport { IconCardComponent } from '../../assets/icons/icon-card.component';\r\nimport { IconSettingsComponent } from '../../assets/icons/icon-settings.component';\r\n\r\n@Component({\r\n  selector: 'app-aside',\r\n  imports: [MenuItemComponent],\r\n  templateUrl: './aside.component.html',\r\n  styleUrl: './aside.component.scss',\r\n})\r\nexport class AsideComponent {\r\n  currentRoute: string = '/inicio';\r\n\r\n  iconHome: any = IconHomeComponent;\r\n  iconDollar: any = IconDollarComponent;\r\n  iconList: any = IconListComponent;\r\n  iconCard: any = IconCardComponent;\r\n  iconSettings: any = IconSettingsComponent;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentRoute = this.router.url;\r\n    this.router.events.subscribe(() => {\r\n      this.currentRoute = this.router.url;\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./aside.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<aside class=\"bg-white shadow-md md:block w-64 h-full mb-6\">\r\n  <div class=\"flex flex-col p-6 gap-3\">\r\n    <app-menu-item\r\n      [label]=\"'Início'\"\r\n      [route]=\"'/panel'\"\r\n      [iconComponent]=\"iconHome\"\r\n      [active]=\"currentRoute === '/panel'\"\r\n    ></app-menu-item>\r\n    <app-menu-item\r\n      [label]=\"'Transações'\"\r\n      [route]=\"'/transactions'\"\r\n      [iconComponent]=\"iconDollar\"\r\n      [active]=\"currentRoute === '/transactions'\"\r\n    ></app-menu-item>\r\n    <app-menu-item\r\n      [label]=\"'Meus Cartões'\"\r\n      [route]=\"'/cards'\"\r\n      [iconComponent]=\"iconCard\"\r\n      [active]=\"currentRoute === '/cards'\"\r\n    ></app-menu-item>\r\n    <app-menu-item\r\n      [label]=\"'Configurações'\"\r\n      [route]=\"'/configurations'\"\r\n      [iconComponent]=\"iconSettings\"\r\n      [active]=\"currentRoute === '/configurations'\"\r\n    ></app-menu-item>\r\n  </div>\r\n</aside>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-f9d1a69c3c900679383a44b531733b1ceb2b3c889a30e2d6973c610715807ecbbcbb5d4f8af8aa2537fd4f5587a07fb0fd163c9351e18e73a1bbb0c3103ddf08",
            "file": "src/app/shared/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconPosition",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'G'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"P\" | \"G\" | \"GG\"",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"primary\" | \"secondary\" | \"outline-cyan-blue\" | \"ghost-cyan-blue\" | \"ghost-white\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  imports: [CommonModule],\r\n  templateUrl: './button.component.html',\r\n  styleUrl: './button.component.scss',\r\n})\r\nexport class ButtonComponent {\r\n  @Input() theme:\r\n    | 'primary'\r\n    | 'secondary'\r\n    | 'outline-cyan-blue'\r\n    | 'ghost-cyan-blue'\r\n    | 'ghost-white' = 'primary';\r\n  @Input() size: 'P' | 'G' | 'GG' = 'G';\r\n  @Input() disabled: boolean = false;\r\n  @Input() label: string = 'Button';\r\n  @Input() iconPosition: 'left' | 'right' = 'left';\r\n}\r\n",
            "styleUrl": "./button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<button\r\n  [disabled]=\"disabled\"\r\n  [ngClass]=\"{\r\n    'bg-cyan-blue-500 dark:bg-[#090979] hover:bg-cyan-blue-900 dark:hover:bg-blue-violet-900': theme === 'primary' && !disabled,\r\n\r\n    'bg-orange-500 dark:bg-yellow-500 hover:bg-orange-900 hover:dark:bg-yellow-900': theme === 'secondary' && !disabled,\r\n    'bg-transparent dark:bg-transparent border dark:border border-cyan-blue-500 dark:border-[#090979] hover:bg-cyan-blue-500 dark:hover:bg-blue-violet-500': theme === 'outline-cyan-blue' && !disabled,\r\n    'bg-transparent hover:text-cyan-blue-900': theme === 'ghost-cyan-blue' && !disabled,\r\n    'bg-transparent hover:text-orange-500 dark:hover:text-gray-200': theme === 'ghost-white' && !disabled,\r\n    'bg-gray-200 cursor-not-allowed': disabled,\r\n    'px-3': size === 'P',\r\n    'px-12': size === 'G',\r\n    'px-28': size === 'GG'\r\n  }\"\r\n  [class.gap-2]=\"!!label\"\r\n  class=\"group py-[14px] rounded-lg font-lato text-base font-semibold transition-colors duration-300 flex items-center justify-center\"\r\n\r\n>\r\n  <ng-content select=\"[icon-left]\"></ng-content>\r\n\r\n  <span\r\n    *ngIf=\"label\"\r\n    [ngClass]=\"{\r\n      'text-white hover:text-gray-200': theme === 'primary',\r\n      'dark:!text-brown-500 hover:!dark:text-brown-900 text-gray-50': theme === 'secondary',\r\n      '!text-white hover:!text-gray-200 dark:!text-gray-200 hover:!dark:text-gray-250': theme === 'ghost-white',\r\n      'text-[#004d61] dark:text-[#090979] group-hover:text-white': theme === 'outline-cyan-blue',\r\n      'text-cyan-blue-500  hover:text-cyan-blue-900': theme === 'ghost-cyan-blue',\r\n      '!text-gray-500': disabled\r\n    }\"\r\n  >\r\n    {{ label }}\r\n  </span>\r\n\r\n  <ng-content select=\"[icon-right]\"></ng-content>\r\n</button>\r\n"
        },
        {
            "name": "CardsComponent",
            "id": "component-CardsComponent-235ccea8a17f69ace599c7f2698b14503d37058b24042c3b4154f0d86714fe3b3381adc334df3af67fac70bf7d4bd83191d69ed2e5d3bbe7c8cf9501866227a3",
            "file": "src/app/pages/cards/cards.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cards",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cards.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "LayoutComponent",
                    "type": "component"
                },
                {
                    "name": "UnderConstructionComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { LayoutComponent } from '../../shared/components/layout/layout.component';\r\nimport { UnderConstructionComponent } from '../../shared/components/under-construction/under-construction.component';\r\n\r\n@Component({\r\n  selector: 'app-cards',\r\n  standalone: true,\r\n  imports: [LayoutComponent, UnderConstructionComponent],\r\n  templateUrl: './cards.component.html',\r\n  styleUrl: './cards.component.scss',\r\n})\r\nexport class CardsComponent {}\r\n",
            "styleUrl": "./cards.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-layout>\r\n  <section class=\"container flex-1 flex flex-col items-center justify-center w-full\">\r\n    <app-under-construction></app-under-construction>\r\n  </section>\r\n</app-layout>"
        },
        {
            "name": "ConfigurationsComponent",
            "id": "component-ConfigurationsComponent-9b53b1fef5640e01c78e2447c69575319e3420a72a20640db0ce3a39b1c26a0f38e448c9fb78e000a5023607d9bd71bc70a615aac91228c75fa7f421db61a9a5",
            "file": "src/app/pages/configurations/configurations.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-configurations",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./configurations.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "LayoutComponent",
                    "type": "component"
                },
                {
                    "name": "UnderConstructionComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { LayoutComponent } from '../../shared/components/layout/layout.component';\r\nimport { UnderConstructionComponent } from '../../shared/components/under-construction/under-construction.component';\r\n\r\n@Component({\r\n  selector: 'app-configurations',\r\n  standalone: true,\r\n  imports: [LayoutComponent, UnderConstructionComponent],\r\n  templateUrl: './configurations.component.html',\r\n  styleUrl: './configurations.component.scss',\r\n})\r\nexport class ConfigurationsComponent {}\r\n",
            "styleUrl": "./configurations.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-layout>\r\n  <section class=\"container flex-1 flex flex-col items-center justify-center w-full h-[calc(100vh-130px)]\">\r\n    <app-under-construction></app-under-construction>\r\n  </section>\r\n</app-layout>"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-e503c50cf28e5fc12632df9d8fea0b09c4c2096bf04c3bb2ad18f1b9d43523c1ad01ed81ea05ae63aca9bcb8f9781f7992a7d08fbd18c68c60a022eb977f6a14",
            "file": "src/app/shared/components/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accountType",
                    "defaultValue": "'Conta Corrente'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "balance",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "currentDate",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "currentMonthName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "currentMonthTransactions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "idUser",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "showBalance",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "totalEntries",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "totalExits",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "transactionData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionData[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "transactions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "transactionTypeLabels",
                    "defaultValue": "TRANSACTION_TYPE_LABELS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "userId",
                    "defaultValue": "systemConfig.userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "userName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchTransactions",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetchUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "filterCurrentMonthTransactions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "formatBalance",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCurrentDate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "subscribeToTransactionEvents",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "successTransaction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "successUser",
                    "args": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleBalance",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 238,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateDashboardData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 177,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TransactionChartComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { TransactionService } from '../../services/Transaction/transaction-service';\r\nimport { UserService } from '../../services/User/user-service';\r\nimport {\r\n  Transaction,\r\n  isCredit,\r\n  isDebit,\r\n  TRANSACTION_TYPE_LABELS\r\n} from '../../models/transaction';\r\nimport { systemConfig } from '../../../app.config';\r\nimport { TransactionData } from '../../models/transaction-data';\r\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\r\nimport { TransactionChartComponent } from '../../components/transaction-chart/transaction-chart.component';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, TransactionChartComponent],\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class DashboardComponent implements OnInit, OnDestroy {\r\n  userId: string = systemConfig.userId;\r\n  userName: string = '';\r\n  currentDate: string = '';\r\n  currentMonthName: string = '';\r\n  balance: string = '';\r\n  accountType: string = 'Conta Corrente';\r\n  totalEntries: string = '';\r\n  totalExits: string = '';\r\n  idUser: string = '';\r\n  transactionTypeLabels = TRANSACTION_TYPE_LABELS;\r\n\r\n  showBalance: boolean = true;\r\n  isLoading: boolean = true;\r\n\r\n  transactionData: TransactionData[] = [];\r\n  transactions: Transaction[] = [];\r\n  currentMonthTransactions: Transaction[] = [];\r\n  errorMessage: string = '';\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private transactionService: TransactionService,\r\n    private userService: UserService,\r\n    private transactionEventService: TransactionEventService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setCurrentDate();\r\n    this.fetchUser();\r\n    this.subscribeToTransactionEvents();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  subscribeToTransactionEvents(): void {\r\n    this.transactionEventService.transactionCreated$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(transaction => {\r\n        if (transaction.id_user === this.userId) {\r\n          this.transactions = [...this.transactions, transaction];\r\n          this.filterCurrentMonthTransactions();\r\n          this.updateDashboardData();\r\n        }\r\n      });\r\n\r\n    this.transactionEventService.transactionUpdated$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(transaction => {\r\n        if (transaction.id_user === this.userId) {\r\n          this.transactions = this.transactions.map(t =>\r\n            t.id === transaction.id ? transaction : t\r\n          );\r\n          this.filterCurrentMonthTransactions();\r\n          this.updateDashboardData();\r\n        }\r\n      });\r\n\r\n    this.transactionEventService.transactionDeleted$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(transactionId => {\r\n        const deletedTransaction = this.transactions.find(t => t.id === transactionId);\r\n        if (deletedTransaction && deletedTransaction.id_user === this.userId) {\r\n          this.transactions = this.transactions.filter(t => t.id !== transactionId);\r\n          this.filterCurrentMonthTransactions();\r\n          this.updateDashboardData();\r\n        }\r\n      });\r\n  }\r\n\r\n  setCurrentDate(): void {\r\n    const weekDays = [\r\n      'Domingo',\r\n      'Segunda-feira',\r\n      'Terça-feira',\r\n      'Quarta-feira',\r\n      'Quinta-feira',\r\n      'Sexta-feira',\r\n      'Sábado',\r\n    ];\r\n\r\n    const months = [\r\n      'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',\r\n      'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'\r\n    ];\r\n\r\n    const today = new Date();\r\n    const weekDay = weekDays[today.getDay()];\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    const month = String(today.getMonth() + 1).padStart(2, '0');\r\n    const year = today.getFullYear();\r\n    const hour = String(today.getHours()).padStart(2, '0');\r\n    const minute = String(today.getMinutes()).padStart(2, '0');\r\n\r\n    this.currentDate = `${weekDay}, ${day}/${month}/${year} ${hour}:${minute}`;\r\n    this.currentMonthName = months[today.getMonth()];\r\n  }\r\n\r\n  fetchUser(): void {\r\n    this.isLoading = true;\r\n    this.userService.getById(systemConfig.userId).subscribe({\r\n      next: (response) => this.successUser(response),\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        this.errorMessage = 'Erro ao buscar usuário.';\r\n        console.error('Error fetching user name:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  successUser(response: any): void {\r\n    this.errorMessage = '';\r\n    this.userName = response.name;\r\n    this.idUser = response.id;\r\n    this.fetchTransactions(this.idUser);\r\n  }\r\n\r\n  fetchTransactions(id: string): void {\r\n    this.transactionService.getByUserId(id).subscribe({\r\n      next: (response) => {\r\n        this.transactions = response;\r\n        this.filterCurrentMonthTransactions();\r\n        this.successTransaction();\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        this.errorMessage = 'Erro ao buscar transações.';\r\n        console.error('Error fetching transactions:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  filterCurrentMonthTransactions(): void {\r\n    const today = new Date();\r\n    const currentMonth = today.getMonth();\r\n    const currentYear = today.getFullYear();\r\n\r\n    this.currentMonthTransactions = this.transactions.filter(transaction => {\r\n      const transactionDate = new Date(transaction.date);\r\n      return transactionDate.getMonth() === currentMonth &&\r\n             transactionDate.getFullYear() === currentYear;\r\n    });\r\n  }\r\n\r\n  successTransaction(): void {\r\n    this.updateDashboardData();\r\n  }\r\n\r\n  updateDashboardData(): void {\r\n    let totalEntries = 0;\r\n    let totalExits = 0;\r\n\r\n    this.currentMonthTransactions.forEach((transaction) => {\r\n      if (isCredit(transaction.type)) {\r\n        totalEntries += transaction.amount;\r\n      }\r\n      if (isDebit(transaction.type)) {\r\n        totalExits += transaction.amount;\r\n      }\r\n    });\r\n\r\n    this.totalEntries = this.formatBalance(totalEntries);\r\n    this.totalExits = this.formatBalance(totalExits);\r\n    this.balance = this.formatBalance(totalEntries - totalExits);\r\n\r\n    const weeklyData: { [key: string]: { entries: number; exits: number } } = {\r\n      '1': { entries: 0, exits: 0 },\r\n      '2': { entries: 0, exits: 0 },\r\n      '3': { entries: 0, exits: 0 },\r\n      '4': { entries: 0, exits: 0 }\r\n    };\r\n\r\n    this.currentMonthTransactions.forEach((transaction) => {\r\n      const date = new Date(transaction.date);\r\n      const dayOfMonth = date.getDate();\r\n\r\n      let week = '1';\r\n      if (dayOfMonth >= 1 && dayOfMonth <= 7) {\r\n        week = '1';\r\n      } else if (dayOfMonth >= 8 && dayOfMonth <= 14) {\r\n        week = '2';\r\n      } else if (dayOfMonth >= 15 && dayOfMonth <= 21) {\r\n        week = '3';\r\n      } else {\r\n        week = '4';\r\n      }\r\n\r\n      if (isCredit(transaction.type)) {\r\n        weeklyData[week].entries += transaction.amount;\r\n      }\r\n      if (isDebit(transaction.type)) {\r\n        weeklyData[week].exits += transaction.amount;\r\n      }\r\n    });\r\n\r\n    this.transactionData = Object.entries(weeklyData).map(([day, data]) => ({\r\n      day: `Semana ${day}`,\r\n      entries: data.entries,\r\n      exits: data.exits,\r\n    }));\r\n  }\r\n\r\n  formatBalance(value: number): string {\r\n    return value.toLocaleString('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL',\r\n    });\r\n  }\r\n\r\n  toggleBalance(): void {\r\n    this.showBalance = !this.showBalance;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "transactionService",
                        "type": "TransactionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "transactionEventService",
                        "type": "TransactionEventService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "transactionService",
                        "type": "TransactionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "transactionEventService",
                        "type": "TransactionEventService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"p-4 sm:p-6 w-full max-w-full\">\r\n  <div *ngIf=\"isLoading\" class=\"flex flex-col items-center justify-center p-8\">\r\n    <p class=\"text-gray-600\">Carregando informações...</p>\r\n  </div>\r\n\r\n  <div *ngIf=\"!isLoading\">\r\n    <!-- Layout para telas maiores (Desktop) -->\r\n    <div class=\"hidden sm:flex flex-col sm:flex-row justify-between items-start gap-6 w-full\">\r\n      <div>\r\n        <h1 class=\"text-xl sm:text-2xl text-gray-900 font-bold\">\r\n          Olá, {{ userName }}!\r\n        </h1>\r\n        <p class=\"text-gray-500 mt-2 sm:mt-3 text-xs sm:text-sm\">\r\n          {{ currentDate }}\r\n        </p>\r\n      </div>\r\n      <div class=\"text-right w-full sm:w-auto mt-4 sm:mt-0\">\r\n        <div class=\"flex items-center justify-end\">\r\n          <p class=\"font-medium text-gray-700 mr-3 text-xl sm:text-2xl\">\r\n            Saldo\r\n          </p>\r\n          <button (click)=\"toggleBalance()\" class=\"focus:outline-none\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              class=\"h-5 w-5 text-gray-700\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n              />\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <p class=\"text-gray-500 mt-1 text-xs sm:text-sm\">{{ accountType }}</p>\r\n        <p\r\n          class=\"text-gray-900 mt-2 sm:mt-3 text-xl sm:text-2xl font-bold\"\r\n          *ngIf=\"showBalance\"\r\n        >\r\n          {{ balance }}\r\n        </p>\r\n        <p\r\n          class=\"text-gray-500 mt-2 sm:mt-3 text-xl sm:text-2xl font-bold\"\r\n          *ngIf=\"!showBalance\"\r\n        >\r\n          ****\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Layout para telas pequenas (Mobile) -->\r\n    <div class=\"flex flex-col sm:hidden items-center text-center w-full\">\r\n      <div class=\"flex flex-col mb-4\">\r\n        <h1 class=\"text-xl text-gray-900 font-bold\">Olá, {{ userName }}!</h1>\r\n        <p class=\"text-gray-500 text-xs\">{{ currentDate }}</p>\r\n      </div>\r\n\r\n      <!-- Separador entre saudação e saldo (apenas mobile) -->\r\n      <div class=\"w-full border-t-2 border-gray-200 mb-4\"></div>\r\n\r\n      <div class=\"flex flex-col\">\r\n        <div class=\"flex items-center justify-center\">\r\n          <p class=\"font-medium text-gray-700 text-lg\">Saldo</p>\r\n          <button (click)=\"toggleBalance()\" class=\"focus:outline-none ml-2\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              class=\"h-5 w-5 text-gray-700\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n              />\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <p class=\"text-gray-500 mt-1 text-xs\">{{ accountType }}</p>\r\n        <p class=\"text-gray-900 text-lg font-bold\" *ngIf=\"showBalance\">\r\n          {{ balance }}\r\n        </p>\r\n        <p class=\"text-gray-500 text-lg font-bold\" *ngIf=\"!showBalance\">****</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Separador principal entre cabeçalho e gráfico -->\r\n<div class=\"px-6\">\r\n  <div class=\"border-t-2 border-gray-200\"></div>\r\n</div>\r\n\r\n<!-- Título do gráfico -->\r\n<div class=\"px-6 pt-6 pb-6\" *ngIf=\"!isLoading\">\r\n  <h2 class=\"text-gray-900 text-base font-bold text-center sm:text-left\">\r\n    Transações de {{ currentMonthName }}\r\n  </h2>\r\n</div>\r\n\r\n<!-- Gráfico de transações -->\r\n<app-transaction-chart\r\n  *ngIf=\"!isLoading\"\r\n  [transactionData]=\"transactionData\"\r\n  [totalEntries]=\"totalEntries\"\r\n  [totalExits]=\"totalExits\"\r\n  class=\"block px-6 pt-2 pb-12\">\r\n</app-transaction-chart>\r\n\r\n<div\r\n  *ngIf=\"errorMessage\"\r\n  class=\"p-4 bg-red-100 text-red-700 rounded-md mx-6 mb-6\"\r\n>\r\n  {{ errorMessage }}\r\n</div>\r\n"
        },
        {
            "name": "DeleteModalComponent",
            "id": "component-DeleteModalComponent-faad358db1e94139c17b4d07fb02217f1fc971b339803db2d3537a1d18adf8637167d54de0702ba9a267030937f76d9272f82bc064d455bec10bf93674e0d4a3",
            "file": "src/app/shared/components/modal/delete-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delete-modal",
            "styleUrls": [
                "./delete-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./delete-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "'Deseja realmente deletar essa transação?'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cancel",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "confirm",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonComponent } from '../button/button.component';\r\n\r\n@Component({\r\n  selector: 'app-delete-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, ButtonComponent],\r\n  templateUrl: './delete-modal.component.html',\r\n  styleUrls: ['./delete-modal.component.scss']\r\n})\r\nexport class DeleteModalComponent {\r\n  @Input() isOpen: boolean = false;\r\n  @Input() message: string = 'Deseja realmente deletar essa transação?';\r\n  @Output() confirm = new EventEmitter<void>();\r\n  @Output() cancel = new EventEmitter<void>();\r\n} ",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .max-w-md {\r\n    max-width: 90%;\r\n  }\r\n} ",
                    "styleUrl": "./delete-modal.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div *ngIf=\"isOpen\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n  <div class=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full mx-4 relative\">\r\n    <button (click)=\"cancel.emit()\" class=\"absolute top-4 right-4 text-gray-500 hover:text-gray-700\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n      </svg>\r\n    </button>\r\n    <p class=\"text-black-900 text-lg mb-6 text-center\">{{ message }}</p>\r\n    <div class=\"flex justify-center gap-4\">\r\n      <app-button theme=\"outline-cyan-blue\" size=\"G\" label=\"Não\" (click)=\"cancel.emit()\" class=\"hover:text-white\"></app-button>\r\n      <app-button theme=\"primary\" size=\"G\" label=\"Sim\" (click)=\"confirm.emit()\" class=\"text-white\"></app-button>\r\n    </div>\r\n  </div>\r\n</div> "
        },
        {
            "name": "EditModalComponent",
            "id": "component-EditModalComponent-b934305a026f6ba82b78389b33a8c6bcd642234e69f01fa2000854bb7695de8915e50ea192f29621cb17ba8b00b85a5a8094eb92fa66e5e4becee73fff01d60b",
            "file": "src/app/shared/components/modal/edit-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-modal",
            "styleUrls": [
                "./edit-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "transaction",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Transaction | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cancel",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "save",
                    "defaultValue": "new EventEmitter<{ id: string; amount: number; description: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "amount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "amountFormatted",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "formatAmount",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAmountInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onlyNumbers",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonComponent } from '../button/button.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Transaction } from '../../models/transaction';\r\n\r\n@Component({\r\n  selector: 'app-edit-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, ButtonComponent, FormsModule],\r\n  templateUrl: './edit-modal.component.html',\r\n  styleUrls: ['./edit-modal.component.scss']\r\n})\r\nexport class EditModalComponent {\r\n  @Input() isOpen: boolean = false;\r\n  @Input() transaction: Transaction | null = null;\r\n  @Output() save = new EventEmitter<{ id: string; amount: number; description: string }>();\r\n  @Output() cancel = new EventEmitter<void>();\r\n\r\n  amount: number = 0;\r\n  description: string = '';\r\n  amountFormatted: string = '';\r\n\r\n  ngOnChanges(): void {\r\n    if (this.transaction) {\r\n      this.amount = this.transaction.amount;\r\n      this.description = this.transaction.description;\r\n      this.amountFormatted = this.formatAmount(this.amount);\r\n    }\r\n  }\r\n\r\n  onSave(): void {\r\n    if (this.transaction && this.transaction.id) {\r\n      this.save.emit({\r\n        id: this.transaction.id,\r\n        amount: this.amount,\r\n        description: this.description\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.cancel.emit();\r\n  }\r\n\r\n  formatAmount(value: number): string {\r\n    return value.toLocaleString('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL'\r\n    });\r\n  }\r\n\r\n  onlyNumbers(event: KeyboardEvent): boolean {\r\n    const pattern = /[0-9]/;\r\n    const inputChar = String.fromCharCode(event.charCode);\r\n    \r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onAmountInput(event: Event): void {\r\n    const input = event.target as HTMLInputElement;\r\n    let value = input.value.replace(/\\D/g, '');\r\n\r\n    value = value.substring(0, 12);\r\n\r\n    while (value.length < 3) {\r\n      value = '0' + value;\r\n    }\r\n\r\n    const cents = value.slice(-2);\r\n    let integer = value.slice(0, -2);\r\n    integer = integer.replace(/^0+/, '') || '0';\r\n    integer = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n\r\n    this.amountFormatted = `${integer},${cents}`;\r\n    this.amount = Number(integer.replace(/\\./g, '') + '.' + cents);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .max-w-md {\r\n    max-width: 90%;\r\n  }\r\n} ",
                    "styleUrl": "./edit-modal.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div *ngIf=\"isOpen\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n  <div class=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full mx-4 relative\">\r\n    <button (click)=\"onCancel()\" class=\"absolute top-4 right-4 text-gray-500 hover:text-gray-700\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n      </svg>\r\n    </button>\r\n    <h2 class=\"text-black-900 text-lg mb-4 text-center\">Editar Transação</h2>\r\n    <div class=\"mb-4\">\r\n      <label class=\"block text-black-900 mb-2\">Valor</label>\r\n      <input\r\n        type=\"text\"\r\n        [value]=\"amountFormatted\"\r\n        (input)=\"onAmountInput($event)\"\r\n        (keypress)=\"onlyNumbers($event)\"\r\n        class=\"w-full p-2 border border-gray-300 rounded\"\r\n      />\r\n    </div>\r\n    <div class=\"mb-4\">\r\n      <label class=\"block text-black-900 mb-2\">Descrição</label>\r\n      <input type=\"text\" [(ngModel)]=\"description\" class=\"w-full p-2 border border-gray-300 rounded\" />\r\n    </div>\r\n    <div class=\"flex justify-center gap-4\">\r\n      <app-button theme=\"outline-cyan-blue\" size=\"G\" label=\"Cancelar\" (click)=\"onCancel()\" ></app-button>\r\n      <app-button theme=\"primary\" size=\"G\" label=\"Salvar\" (click)=\"onSave()\"></app-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-d6a62387a5315e2f35fa4991ac058f1c4192123db5d4ff0f19a43e07bc522280930404cb03a6155ce41fadc4ac646fdcc426fbf0ac0b2493108f4d3012b64388",
            "file": "src/app/shared/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "company",
                    "defaultValue": "systemConfig.company",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "routerEventsSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "version",
                    "defaultValue": "systemConfig.version",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "year",
                    "defaultValue": "systemConfig.year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateLoginState",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                },
                {
                    "name": "IconWhatsappComponent",
                    "type": "component"
                },
                {
                    "name": "IconInstagramComponent",
                    "type": "component"
                },
                {
                    "name": "IconYoutubeComponent",
                    "type": "component"
                },
                {
                    "name": "IconLogoComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { systemConfig } from '../../../app.config';\r\n\r\nimport { TextComponent } from '../text/text.component';\r\nimport { IconWhatsappComponent } from '../../assets/icons/icon-whatsapp.component';\r\nimport { IconInstagramComponent } from '../../assets/icons/icon-instagram.component';\r\nimport { IconYoutubeComponent } from '../../assets/icons/icon-youtube.component';\r\nimport { IconLogoComponent } from '../../assets/icons/icon-logo.component';\r\nimport { ButtonComponent } from \"../button/button.component\";\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    TextComponent,\r\n    IconWhatsappComponent,\r\n    IconInstagramComponent,\r\n    IconYoutubeComponent,\r\n    IconLogoComponent,\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss'],\r\n})\r\nexport class FooterComponent implements OnInit, OnDestroy {\r\n  isLoggedIn: boolean = false;\r\n  company: string = systemConfig.company;\r\n  version: string = systemConfig.version;\r\n  year: number = systemConfig.year;\r\n  private routerEventsSubscription: any;\r\n\r\n  constructor(private readonly router: Router) {\r\n    this.updateLoginState(this.router.url);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.routerEventsSubscription = this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe((event: NavigationEnd) => {\r\n        this.updateLoginState(event.urlAfterRedirects);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.routerEventsSubscription) {\r\n      this.routerEventsSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private updateLoginState(url: string) {\r\n    this.isLoggedIn = systemConfig.loggedPages.includes(url);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<footer class=\"bg-cyan-blue-500 dark:dark:bg-blue-violet-500\">\r\n  @if(!isLoggedIn) {\r\n  <div class=\"container\">\r\n    <div class=\"flex flex-col lg:flex-row p-12 justify-center text-center xl:text-start gap-9\">\r\n      <div class=\"flex flex-col gap-4 w-full lg:w-72\">\r\n        <app-text variant=\"text-regular\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n          Serviços\r\n        </app-text>\r\n        <ul>\r\n          <li class=\"flex flex-col gap-4\">\r\n            <app-text variant=\"text-regular-special\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n              Conta corrente\r\n            </app-text>\r\n            <app-text variant=\"text-regular-special\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n              Conta PJ\r\n            </app-text>\r\n            <app-text variant=\"text-regular-special\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n              Cartão de crédito\r\n            </app-text>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"flex flex-col gap-4 w-full lg:w-72\">\r\n        <app-text variant=\"text-regular\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n          Contato\r\n        </app-text>\r\n        <ul>\r\n          <li class=\"flex flex-col gap-4\">\r\n            <app-text variant=\"text-regular-special\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n              0800 004 250 08\r\n            </app-text>\r\n            <app-text variant=\"text-regular-special\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n              meajuda&#64;bytebank.com.br\r\n            </app-text>\r\n            <app-text variant=\"text-regular-special\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n              ouvidoria&#64;bytebank.com.br\r\n            </app-text>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"flex flex-col gap-6 w-full lg:w-72 text-center\">\r\n        <app-text variant=\"text-regular\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n          © Copyright {{ year }} {{ company }}\r\n        </app-text>\r\n\r\n        <app-icon-logo class=\"text-white dark:text-gray-200 m-auto\"></app-icon-logo>\r\n\r\n        <div class=\"flex flex-row gap-6 items-center justify-center\">\r\n          <app-button size=\"P\" label=\"\">\r\n            <app-icon-whatsapp icon-left class=\"text-white dark:text-gray-200\"></app-icon-whatsapp>\r\n          </app-button>\r\n          <app-button size=\"P\" label=\"\">\r\n            <app-icon-instagram icon-left class=\"text-white dark:text-gray-200\"></app-icon-instagram>\r\n          </app-button>\r\n          <app-button size=\"P\" label=\"\">\r\n            <app-icon-youtube icon-left class=\"text-white dark:text-gray-200\"></app-icon-youtube>\r\n          </app-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  } @else {\r\n  <div class=\"flex py-5 px-9 justify-between\">\r\n    <app-text variant=\"text-small\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n      V.{{ version }}\r\n    </app-text>\r\n    <app-text variant=\"text-small-bold\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n      © Copyright {{ year }} {{ company }}\r\n    </app-text>\r\n  </div>\r\n  }\r\n</footer>\r\n"
        },
        {
            "name": "GraficComponent",
            "id": "component-GraficComponent-4e26c9c1e845c9afbe08ef809189f14032939f5a820a270ebb3e7f559cc7fd730e0edd85073b69430327633d7858d7426f9435e52b1d08e2f3c42e971ff3b46a",
            "file": "src/app/shared/components/grafic/grafic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-grafic",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./grafic.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "barMaxHeight",
                    "defaultValue": "170",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "maxChartValue",
                    "defaultValue": "20000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "transactionData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "TransactionData[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\ninterface TransactionData {\r\n  day: string;\r\n  entries: number;\r\n  exits: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-grafic',\r\n  imports: [CommonModule],\r\n  templateUrl: './grafic.component.html',\r\n  styleUrl: './grafic.component.scss',\r\n})\r\n\r\nexport class GraficComponent {\r\n  @Input() transactionData: TransactionData[] = [];\r\n  @Input() maxChartValue = 20000;\r\n  @Input() barMaxHeight = 170;\r\n}\r\n",
            "styleUrl": "./grafic.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"relative h-48 mx-auto w-full sm:w-4/5 lg:w-4/5\">\r\n  <div class=\"relative h-full\">\r\n    <!-- Y-axis labels -->\r\n    <div class=\"absolute left-0 h-full flex flex-col justify-between pointer-events-none\">\r\n      <span class=\"text-right text-xs text-gray-500 pr-1 w-10\">{{ maxChartValue }}</span>\r\n      <span class=\"text-right text-xs text-gray-500 pr-1 w-10\">{{ maxChartValue * 0.75 }}</span>\r\n      <span class=\"text-right text-xs text-gray-500 pr-1 w-10\">{{ maxChartValue * 0.5 }}</span>\r\n      <span class=\"text-right text-xs text-gray-500 pr-1 w-10\">{{ maxChartValue * 0.25 }}</span>\r\n      <span class=\"text-right text-xs text-gray-500 pr-1 w-10\">0</span>\r\n    </div>\r\n\r\n    <!-- Chart grid -->\r\n    <div class=\"absolute inset-0 ml-10 border border-gray-200\">\r\n      <div class=\"absolute w-full h-1/4 border-b border-gray-200\"></div>\r\n      <div class=\"absolute w-full h-2/4 border-b border-gray-200\"></div>\r\n      <div class=\"absolute w-full h-3/4 border-b border-gray-200\"></div>\r\n      <div class=\"absolute h-full w-1/5 border-r border-gray-200\"></div>\r\n      <div class=\"absolute h-full w-2/5 border-r border-gray-200 left-1/5\"></div>\r\n      <div class=\"absolute h-full w-3/5 border-r border-gray-200 left-2/5\"></div>\r\n      <div class=\"absolute h-full w-4/5 border-r border-gray-200 left-3/5\"></div>\r\n    </div>\r\n\r\n    <!-- Bars -->\r\n    <div class=\"absolute inset-0 ml-10 flex justify-around items-end\">\r\n      <ng-container *ngFor=\"let data of transactionData; let i = index\">\r\n        <div class=\"flex items-end justify-center w-1/5 h-full\">\r\n          <div class=\"flex items-end space-x-1 sm:space-x-2 mb-0\">\r\n            <div\r\n              class=\"w-3 sm:w-5 md:w-7\"\r\n              [style.height.px]=\"(data.exits / maxChartValue) * 170\"\r\n              [style.backgroundColor]=\"'#FF5031'\"\r\n            ></div>\r\n            <div\r\n              class=\"w-3 sm:w-5 md:w-7\"\r\n              [style.height.px]=\"(data.entries / maxChartValue) * barMaxHeight\"\r\n              [style.backgroundColor]=\"'#004D61'\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <!-- X-axis labels -->\r\n    <div class=\"absolute w-full -bottom-6 ml-10 pr-8 grid grid-cols-5 text-center\">\r\n      <ng-container *ngFor=\"let data of transactionData\">\r\n        <span class=\"text-gray-600 text-xs\">{{ data.day }}</span>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-ccc4769888c4d33049c1c9695870ef291b3b5c63d80cb3958d1ac7ab3a05670fd74f18758cc518eca0613760139072778bcf947852817f2df52fa9839cd98b50",
            "file": "src/app/shared/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "clickListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "menuOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "menuRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 60,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'menuRef'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "mobile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "resizeListener",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "routerEventsSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tablet",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "userId",
                    "defaultValue": "systemConfig.userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "userName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [
                {
                    "name": "checkScreen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "enableScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "fetchUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "goToPanel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleClickOutside",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setMenuRef",
                    "args": [
                        {
                            "name": "ref",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ref",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateLoginState",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                },
                {
                    "name": "IconExitComponent",
                    "type": "component"
                },
                {
                    "name": "IconHamburgerComponent",
                    "type": "component"
                },
                {
                    "name": "IconDarkmodeComponent",
                    "type": "component"
                },
                {
                    "name": "IconBellComponent",
                    "type": "component"
                },
                {
                    "name": "IconAccountCircleComponent",
                    "type": "component"
                },
                {
                    "name": "IconLogoComponent",
                    "type": "component"
                },
                {
                    "name": "IconArrowdownComponent",
                    "type": "component"
                },
                {
                    "name": "MenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { ThemeService } from '../../services/Theme/theme.service'\r\nimport { UserService } from '../../services/User/user-service';\r\n\r\nimport { IconExitComponent } from '../../assets/icons/icon-exit.component';\r\nimport { ButtonComponent } from '../button/button.component';\r\nimport { TextComponent } from '../text/text.component';\r\nimport { systemConfig } from '../../../app.config';\r\nimport { IconHamburgerComponent } from \"../../assets/icons/icon-hamburger.component\";\r\nimport { IconDarkmodeComponent } from \"../../assets/icons/icon-darkmode.component\";\r\nimport { IconBellComponent } from \"../../assets/icons/icon-bell.component\";\r\nimport { IconAccountCircleComponent } from \"../../assets/icons/icon-account-circle.component\";\r\nimport { IconLogoComponent } from '../../assets/icons/icon-logo.component';\r\nimport { IconArrowdownComponent } from '../../assets/icons/icon-arrowdown.component';\r\nimport { MenuComponent } from \"../menu/menu.component\";\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ButtonComponent,\r\n    TextComponent,\r\n    IconExitComponent,\r\n    IconHamburgerComponent,\r\n    IconDarkmodeComponent,\r\n    IconBellComponent,\r\n    IconAccountCircleComponent,\r\n    IconLogoComponent,\r\n    IconArrowdownComponent,\r\n    MenuComponent\r\n  ],\r\n  templateUrl: './header.component.html',\r\n  styleUrl: './header.component.scss',\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  userId: string = systemConfig.userId;\r\n  isLoggedIn: boolean = true;\r\n  mobile: boolean = false;\r\n  tablet: boolean = false;\r\n  menuOpen: boolean = false;\r\n\r\n  userName: string = '';\r\n\r\n  isLoading: boolean = true;\r\n\r\n  constructor(\r\n    public themeService: ThemeService,\r\n    private readonly router: Router,\r\n    private readonly userService: UserService,\r\n  ) {\r\n    const path = window.location.pathname;\r\n    this.isLoggedIn = systemConfig.loggedPages.includes(path);\r\n  }\r\n\r\n  @ViewChild('menuRef') menuRef?: ElementRef;\r\n  private resizeListener = () => this.checkScreen();\r\n  private clickListener!: (event: MouseEvent) => void;\r\n  private routerEventsSubscription: any;\r\n\r\n  ngOnInit() {\r\n    this.checkScreen();\r\n    window.addEventListener('resize', this.resizeListener);\r\n\r\n    this.clickListener = this.handleClickOutside.bind(this);\r\n    document.addEventListener('click', this.clickListener, true);\r\n\r\n    if (this.menuOpen) {\r\n      document.body.classList.add('overflow-hidden');\r\n    }\r\n\r\n    this.routerEventsSubscription = this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe((event: NavigationEnd) => {\r\n        this.updateLoginState(event.urlAfterRedirects);\r\n    });\r\n    this.fetchUser();\r\n    this.updateLoginState(this.router.url);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    window.removeEventListener('resize', this.resizeListener);\r\n    document.removeEventListener('click', this.clickListener, true);\r\n    this.enableScroll();\r\n\r\n    if (this.routerEventsSubscription) {\r\n      this.routerEventsSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private updateLoginState(url: string) {\r\n    this.isLoggedIn = systemConfig.loggedPages.includes(url);\r\n  }\r\n\r\n  fetchUser(): void {\r\n    this.isLoading = true;\r\n    this.userService.getById(systemConfig.userId).subscribe({\r\n      next: (response: any) => {\r\n        console.log('Usuário logado:', response);\r\n        this.userName = response.name;\r\n      },\r\n      error: (error: any) => {\r\n        this.isLoading = false;\r\n        console.error('Error fetching user name:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  toggleDarkMode() {\r\n    this.themeService.toggleDarkMode();\r\n  }\r\n\r\n  checkScreen(): void {\r\n    const width = window.innerWidth;\r\n    this.mobile = width <= 639;\r\n    this.tablet = width >= 640 && width <= 1279;\r\n  }\r\n\r\n  toggleMenu(event?: MouseEvent): void {\r\n\r\n    if (event) event.stopPropagation();\r\n\r\n    this.menuOpen = !this.menuOpen;\r\n    if (this.menuOpen) {\r\n      document.body.classList.add('overflow-hidden');\r\n    } else {\r\n      this.enableScroll();\r\n    }\r\n  }\r\n\r\n  private enableScroll(): void {\r\n    document.body.classList.remove('overflow-hidden');\r\n  }\r\n\r\n  private handleClickOutside(event: MouseEvent): void {\r\n    if (!this.menuOpen) return;\r\n\r\n    const target = event.target as Node;\r\n    const menuElement = this.menuRef?.nativeElement;\r\n    const hamburgerButton = document.querySelector('.app-icon-hamburger')?.parentElement;\r\n\r\n    if (menuElement && menuElement.contains(target)) return;\r\n\r\n    if (hamburgerButton && hamburgerButton.contains(target)) return;\r\n\r\n    this.closeMenu();\r\n  }\r\n\r\n  get showLandingMobileMenu(): boolean {\r\n    const condition = !this.isLoggedIn && (this.mobile || this.tablet) && this.menuOpen;\r\n\r\n    if (condition) {\r\n      document.body.classList.add('overflow-hidden');\r\n    } else {\r\n      this.enableScroll();\r\n    }\r\n\r\n    return condition;\r\n  }\r\n\r\n  get showLandingDesktopMenu(): boolean {\r\n    return !this.isLoggedIn && !this.mobile;\r\n  }\r\n\r\n  get showLoggedMobileMenu(): boolean {\r\n    return this.isLoggedIn && this.mobile && this.menuOpen;\r\n  }\r\n\r\n  get showLoggedTabletMenu(): boolean {\r\n    return this.isLoggedIn && this.tablet;\r\n  }\r\n\r\n  setMenuRef(ref: ElementRef): void {\r\n    this.menuRef = ref;\r\n  }\r\n\r\n  closeMenu(): void {\r\n    this.menuOpen = false;\r\n    this.enableScroll();\r\n  }\r\n\r\n  goToPanel(): void {\r\n    this.router.navigate(['/panel']);\r\n  }\r\n\r\n\r\n}\r\n",
            "styleUrl": "./header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "showLandingMobileMenu": {
                    "name": "showLandingMobileMenu",
                    "getSignature": {
                        "name": "showLandingMobileMenu",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 154
                    }
                },
                "showLandingDesktopMenu": {
                    "name": "showLandingDesktopMenu",
                    "getSignature": {
                        "name": "showLandingDesktopMenu",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 166
                    }
                },
                "showLoggedMobileMenu": {
                    "name": "showLoggedMobileMenu",
                    "getSignature": {
                        "name": "showLoggedMobileMenu",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 170
                    }
                },
                "showLoggedTabletMenu": {
                    "name": "showLoggedTabletMenu",
                    "getSignature": {
                        "name": "showLoggedTabletMenu",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 174
                    }
                }
            },
            "templateData": "<header class=\"bg-cyan-blue-500 dark:bg-blue-violet-500 shadow-x-light relative\">\r\n  <div class=\"flex items-center justify-between container\" [ngClass]=\"{ 'h-24': !isLoggedIn, 'h-[70px]': isLoggedIn }\">\r\n    <!-- Usuário não logado (LandingPage) -->\r\n      @if(!isLoggedIn) {\r\n        @if(!mobile && !tablet) {\r\n          <ul class=\"flex items-center gap-10\">            \r\n            <li>\r\n              <a href=\"/\">\r\n                <app-icon-logo class=\"text-white m-auto\"></app-icon-logo>\r\n              </a>\r\n            </li>\r\n            \r\n            <li>\r\n              <a href=\"#sobre\" class=\"text-white hover:text-orange-500 dark:hover:text-gray-250 font-lato text-[18px] font-semibold transition-all\">\r\n                Sobre\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#servico\" class=\"text-white hover:text-orange-500 dark:hover:text-gray-250 font-lato text-[18px] font-semibold transition-all\">\r\n                Serviço\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div class=\"flex items-center gap-6\">\r\n            <app-button theme=\"secondary\" label=\"Abrir minha conta\" size=\"P\"></app-button>\r\n            \r\n            <app-button theme=\"ghost-white\" label=\"Já tenho conta\" size=\"P\" (click)=\"goToPanel()\">\r\n              <app-icon-exit icon-right class=\"text-white dark:text-gray-200 hover:dark:text-gray-250\" />\r\n            </app-button>\r\n\r\n            <app-button (click)=\"toggleDarkMode()\" size=\"P\" label=\"\" [theme]=\"'primary'\">\r\n              <app-icon-darkmode icon-left class=\"text-white dark:text-gray-200\"></app-icon-darkmode>\r\n            </app-button>\r\n\r\n          </div>\r\n        } @else { \r\n          <div class=\"flex justify-between items-center w-full\">\r\n            <a href=\"/\">\r\n              <app-icon-logo class=\"text-white m-auto\"></app-icon-logo>\r\n            </a>\r\n            <div class=\"flex gap-6\">\r\n              <app-button (click)=\"toggleDarkMode()\" size=\"P\" label=\"\" >\r\n                <app-icon-darkmode icon-left class=\"text-white\"></app-icon-darkmode>\r\n              </app-button>\r\n              <app-button size=\"P\" label=\"\" (click)=\"toggleMenu()\">\r\n                <app-icon-hamburger icon-left class=\"text-white\"></app-icon-hamburger>\r\n              </app-button>\r\n            </div>\r\n          </div>\r\n        }\r\n      } @else {\r\n        @if(!mobile && !tablet) {\r\n          <a href=\"/\">\r\n            <app-icon-logo class=\"text-white m-auto\"></app-icon-logo>\r\n          </a>\r\n          <div class=\"flex items-center gap-2\">\r\n            <app-text variant=\"text-small\" color=\"text-white\">\r\n              {{userName}}\r\n            </app-text>\r\n            <app-button (click)=\"toggleDarkMode()\" size=\"P\" label=\"\">\r\n              <app-icon-darkmode icon-left class=\"text-white\"></app-icon-darkmode>\r\n            </app-button>\r\n            <app-button size=\"P\" label=\"\">\r\n              <app-icon-bell icon-left class=\"text-white\"></app-icon-bell>\r\n            </app-button>\r\n            <app-button size=\"P\" label=\"\">\r\n              <app-icon-account-circle icon-left class=\"text-white\"></app-icon-account-circle>\r\n              <app-icon-arrowdown icon-left class=\"text-white\"></app-icon-arrowdown>\r\n            </app-button>\r\n          </div>\r\n        } @else if(tablet) {\r\n          <a href=\"/\">\r\n            <app-icon-logo class=\"text-white m-auto\"></app-icon-logo>\r\n          </a>\r\n          <div class=\"flex items-center gap-6\">\r\n            <app-text variant=\"text-small\" color=\"text-white\">{{userName}}</app-text>\r\n            <div>\r\n              <app-button size=\"P\" label=\"\">\r\n                <app-icon-account-circle icon-left class=\"text-white\"></app-icon-account-circle>\r\n                <app-icon-arrowdown icon-left class=\"text-white\"></app-icon-arrowdown>\r\n              </app-button>\r\n            </div>\r\n          </div>\r\n        } @else {\r\n          <a href=\"/\">\r\n            <app-icon-logo class=\"text-white m-auto\"></app-icon-logo>\r\n          </a>\r\n          <app-button size=\"P\" label=\"\" (click)=\"toggleMenu()\">\r\n            <app-icon-hamburger icon-left class=\"text-white\"></app-icon-hamburger>\r\n          </app-button>\r\n        }\r\n      }\r\n  </div>\r\n\r\n  <app-menu\r\n    [isLoggedIn]=\"isLoggedIn\"\r\n    [mobile]=\"mobile\"\r\n    [tablet]=\"tablet\"\r\n    [menuOpen]=\"menuOpen\"\r\n    [menuRef]=\"menuRef\"\r\n    (closeMenu)=\"closeMenu()\"\r\n    (menuRefReady)=\"setMenuRef($event)\"\r\n  >\r\n  </app-menu>\r\n\r\n</header>\r\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-d9019d104f61d13f2e31c9a4021882cec99508bde5ab6121e80f936a1fc3346b6dbd715955f97bc51929b4b929f4c0aac05dd80f1ede8013d792f7526bbd24ad",
            "file": "src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputs",
                    "defaultValue": "{\r\n    class: 'text-white dark:text-gray-200 w-24 h-24',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "vantagens",
                    "defaultValue": "[\r\n    {\r\n      titulo: 'Conta e cartão gratuitos',\r\n      descricao: 'Conta digital, sem custo fixo e sem tarifa de manutenção.',\r\n      icon: IconGiftComponent,\r\n    },\r\n    {\r\n      titulo: 'Saques sem custo',\r\n      descricao:\r\n        'Você pode sacar gratuitamente 4x por mês de qualquer Banco 24h.',\r\n      icon: IconOnComponent,\r\n    },\r\n    {\r\n      titulo: 'Cartão internacional',\r\n      descricao:\r\n        'Você pode acumular pontos com suas compras no crédito sem pagar mensalidade!',\r\n      icon: IconStarComponent,\r\n    },\r\n    {\r\n      titulo: 'Proteção digital',\r\n      descricao:\r\n        'Seus dispositivos móveis (computador e laptop) protegidos por uma mensalidade simbólica.',\r\n      icon: IconNotebookComponent,\r\n    },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TextComponent } from '../../shared/components/text/text.component';\r\n\r\nimport { IconGiftComponent } from '../../shared/assets/icons/icon-gift.component';\r\nimport { IconOnComponent } from '../../shared/assets/icons/icon-on.component';\r\nimport { IconStarComponent } from '../../shared/assets/icons/icon-star.component';\r\nimport { IconNotebookComponent } from '../../shared/assets/icons/icon-notebook.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  standalone: true,\r\n  imports: [CommonModule, TextComponent],\r\n  templateUrl: './home.component.html',\r\n  styleUrl: './home.component.scss',\r\n})\r\nexport class HomeComponent {\r\n  vantagens = [\r\n    {\r\n      titulo: 'Conta e cartão gratuitos',\r\n      descricao: 'Conta digital, sem custo fixo e sem tarifa de manutenção.',\r\n      icon: IconGiftComponent,\r\n    },\r\n    {\r\n      titulo: 'Saques sem custo',\r\n      descricao:\r\n        'Você pode sacar gratuitamente 4x por mês de qualquer Banco 24h.',\r\n      icon: IconOnComponent,\r\n    },\r\n    {\r\n      titulo: 'Cartão internacional',\r\n      descricao:\r\n        'Você pode acumular pontos com suas compras no crédito sem pagar mensalidade!',\r\n      icon: IconStarComponent,\r\n    },\r\n    {\r\n      titulo: 'Proteção digital',\r\n      descricao:\r\n        'Seus dispositivos móveis (computador e laptop) protegidos por uma mensalidade simbólica.',\r\n      icon: IconNotebookComponent,\r\n    },\r\n  ];\r\n\r\n  inputs = {\r\n    class: 'text-white dark:text-gray-200 w-24 h-24',\r\n  };\r\n}\r\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section id=\"sobre\" class=\"bg-primary-gradient dark:bg-primary-gradient-dark\">\r\n  <div class=\"container flex flex-col gap-12 py-12\">\r\n    <!-- Primeira dobra -->\r\n    <div class=\"flex flex-col-reverse md:flex-col xl:flex-row justify-center items-center gap-12 xl:gap-16\">\r\n      <div class=\"w-full max-w-full md:max-w-[470px] flex justify-center text-center\">\r\n        <app-text variant=\"title-bold\" as=\"h1\" color=\"text-white dark:text-gray-200\">\r\n          Experimente mais liberdade no controle da sua vida financeira. Crie\r\n          sua conta com a gente!\r\n        </app-text>\r\n      </div>\r\n      <img src=\"../../../assets/imgs/grafic.svg\" alt=\"\" />\r\n    </div>\r\n\r\n    <!-- Segunda Dobra -->\r\n    <div id=\"servico\" class=\"flex flex-col gap-9 text-center\">\r\n      <app-text variant=\"title-bold\" as=\"h1\" color=\"text-white dark:text-gray-200\">\r\n        Vantagens do nosso banco:\r\n      </app-text>\r\n\r\n      <div class=\"flex flex-wrap lg:flex-row justify-center lg:justify-between gap-12 xl:py-[75px]\">\r\n        <div class=\"flex flex-col lg:col-span-2 items-center text-center gap-9 w-[260px]\"\r\n          *ngFor=\"let vantagem of vantagens\"\r\n        >\r\n          <ng-container\r\n            *ngComponentOutlet=\"vantagem.icon; inputs: inputs\">\r\n          </ng-container>\r\n\r\n          <app-text variant=\"subtitle\" as=\"h2\" color=\"text-white dark:text-gray-200\">\r\n            {{ vantagem.titulo }}\r\n          </app-text>\r\n\r\n          <app-text variant=\"text-regular\" as=\"p\" color=\"text-white dark:text-gray-200\">\r\n            {{ vantagem.descricao }}\r\n          </app-text>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n"
        },
        {
            "name": "IconAccountCircleComponent",
            "id": "component-IconAccountCircleComponent-af9a62d4a64543db0dfd3c1f4f478f6c8c1476b19e7b5c57d0086f5059c0f17073927ec042589099b4caa16f969984cff56407794d98681be8234973decc9b1c",
            "file": "src/app/shared/assets/icons/icon-account-circle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-account-circle",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-account-circle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-account-circle',\r\n  imports: [CommonModule],\r\n  templateUrl: './icon-account-circle.component.html',\r\n  styleUrl: './icon-account-circle.component.scss'\r\n})\r\nexport class IconAccountCircleComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-account-circle.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n  <g clip-path=\"url(#clip0_13_10)\">\r\n    <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 6C13.93 6 15.5 7.57 15.5 9.5C15.5 11.43 13.93 13 12 13C10.07 13 8.5 11.43 8.5 9.5C8.5 7.57 10.07 6 12 6ZM12 20C9.97 20 7.57 19.18 5.86 17.12C7.55 15.8 9.68 15 12 15C14.32 15 16.45 15.8 18.14 17.12C16.43 19.18 14.03 20 12 20Z\" fill=\"currentColor\"/>\r\n  </g>\r\n  <defs>\r\n    <clipPath id=\"clip0_13_10\">\r\n      <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n    </clipPath>\r\n  </defs>\r\n</svg>"
        },
        {
            "name": "IconArrowdownComponent",
            "id": "component-IconArrowdownComponent-ed1c1789e1ce08391ac31fbf48d1d61341ec2438ac58ca5f6c8909cd15b0f97dd734acdb5f36287b72eb939fec07ddbcea07c45a7d37dd6a6d2f9bc2d4b43d5a",
            "file": "src/app/shared/assets/icons/icon-arrowdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-arrowdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-arrowdown.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-arrowdown',\r\n  imports: [CommonModule],\r\n  templateUrl: './icon-arrowdown.component.html',\r\n  styleUrl: './icon-arrowdown.component.scss'\r\n})\r\nexport class IconArrowdownComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-arrowdown.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n  <g clip-path=\"url(#clip0_166_571)\">\r\n    <path d=\"M7 10L12 15L17 10H7Z\" fill=\"currentColor\"/>\r\n  </g>\r\n  <defs>\r\n    <clipPath id=\"clip0_166_571\">\r\n      <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n    </clipPath>\r\n  </defs>\r\n</svg>"
        },
        {
            "name": "IconArrowDownLeftComponent",
            "id": "component-IconArrowDownLeftComponent-231c51e080289452d04061d02a62ffe0206f6fb9875085b569ea5ce2a690cb713ef31c9289b4532abd15446821c95f4bdb6ec057a2b29ebf8114388900f89246",
            "file": "src/app/shared/assets/icons/icon-arrow-down-left.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-arrow-down-left",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-arrow-down-left.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-arrow-down-left',\r\n  imports: [],\r\n  templateUrl: './icon-arrow-down-left.component.html',\r\n  styleUrl: './icon-arrow-down-left.component.scss'\r\n})\r\nexport class IconArrowDownLeftComponent {\r\n\r\n}\r\n",
            "styleUrl": "./icon-arrow-down-left.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\r\n    <g clip-path=\"url(#clip0_24_1161)\">\r\n        <path d=\"M13.3333 15H5V6.66667H7.5V10.6417L13.3167 5L15 6.69167L9.29167 12.5H13.3333V15Z\" fill=\"currentColor\" />\r\n    </g>\r\n    <defs>\r\n        <clipPath id=\"clip0_24_1161\">\r\n            <rect width=\"20\" height=\"20\" fill=\"white\" />\r\n        </clipPath>\r\n    </defs>\r\n</svg>"
        },
        {
            "name": "IconArrowPencilComponent",
            "id": "component-IconArrowPencilComponent-44973e226ce366ec58735f57d18aabacbd074102400a4d8b6352c01daf90ba6f791885f2dfe50a6ac8bfe89eda98ed41a681592c6a811997a6e917431fe785a7",
            "file": "src/app/shared/assets/icons/icon-arrow-pencil.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-arrow-pencil",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-arrow-pencil.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-arrow-pencil',\r\n  imports: [],\r\n  templateUrl: './icon-arrow-pencil.component.html',\r\n  styleUrl: './icon-arrow-pencil.component.scss'\r\n})\r\nexport class IconArrowPencilComponent {\r\n\r\n}\r\n",
            "styleUrl": "./icon-arrow-pencil.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"21\" height=\"20\" viewBox=\"0 0 21 20\" fill=\"none\">\r\n    <path d=\"M16.6834 7.43749L13.1418 3.93749L14.3084 2.77082C14.6279 2.45138 15.0204 2.29166 15.4859 2.29166C15.9509 2.29166 16.3432 2.45138 16.6626 2.77082L17.8293 3.93749C18.1487 4.25693 18.3154 4.64249 18.3293 5.09416C18.3432 5.54527 18.1904 5.93055 17.8709 6.24999L16.6834 7.43749ZM3.93343 17.5C3.69732 17.5 3.49954 17.42 3.3401 17.26C3.1801 17.1005 3.1001 16.9028 3.1001 16.6667V14.3125C3.1001 14.2014 3.12093 14.0939 3.1626 13.99C3.20426 13.8855 3.26676 13.7917 3.3501 13.7083L11.9334 5.12499L15.4751 8.66666L6.89176 17.25C6.80843 17.3333 6.71482 17.3958 6.61093 17.4375C6.50649 17.4792 6.39871 17.5 6.2876 17.5H3.93343Z\" fill=\"currentColor\"/>\r\n  </svg>"
        },
        {
            "name": "IconArrowRightComponent",
            "id": "component-IconArrowRightComponent-b1e2a531876493e69d8f93def028a7fa236f4c46c78814b1a7eb699f183cbb115a1f33e2cb97f5d604b472b7b990ea2d095b30422c418077053126326f9e7ee3",
            "file": "src/app/shared/assets/icons/icon-arrow-right.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-arrow-right",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-arrow-right.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-arrow-right',\r\n  standalone: true,\r\n  templateUrl: './icon-arrow-right.component.html',\r\n  styleUrl: './icon-arrow-right.component.scss',\r\n})\r\nexport class IconArrowRightComponent {}\r\n",
            "styleUrl": "./icon-arrow-right.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg width=\"20\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <g clip-path=\"url(#clip0_15_176)\">\r\n    <path\r\n      d=\"M8.58984 16.59L13.1698 12L8.58984 7.41L9.99984 6L15.9998 12L9.99984 18L8.58984 16.59Z\"\r\n      fill=\"#004D61\"\r\n    />\r\n  </g>\r\n</svg>\r\n"
        },
        {
            "name": "IconBellComponent",
            "id": "component-IconBellComponent-2efb4be17cdbd708dd8daec6a8847e424a4b4ad3b4b888b2a706b54828ba4c8a3aee52de180cad518094e099f29cb93f809a119f0d390a5a1954c6f561561712",
            "file": "src/app/shared/assets/icons/icon-bell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-bell",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-bell.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-bell',\r\n  imports: [CommonModule],\r\n  templateUrl: './icon-bell.component.html',\r\n  styleUrl: './icon-bell.component.scss'\r\n})\r\nexport class IconBellComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-bell.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n  <g clip-path=\"url(#clip0_15_187)\">\r\n    <path d=\"M7.57979 4.08L6.14979 2.65C3.74978 4.48 2.16979 7.3 2.02979 10.5H4.02979C4.17979 7.85 5.53979 5.53 7.57979 4.08ZM19.9698 10.5H21.9698C21.8198 7.3 20.2398 4.48 17.8498 2.65L16.4298 4.08C18.4498 5.53 19.8198 7.85 19.9698 10.5ZM17.9998 11C17.9998 7.93 16.3598 5.36 13.4998 4.68V4C13.4998 3.17 12.8298 2.5 11.9998 2.5C11.1698 2.5 10.4998 3.17 10.4998 4V4.68C7.62979 5.36 5.99979 7.92 5.99979 11V16L3.99979 18V19H19.9998V18L17.9998 16V11ZM11.9998 22C12.1398 22 12.2698 21.99 12.3998 21.96C13.0498 21.82 13.5798 21.38 13.8398 20.78C13.9398 20.54 13.9898 20.28 13.9898 20H9.98979C9.99979 21.1 10.8898 22 11.9998 22Z\" fill=\"currentColor\"/>\r\n  </g>\r\n  <defs>\r\n    <clipPath id=\"clip0_15_187\">\r\n      <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n    </clipPath>\r\n  </defs>\r\n</svg>"
        },
        {
            "name": "IconBinComponent",
            "id": "component-IconBinComponent-462972c1ab46f90a8b0cbb36e4b681c58a16c9dc8334e32977cd6f7ede82f4210568e331c9380e74b33af0727f55f1eb6c528e8a666a4fd49ff159028064ffd7",
            "file": "src/app/shared/assets/icons/icon-bin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-bin",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-bin.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-bin',\r\n  imports: [],\r\n  templateUrl: './icon-bin.component.html',\r\n  styleUrl: './icon-bin.component.scss'\r\n})\r\nexport class IconBinComponent {\r\n\r\n}\r\n",
            "styleUrl": "./icon-bin.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  width=\"20\"\r\n  height=\"20\"\r\n  viewBox=\"0 0 20 20\"\r\n  fill=\"none\"\r\n>\r\n  <g clip-path=\"url(#clip0_24_1169)\">\r\n    <path\r\n      d=\"M4.99984 15.8333C4.99984 16.75 5.74984 17.5 6.6665 17.5H13.3332C14.2498 17.5 14.9998 16.75 14.9998 15.8333V5.83333H4.99984V15.8333ZM15.8332 3.33333H12.9165L12.0832 2.5H7.9165L7.08317 3.33333H4.1665V5H15.8332V3.33333Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </g>\r\n  <defs>\r\n    <clipPath id=\"clip0_24_1169\">\r\n      <rect width=\"20\" height=\"20\" fill=\"white\" />\r\n    </clipPath>\r\n  </defs>\r\n</svg>\r\n"
        },
        {
            "name": "IconCardComponent",
            "id": "component-IconCardComponent-d4429959563e663f31d5ee71a30e52dea3d1e9e19a9d83ced9e201e17a3480e39ec0337c3b0cb3a413cf955bfac6ac8dcedf7ada4354ca0216b35a8853d6494c",
            "file": "src/app/shared/assets/icons/icon-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-card',\r\n  imports: [],\r\n  templateUrl: './icon-card.component.html',\r\n  styleUrl: './icon-card.component.scss'\r\n})\r\nexport class IconCardComponent {\r\n\r\n}\r\n",
            "styleUrl": "./icon-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n    <g clip-path=\"url(#clip0_13_25)\">\r\n      <path d=\"M20 4H4C2.89 4 2.01 4.89 2.01 6L2 18C2 19.11 2.89 20 4 20H20C21.11 20 22 19.11 22 18V6C22 4.89 21.11 4 20 4ZM20 18H4V12H20V18ZM20 8H4V6H20V8Z\" fill=\"currentColor\"/>\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_13_25\">\r\n        <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n      </clipPath>\r\n    </defs>\r\n  </svg>"
        },
        {
            "name": "IconCardComponent",
            "id": "component-IconCardComponent-382ba7dbf2a0d8f3c99b680fa3d2506fa86cdcbad4172e4ff0033573eb6d7098224a6615a02a546fccf0de404be09f50fdc970daedd8e03ab7eae5c8684e8ef5-1",
            "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-card",
            "styleUrls": [],
            "styles": [],
            "template": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { MenuItemComponent } from './menu-item.component';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { NgClass, NgComponentOutlet } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Componentes de ícones mock para os exemplos\n@Component({\n  selector: 'app-icon-home',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>',\n  standalone: true\n})\nclass IconHomeComponent {}\n\n@Component({\n  selector: 'app-icon-transaction',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>',\n  standalone: true\n})\nclass IconTransactionComponent {}\n\n@Component({\n  selector: 'app-icon-card',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>',\n  standalone: true\n})\nclass IconCardComponent {}\n\nconst meta: Meta<MenuItemComponent> = {\n  title: 'Componentes/MenuItem',\n  component: MenuItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]), \n        NgClass, \n        NgComponentOutlet,\n        IconHomeComponent, \n        IconTransactionComponent, \n        IconCardComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'Texto do item de menu',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n    route: {\n      control: 'text',\n      description: 'Rota para navegação',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n    active: {\n      control: 'boolean',\n      description: 'Define se o item está ativo',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    iconComponent: {\n      control: { type: 'select', options: ['IconHomeComponent', 'IconTransactionComponent', 'IconCardComponent'] },\n      description: 'Componente de ícone a ser exibido',\n      mapping: {\n        IconHomeComponent: IconHomeComponent,\n        IconTransactionComponent: IconTransactionComponent,\n        IconCardComponent: IconCardComponent\n      }\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de item de menu utilizado na navegação lateral da aplicação.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MenuItemComponent>;\n\nexport const Home: Story = {\n  args: {\n    label: 'Início',\n    route: '/panel',\n    active: false,\n    iconComponent: IconHomeComponent\n  },\n};\n\nexport const HomeActive: Story = {\n  args: {\n    label: 'Início',\n    route: '/panel',\n    active: true,\n    iconComponent: IconHomeComponent\n  },\n};\n\nexport const Transactions: Story = {\n  args: {\n    label: 'Transações',\n    route: '/transactions',\n    active: false,\n    iconComponent: IconTransactionComponent\n  },\n};\n\nexport const Cards: Story = {\n  args: {\n    label: 'Meus Cartões',\n    route: '/cards',\n    active: false,\n    iconComponent: IconCardComponent\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IconCardComponent-1"
        },
        {
            "name": "IconDarkmodeComponent",
            "id": "component-IconDarkmodeComponent-8dacaee2a37c86bc00ae1751f9c0aaa5bb6a8a8ad399485ea861abd6d1139f8765c8d5694c66a5858a89d8de4a4de5c1c0167e5b9d779463dfe0d54a5e1bcbf6",
            "file": "src/app/shared/assets/icons/icon-darkmode.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-darkmode",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-darkmode.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-darkmode',\r\n  imports: [CommonModule],\r\n  templateUrl: './icon-darkmode.component.html',\r\n  styleUrl: './icon-darkmode.component.scss'\r\n})\r\nexport class IconDarkmodeComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-darkmode.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path id=\"Vector\" d=\"M9.80005 0.375C14.77 0.375 18.8 4.405 18.8 9.375C18.8 14.345 14.77 18.375 9.80005 18.375C4.83005 18.375 0.800049 14.345 0.800049 9.375C0.800049 8.915 0.84005 8.455 0.900049 8.015C1.88005 9.385 3.48005 10.275 5.30005 10.275C8.28005 10.275 10.7 7.855 10.7 4.875C10.7 3.065 9.81005 1.455 8.44005 0.475C8.88005 0.415 9.34005 0.375 9.80005 0.375Z\" fill=\"currentColor\"/>\r\n</svg>\r\n"
        },
        {
            "name": "IconDollarComponent",
            "id": "component-IconDollarComponent-558f4858cd2f96251cb0204833a0d7e970c3d19b672716f7e973f4ef1e6f2e073cb449fd633a73b8b6f5d7cf272b41ede2abd8b95f92fb73eddecaa0080a1a17",
            "file": "src/app/shared/assets/icons/icon-dollar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-dollar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-dollar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-dollar',\r\n  imports: [],\r\n  templateUrl: './icon-dollar.component.html',\r\n  styleUrl: './icon-dollar.component.scss'\r\n})\r\nexport class IconDollarComponent {\r\n\r\n}\r\n",
            "styleUrl": "./icon-dollar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n    <g clip-path=\"url(#clip0_13_19)\">\r\n        <path\r\n            d=\"M11.8001 10.9C9.53007 10.31 8.80007 9.7 8.80007 8.75C8.80007 7.66 9.81007 6.9 11.5001 6.9C13.2801 6.9 13.9401 7.75 14.0001 9H16.2101C16.1401 7.28 15.0901 5.7 13.0001 5.19V3H10.0001V5.16C8.06007 5.58 6.50007 6.84 6.50007 8.77C6.50007 11.08 8.41007 12.23 11.2001 12.9C13.7001 13.5 14.2001 14.38 14.2001 15.31C14.2001 16 13.7101 17.1 11.5001 17.1C9.44007 17.1 8.63007 16.18 8.52007 15H6.32007C6.44007 17.19 8.08007 18.42 10.0001 18.83V21H13.0001V18.85C14.9501 18.48 16.5001 17.35 16.5001 15.3C16.5001 12.46 14.0701 11.49 11.8001 10.9Z\"\r\n            fill=\"currentColor\" />\r\n    </g>\r\n    <defs>\r\n        <clipPath id=\"clip0_13_19\">\r\n            <rect width=\"24\" height=\"24\" fill=\"white\" />\r\n        </clipPath>\r\n    </defs>\r\n</svg>"
        },
        {
            "name": "IconExitComponent",
            "id": "component-IconExitComponent-29b405ce7c742512f1b203680fcc5e7c2147d598076db28dcf0f7fda6acd2ede31ecbdcefb59bd600bc091f07f60ba300cf4e207694730099aec20d7b7102305",
            "file": "src/app/shared/assets/icons/icon-exit.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-exit",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-exit.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-exit',\r\n  imports: [],\r\n  templateUrl: './icon-exit.component.html',\r\n  styleUrl: './icon-exit.component.scss'\r\n})\r\nexport class IconExitComponent {\r\n\r\n}\r\n",
            "styleUrl": "./icon-exit.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"19\" viewBox=\"0 0 20 19\" fill=\"none\">\r\n    <path d=\"M15 4.625L13.59 6.035L16.17 8.625H6V10.625H16.17L13.59 13.205L15 14.625L20 9.625L15 4.625ZM2 2.625H10V0.625H2C0.9 0.625 0 1.525 0 2.625V16.625C0 17.725 0.9 18.625 2 18.625H10V16.625H2V2.625Z\" fill=\"currentColor\"/>\r\n  </svg>"
        },
        {
            "name": "IconGiftComponent",
            "id": "component-IconGiftComponent-72cecc3acb7c4c90951b1f2bfc7472ee0f5fa8d50f753d3fbd85344a9ea0c52ac20a4cf9827c0ca5d6ad223881b177b40384f295e00dd5bad5dd4d473b30bb0a",
            "file": "src/app/shared/assets/icons/icon-gift.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-gift",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-gift.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-gift',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  templateUrl: './icon-gift.component.html',\r\n})\r\nexport class IconGiftComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"96\" height=\"97\" viewBox=\"0 0 96 97\" fill=\"currentColor\" [ngClass]=\"class\">\r\n    <path d=\"M16 80.5V44.5C13.8 44.5 11.9167 43.7167 10.35 42.15C8.78333 40.5833 8 38.7 8 36.5V28.5C8 26.3 8.78333 24.4167 10.35 22.85C11.9167 21.2833 13.8 20.5 16 20.5H28.8C28.4667 19.9 28.25 19.2667 28.15 18.6C28.05 17.9333 28 17.2333 28 16.5C28 13.1667 29.1667 10.3333 31.5 8C33.8333 5.66667 36.6667 4.5 40 4.5C41.5333 4.5 42.9667 4.78333 44.3 5.35C45.6333 5.91667 46.8667 6.7 48 7.7C49.1333 6.63333 50.3667 5.83333 51.7 5.3C53.0333 4.76667 54.4667 4.5 56 4.5C59.3333 4.5 62.1667 5.66667 64.5 8C66.8333 10.3333 68 13.1667 68 16.5C68 17.2333 67.9333 17.9167 67.8 18.55C67.6667 19.1833 67.4667 19.8333 67.2 20.5H80C82.2 20.5 84.0833 21.2833 85.65 22.85C87.2167 24.4167 88 26.3 88 28.5V36.5C88 38.7 87.2167 40.5833 85.65 42.15C84.0833 43.7167 82.2 44.5 80 44.5V80.5C80 82.7 79.2167 84.5833 77.65 86.15C76.0833 87.7167 74.2 88.5 72 88.5H24C21.8 88.5 19.9167 87.7167 18.35 86.15C16.7833 84.5833 16 82.7 16 80.5ZM56 12.5C54.8667 12.5 53.9167 12.8833 53.15 13.65C52.3833 14.4167 52 15.3667 52 16.5C52 17.6333 52.3833 18.5833 53.15 19.35C53.9167 20.1167 54.8667 20.5 56 20.5C57.1333 20.5 58.0833 20.1167 58.85 19.35C59.6167 18.5833 60 17.6333 60 16.5C60 15.3667 59.6167 14.4167 58.85 13.65C58.0833 12.8833 57.1333 12.5 56 12.5ZM36 16.5C36 17.6333 36.3833 18.5833 37.15 19.35C37.9167 20.1167 38.8667 20.5 40 20.5C41.1333 20.5 42.0833 20.1167 42.85 19.35C43.6167 18.5833 44 17.6333 44 16.5C44 15.3667 43.6167 14.4167 42.85 13.65C42.0833 12.8833 41.1333 12.5 40 12.5C38.8667 12.5 37.9167 12.8833 37.15 13.65C36.3833 14.4167 36 15.3667 36 16.5ZM16 28.5V36.5H44V28.5H16ZM44 80.5V44.5H24V80.5H44ZM52 80.5H72V44.5H52V80.5ZM80 36.5V28.5H52V36.5H80Z\" fill=\"currentColor\"/>\r\n</svg>"
        },
        {
            "name": "IconHamburgerComponent",
            "id": "component-IconHamburgerComponent-caa606b96e949f187117510ab7fc0241fcbb51d09556d38746f7ac1a7db4be60250dfff71df8fc5d2a2629e8cc684fb573aa7921af845cc83efe1d57cb56cb28",
            "file": "src/app/shared/assets/icons/icon-hamburger.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-hamburger",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-hamburger.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-hamburger',\r\n  imports: [CommonModule],\r\n  templateUrl: './icon-hamburger.component.html',\r\n  styleUrl: './icon-hamburger.component.scss'\r\n})\r\nexport class IconHamburgerComponent {\r\n    @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-hamburger.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n  <path d=\"M-4 24C-4.56667 24 -5.04133 23.808 -5.424 23.424C-5.808 23.0413 -6 22.5667 -6 22C-6 21.4333 -5.808 20.9587 -5.424 20.576C-5.04133 20.192 -4.56667 20 -4 20H28C28.5667 20 29.0413 20.192 29.424 20.576C29.808 20.9587 30 21.4333 30 22C30 22.5667 29.808 23.0413 29.424 23.424C29.0413 23.808 28.5667 24 28 24H-4ZM-4 14C-4.56667 14 -5.04133 13.808 -5.424 13.424C-5.808 13.0413 -6 12.5667 -6 12C-6 11.4333 -5.808 10.958 -5.424 10.574C-5.04133 10.1913 -4.56667 10 -4 10H28C28.5667 10 29.0413 10.1913 29.424 10.574C29.808 10.958 30 11.4333 30 12C30 12.5667 29.808 13.0413 29.424 13.424C29.0413 13.808 28.5667 14 28 14H-4ZM-4 4C-4.56667 4 -5.04133 3.80867 -5.424 3.426C-5.808 3.042 -6 2.56667 -6 2C-6 1.43333 -5.808 0.958 -5.424 0.574C-5.04133 0.191334 -4.56667 0 -4 0H28C28.5667 0 29.0413 0.191334 29.424 0.574C29.808 0.958 30 1.43333 30 2C30 2.56667 29.808 3.042 29.424 3.426C29.0413 3.80867 28.5667 4 28 4H-4Z\" fill=\"currentColor\"/>\r\n</svg>"
        },
        {
            "name": "IconHomeComponent",
            "id": "component-IconHomeComponent-15a873fa5199297c51ba0f709fe889ce9e2c85f2fda8297a07e71b1534f9f3a89b3294f3a5b3e146ae4b9e635edf384661af6963f2de5a1c08bb1f19527d116b",
            "file": "src/app/shared/assets/icons/icon-home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-home',\r\n  imports: [],\r\n  templateUrl: './icon-home.component.html',\r\n  styleUrl: './icon-home.component.scss'\r\n})\r\nexport class IconHomeComponent {\r\n\r\n}\r\n",
            "styleUrl": "./icon-home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg width=\"17\" height=\"19\" viewBox=\"0 0 17 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path id=\"Vector\" d=\"M2.80005 18.375C2.25005 18.375 1.77938 18.1793 1.38805 17.788C0.996049 17.396 0.800049 16.925 0.800049 16.375V7.375C0.800049 7.05833 0.871049 6.75833 1.01305 6.475C1.15438 6.19167 1.35005 5.95833 1.60005 5.775L7.60005 1.275C7.78338 1.14167 7.97505 1.04167 8.17505 0.975C8.37505 0.908333 8.58338 0.875 8.80005 0.875C9.01672 0.875 9.22505 0.908333 9.42505 0.975C9.62505 1.04167 9.81672 1.14167 10 1.275L16 5.775C16.25 5.95833 16.446 6.19167 16.588 6.475C16.7294 6.75833 16.8 7.05833 16.8 7.375V16.375C16.8 16.925 16.6044 17.396 16.213 17.788C15.821 18.1793 15.35 18.375 14.8 18.375H10.8V11.375H6.80005V18.375H2.80005Z\" fill=\"currentColor\"/>\r\n</svg>\r\n    "
        },
        {
            "name": "IconHomeComponent",
            "id": "component-IconHomeComponent-382ba7dbf2a0d8f3c99b680fa3d2506fa86cdcbad4172e4ff0033573eb6d7098224a6615a02a546fccf0de404be09f50fdc970daedd8e03ab7eae5c8684e8ef5-1",
            "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-home",
            "styleUrls": [],
            "styles": [],
            "template": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { MenuItemComponent } from './menu-item.component';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { NgClass, NgComponentOutlet } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Componentes de ícones mock para os exemplos\n@Component({\n  selector: 'app-icon-home',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>',\n  standalone: true\n})\nclass IconHomeComponent {}\n\n@Component({\n  selector: 'app-icon-transaction',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>',\n  standalone: true\n})\nclass IconTransactionComponent {}\n\n@Component({\n  selector: 'app-icon-card',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>',\n  standalone: true\n})\nclass IconCardComponent {}\n\nconst meta: Meta<MenuItemComponent> = {\n  title: 'Componentes/MenuItem',\n  component: MenuItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]), \n        NgClass, \n        NgComponentOutlet,\n        IconHomeComponent, \n        IconTransactionComponent, \n        IconCardComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'Texto do item de menu',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n    route: {\n      control: 'text',\n      description: 'Rota para navegação',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n    active: {\n      control: 'boolean',\n      description: 'Define se o item está ativo',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    iconComponent: {\n      control: { type: 'select', options: ['IconHomeComponent', 'IconTransactionComponent', 'IconCardComponent'] },\n      description: 'Componente de ícone a ser exibido',\n      mapping: {\n        IconHomeComponent: IconHomeComponent,\n        IconTransactionComponent: IconTransactionComponent,\n        IconCardComponent: IconCardComponent\n      }\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de item de menu utilizado na navegação lateral da aplicação.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MenuItemComponent>;\n\nexport const Home: Story = {\n  args: {\n    label: 'Início',\n    route: '/panel',\n    active: false,\n    iconComponent: IconHomeComponent\n  },\n};\n\nexport const HomeActive: Story = {\n  args: {\n    label: 'Início',\n    route: '/panel',\n    active: true,\n    iconComponent: IconHomeComponent\n  },\n};\n\nexport const Transactions: Story = {\n  args: {\n    label: 'Transações',\n    route: '/transactions',\n    active: false,\n    iconComponent: IconTransactionComponent\n  },\n};\n\nexport const Cards: Story = {\n  args: {\n    label: 'Meus Cartões',\n    route: '/cards',\n    active: false,\n    iconComponent: IconCardComponent\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IconHomeComponent-1"
        },
        {
            "name": "IconInstagramComponent",
            "id": "component-IconInstagramComponent-0b3a3a5f03dcdc4ea8a39fd748037a42409d30eeeb57d1b76d3c873f393cadccee30e6cfb657aea3b4934186370d03f1d24999a02cf89491fe4263a764c4e38a",
            "file": "src/app/shared/assets/icons/icon-instagram.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-instagram",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-instagram.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-instagram',\r\n  imports: [CommonModule],\r\n  templateUrl: './icon-instagram.component.html',\r\n  styleUrl: './icon-instagram.component.scss'\r\n})\r\nexport class IconInstagramComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-instagram.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"31\" height=\"30\" viewBox=\"0 0 31 30\" fill=\"none\" [ngClass]=\"class\">\r\n    <path d=\"M23.4683 5.29004C22.5083 5.29004 21.7383 6.07004 21.7383 7.02004C21.7383 7.97004 22.5183 8.76004 23.4683 8.76004C24.4183 8.76004 25.1983 7.98004 25.1983 7.02004C25.1983 6.06004 24.4183 5.29004 23.4683 5.29004Z\" fill=\"currentColor\"/>\r\n    <path d=\"M15.7588 7.51001C11.7388 7.51001 8.46875 10.78 8.46875 14.8C8.46875 18.82 11.7388 22.09 15.7588 22.09C19.7788 22.09 23.0487 18.82 23.0487 14.8C23.0487 10.78 19.7788 7.51001 15.7588 7.51001ZM15.7588 19.47C13.1888 19.47 11.0887 17.38 11.0887 14.8C11.0887 12.22 13.1788 10.13 15.7588 10.13C18.3388 10.13 20.4288 12.22 20.4288 14.8C20.4288 17.38 18.3388 19.47 15.7588 19.47Z\" fill=\"currentColor\"/>\r\n    <path d=\"M21.5484 29.6H9.72838C4.82838 29.6 0.838379 25.61 0.838379 20.71V8.89C0.838379 3.99 4.82838 0 9.72838 0H21.5384C26.4384 0 30.4284 3.99 30.4284 8.89V20.71C30.4284 25.61 26.4384 29.6 21.5384 29.6H21.5484ZM9.72838 2.79C6.35838 2.79 3.62838 5.53 3.62838 8.89V20.71C3.62838 24.08 6.36838 26.81 9.72838 26.81H21.5384C24.9084 26.81 27.6484 24.07 27.6484 20.71V8.89C27.6484 5.52 24.9084 2.79 21.5384 2.79H9.72838Z\" fill=\"currentColor\"/>\r\n  </svg>"
        },
        {
            "name": "IconListComponent",
            "id": "component-IconListComponent-f0c499a2e4692dfbc4d6f76b7c3af4dd3b76a353fc1d037c5ad3935099d672d1c4e7d20e6c6298f28f9c5227193b86d86465f6e239094e3db50f29021ab0dd63",
            "file": "src/app/shared/assets/icons/icon-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-list',\r\n  imports: [],\r\n  templateUrl: './icon-list.component.html',\r\n  styleUrl: './icon-list.component.scss'\r\n})\r\nexport class IconListComponent {\r\n\r\n}\r\n",
            "styleUrl": "./icon-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n    <g clip-path=\"url(#clip0_13_22)\">\r\n      <path d=\"M19 5V19H5V5H19ZM20.1 3H3.9C3.4 3 3 3.4 3 3.9V20.1C3 20.5 3.4 21 3.9 21H20.1C20.5 21 21 20.5 21 20.1V3.9C21 3.4 20.5 3 20.1 3ZM11 7H17V9H11V7ZM11 11H17V13H11V11ZM11 15H17V17H11V15ZM7 7H9V9H7V7ZM7 11H9V13H7V11ZM7 15H9V17H7V15Z\" fill=\"currentColor\"/>\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_13_22\">\r\n        <rect width=\"24\" height=\"24\" fill=\"white\"/>\r\n      </clipPath>\r\n    </defs>\r\n  </svg>"
        },
        {
            "name": "IconLogoComponent",
            "id": "component-IconLogoComponent-0ee59a46eeb90c099c30d80ae72e62e9dba0aae204dcd38ea63d6faf620efe08a785303ec5e7f4fdcb72a4d05c5b489b1b1af77ae32d6f73bf585c5403df63cc",
            "file": "src/app/shared/assets/icons/icon-logo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-logo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-logo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-logo',\r\n  imports: [CommonModule],\r\n  templateUrl: './icon-logo.component.html',\r\n  styleUrl: './icon-logo.component.scss'\r\n})\r\nexport class IconLogoComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-logo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"147\" height=\"32\" viewBox=\"0 0 147 32\" fill=\"none\" [ngClass]=\"class\">\r\n    <path d=\"M33.7383 26.2057L36.4662 6.70864C37.9859 6.55734 40.1045 6.48169 42.8222 6.48169C45.2044 6.48169 46.8542 6.85994 47.7714 7.613C48.6887 8.36607 49.0105 9.72433 48.7264 11.6809C48.521 13.0942 48.1171 14.1499 47.5182 14.8445C46.9192 15.5425 46.0259 15.9483 44.845 16.0583L44.8176 16.1993C47.4052 16.4056 48.456 18.1593 47.9665 21.457C47.6653 23.417 47.0287 24.734 46.0532 25.4114C45.0778 26.0888 43.4657 26.4293 41.2169 26.4293C37.938 26.4327 35.4462 26.357 33.7383 26.2057ZM36.805 24.005L40.7994 24.0325C42.3362 24.0325 43.4143 23.8124 44.0338 23.3689C44.6533 22.9253 45.0572 22.0553 45.2421 20.7555C45.4303 19.3628 45.2831 18.4241 44.8074 17.9427C44.3282 17.4613 43.3322 17.2137 41.8125 17.1931H37.7634L36.805 24.005ZM38.0714 15.0164H41.9528C43.3014 15.0164 44.2734 14.7894 44.8655 14.339C45.4577 13.8885 45.8444 13.0392 46.0327 11.7944C46.2004 10.6081 46.0498 9.82749 45.5809 9.44924C45.112 9.07443 44.1468 8.8853 42.6853 8.8853H38.9169L38.0714 15.0164Z\" fill=\"currentColor\"/>\r\n    <path d=\"M60.9661 12.417H63.807C62.7939 16.901 61.4727 20.6973 59.84 23.8058C58.3785 26.5945 56.9273 28.5718 55.4932 29.7409C54.0591 30.91 52.3477 31.6631 50.3591 32.0001L49.8525 30.0504C51.0539 29.7684 52.1013 29.3454 53.0014 28.7781C53.9016 28.2141 54.7641 27.3545 55.589 26.206H54.3226C53.8914 26.206 53.5251 26.0891 53.2273 25.8518C52.9261 25.618 52.7379 25.2913 52.666 24.8752L50.0237 12.4136H52.8953L54.9764 23.5754C55.0311 23.8952 55.2194 24.0568 55.5377 24.0568H56.917C56.9923 23.9261 57.095 23.7301 57.2251 23.4791C57.3551 23.2247 57.4407 23.0596 57.4784 22.984C59.1281 19.5384 60.2918 16.0173 60.9661 12.417Z\" fill=\"currentColor\"/>\r\n    <path d=\"M69.4032 14.5351L68.3045 22.2789C68.2121 22.9391 68.2703 23.3861 68.4859 23.62C68.7016 23.8572 69.1362 23.9741 69.7934 23.9741H71.847L71.96 26.0923C71.1351 26.3365 70.0672 26.4603 68.7529 26.4603C67.5344 26.4603 66.6582 26.1199 66.1243 25.4424C65.5903 24.765 65.4055 23.7953 65.5766 22.5334L66.7027 14.5351H64.2007L64.454 12.5579L67.0142 12.4169L67.6063 8.37646H70.2794L69.7181 12.4169H73.9383L73.6577 14.5351H69.4032Z\" fill=\"currentColor\"/>\r\n    <path d=\"M85.2399 23.9192L85.4076 25.7555C84.0761 26.2816 82.1902 26.5464 79.7532 26.5464C77.4087 26.5464 75.7863 25.9308 74.8861 24.6964C73.9859 23.4619 73.7053 21.5466 74.0407 18.947C74.3967 16.2923 75.1223 14.4767 76.221 13.507C77.3162 12.5373 79.1234 12.0525 81.6357 12.0525C83.7749 12.0525 85.2262 12.4307 85.9963 13.1838C86.7664 13.9369 87.047 15.0475 86.8417 16.5193C86.6158 17.8569 86.0921 18.8232 85.2672 19.4146C84.4424 20.0095 83.1759 20.3706 81.4714 20.5012L76.7173 20.9242C76.6967 22.224 76.9706 23.1043 77.5319 23.5651C78.0932 24.0258 78.9763 24.2562 80.1742 24.2562C81.4509 24.2562 83.1383 24.1462 85.2399 23.9192ZM76.885 18.8885L81.4714 18.4656C82.334 18.4105 82.9637 18.2249 83.3574 17.9154C83.751 17.6059 84.0043 17.0626 84.1172 16.2889C84.2302 15.4052 84.083 14.8584 83.6825 14.6487C83.2786 14.4423 82.4606 14.3392 81.2216 14.3392C79.7977 14.3392 78.788 14.6349 78.1993 15.2298C77.6038 15.8212 77.1657 17.042 76.885 18.8885Z\" fill=\"currentColor\"/>\r\n    <path d=\"M93.1432 6.42676L92.3834 12.1349C92.2156 13.3797 91.9692 14.4319 91.6509 15.2985C92.5511 14.3941 93.5402 13.6307 94.6184 13.0083C95.6965 12.3859 96.696 12.0764 97.6133 12.0764C98.7017 12.0764 99.5368 12.2793 100.115 12.6851C100.697 13.0908 101.108 13.8439 101.354 14.9443C101.597 16.0446 101.56 17.5576 101.241 19.4798C101.036 21.0238 100.745 22.2823 100.369 23.252C99.9921 24.2217 99.506 24.9438 98.9071 25.4149C98.3081 25.886 97.6988 26.1955 97.0793 26.3468C96.4598 26.4981 95.6623 26.5738 94.6903 26.5738C92.4039 26.5738 90.097 26.2333 87.7695 25.5559L90.4427 6.42676H93.1432ZM91.5961 17.4476L90.6686 24.2286C92.0171 24.2836 93.02 24.3146 93.6771 24.3146C95.457 24.3146 96.631 24.0292 97.1923 23.4515C97.7536 22.8772 98.1849 21.488 98.4861 19.2838C98.7496 17.231 98.777 15.9105 98.5716 15.326C98.3663 14.7414 97.8323 14.4491 96.9698 14.4491C95.6384 14.4525 93.8483 15.4498 91.5961 17.4476Z\" fill=\"currentColor\"/>\r\n    <path d=\"M114.802 26.2057H112.663L112.776 23.6611C111.126 25.5833 109.158 26.5427 106.868 26.5427C105.198 26.5427 104.075 25.996 103.493 24.9025C102.911 23.809 102.809 21.8868 103.185 19.1393C103.391 17.6126 103.682 16.3643 104.058 15.3946C104.435 14.4249 104.931 13.7028 105.55 13.2317C106.17 12.7606 106.806 12.4443 107.464 12.2861C108.121 12.1279 108.963 12.0454 109.996 12.0454C112.228 12.0454 114.47 12.2896 116.719 12.7813L114.802 26.2057ZM112.748 21.2335L113.734 14.394C112.009 14.3562 111.044 14.339 110.838 14.339C109.863 14.339 109.124 14.3871 108.617 14.48C108.111 14.5728 107.666 14.8135 107.282 15.2021C106.899 15.5872 106.615 16.0824 106.437 16.6841C106.259 17.2859 106.084 18.1731 105.917 19.3388C105.653 21.3916 105.622 22.7121 105.817 23.2932C106.016 23.8778 106.553 24.1701 107.436 24.1701C108.299 24.1701 109.141 23.9294 109.969 23.4479C110.787 22.9734 111.718 22.2341 112.748 21.2335Z\" fill=\"currentColor\"/>\r\n    <path d=\"M121.89 12.417L121.75 15.3846C124.225 13.1632 126.391 12.0491 128.246 12.0491C129.41 12.0491 130.29 12.3826 130.889 13.0532C131.488 13.7237 131.693 14.6796 131.508 15.921L130.047 26.206H127.346L128.667 16.5984C128.78 15.7319 128.746 15.1438 128.568 14.8309C128.39 14.5215 128 14.3633 127.401 14.3633C126.631 14.3633 125.83 14.6005 124.995 15.0682C124.16 15.5393 123.068 16.313 121.719 17.3858L120.511 26.2025H117.783L119.724 12.4136H121.89V12.417Z\" fill=\"currentColor\"/>\r\n    <path d=\"M143.491 12.4169H146.277C145.49 14.8858 143.97 16.9284 141.722 18.548C142.002 18.9812 142.283 19.528 142.567 20.1882L145.24 26.2058H142.314L139.671 19.8478C138.826 20.3017 137.741 20.8278 136.41 21.4296L135.708 26.2058H133.007L135.763 6.42676H138.491L137.251 15.6939C137.084 16.8252 136.783 17.9531 136.351 19.0844C138.131 18.2351 139.675 17.2447 140.979 16.1031C142.276 14.9649 143.115 13.7373 143.491 12.4169Z\" fill=\"currentColor\"/>\r\n    <path d=\"M14.0646 20.03H0.589355V26.8007H14.0646V20.03Z\" fill=\"currentColor\"/>\r\n    <path d=\"M20.756 6.53687H7.28076V20.0748H20.756V6.53687Z\" fill=\"currentColor\"/>\r\n    <path d=\"M7.23615 0H0.681641V6.49216H7.23615V0Z\" fill=\"currentColor\"/>\r\n    <path d=\"M27.1701 0H20.708V6.49216H27.1701V0Z\" fill=\"currentColor\"/>\r\n  </svg>"
        },
        {
            "name": "IconNotebookComponent",
            "id": "component-IconNotebookComponent-2b74e7e1e07e934187be86652d55a04ac101d551b6f04896897a3c452bd7c1f9a84f2a5ce3fddf5f4720b394348470163f102a40ff8810971f64e34de5324c2c",
            "file": "src/app/shared/assets/icons/icon-notebook.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-notebook",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-notebook.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-notebook',\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  templateUrl: './icon-notebook.component.html',\r\n  styleUrl: './icon-notebook.component.scss'\r\n})\r\nexport class IconNotebookComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-notebook.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"96\" height=\"97\" viewBox=\"0 0 96 97\" fill=\"none\" [ngClass]=\"class\">\r\n    <g clip-path=\"url(#clip0_157_245)\">\r\n      <path d=\"M80 72.5C84.4 72.5 87.96 68.9 87.96 64.5L88 24.5C88 20.1 84.4 16.5 80 16.5H16C11.6 16.5 8 20.1 8 24.5V64.5C8 68.9 11.6 72.5 16 72.5H0V80.5H96V72.5H80ZM16 24.5H80V64.5H16V24.5Z\" fill=\"currentColor\"/>\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_157_245\">\r\n        <rect width=\"96\" height=\"96\" fill=\"white\" transform=\"translate(0 0.5)\"/>\r\n      </clipPath>\r\n    </defs>\r\n  </svg>"
        },
        {
            "name": "IconOnComponent",
            "id": "component-IconOnComponent-6928ec9b936ce3de6ed2a6a74c5eb2844efbac13c723f7798522f022fb338fa0b4707447b0e1a29d02c809f543b9680a91d091eecb7f1fb353979d8bca656da6",
            "file": "src/app/shared/assets/icons/icon-on.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-on",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-on.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-on',\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  templateUrl: './icon-on.component.html',\r\n  styleUrl: './icon-on.component.scss'\r\n})\r\nexport class IconOnComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-on.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"97\" height=\"96\" viewBox=\"0 0 97 96\" fill=\"none\" [ngClass]=\"class\">\r\n    <g clip-path=\"url(#clip0_157_256)\">\r\n      <path d=\"M8.5 48C8.5 52.5333 9.63333 56.6833 11.9 60.45C14.1667 64.2167 17.2 67.1 21 69.1C21.9333 69.6333 22.6167 70.4 23.05 71.4C23.4833 72.4 23.5 73.4 23.1 74.4C22.7 75.4667 22 76.2333 21 76.7C20 77.1667 19.0333 77.1333 18.1 76.6C12.9 73.9333 8.66667 70.0833 5.4 65.05C2.13333 60.0167 0.5 54.3333 0.5 48C0.5 41.7333 2.08333 36.1 5.25 31.1C8.41667 26.1 12.5667 22.2667 17.7 19.6C18.6333 19.0667 19.6167 19.0167 20.65 19.45C21.6833 19.8833 22.4333 20.6333 22.9 21.7C23.3667 22.6333 23.4 23.6 23 24.6C22.6 25.6 21.9333 26.3667 21 26.9C17.2 28.9 14.1667 31.7833 11.9 35.55C9.63333 39.3167 8.5 43.4667 8.5 48ZM56.5 80C47.6333 80 40.0833 76.8833 33.85 70.65C27.6167 64.4167 24.5 56.8667 24.5 48C24.5 39.1333 27.6167 31.5833 33.85 25.35C40.0833 19.1167 47.6333 16 56.5 16C60.2333 16 63.7667 16.6 67.1 17.8C70.4333 19 73.4667 20.6667 76.2 22.8C77.0667 23.4667 77.5 24.3333 77.5 25.4C77.5 26.4667 77.1 27.4 76.3 28.2C75.5667 28.9333 74.65 29.3333 73.55 29.4C72.45 29.4667 71.4333 29.1667 70.5 28.5C68.5 27.0333 66.3167 25.9167 63.95 25.15C61.5833 24.3833 59.1 24 56.5 24C49.8333 24 44.1667 26.3333 39.5 31C34.8333 35.6667 32.5 41.3333 32.5 48C32.5 54.6667 34.8333 60.3333 39.5 65C44.1667 69.6667 49.8333 72 56.5 72C59.1 72 61.5833 71.6167 63.95 70.85C66.3167 70.0833 68.5 68.9667 70.5 67.5C71.4333 66.8333 72.45 66.5333 73.55 66.6C74.65 66.6667 75.5667 67.0667 76.3 67.8C77.1 68.6 77.5 69.5333 77.5 70.6C77.5 71.6667 77.0667 72.5333 76.2 73.2C73.4667 75.3333 70.4333 77 67.1 78.2C63.7667 79.4 60.2333 80 56.5 80ZM81.3 52H56.5C55.3667 52 54.4167 51.6167 53.65 50.85C52.8833 50.0833 52.5 49.1333 52.5 48C52.5 46.8667 52.8833 45.9167 53.65 45.15C54.4167 44.3833 55.3667 44 56.5 44H81.3L77.7 40.4C76.9667 39.6667 76.6 38.7333 76.6 37.6C76.6 36.4667 76.9667 35.5333 77.7 34.8C78.4333 34.0667 79.3667 33.7 80.5 33.7C81.6333 33.7 82.5667 34.0667 83.3 34.8L93.7 45.2C94.5 46 94.9 46.9333 94.9 48C94.9 49.0667 94.5 50 93.7 50.8L83.3 61.2C82.5667 61.9333 81.6333 62.3 80.5 62.3C79.3667 62.3 78.4333 61.9333 77.7 61.2C76.9667 60.4667 76.6 59.5333 76.6 58.4C76.6 57.2667 76.9667 56.3333 77.7 55.6L81.3 52Z\" fill=\"currentColor\"/>\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_157_256\">\r\n        <rect width=\"96\" height=\"96\" fill=\"white\" transform=\"translate(0.5)\"/>\r\n      </clipPath>\r\n    </defs>\r\n  </svg>"
        },
        {
            "name": "IconSettingsComponent",
            "id": "component-IconSettingsComponent-b793049d85fd9e53b9c4da4d98f17c42ee6eb46c2af2d94ecaa614c2e6ba4916444b5226dc3309f293b89672e206c557400c8d8e2a6eded85ab12d4b37ef4140",
            "file": "src/app/shared/assets/icons/icon-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-settings",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-settings.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-settings',\r\n  imports: [],\r\n  templateUrl: './icon-settings.component.html',\r\n  styleUrl: './icon-settings.component.scss'\r\n})\r\nexport class IconSettingsComponent {\r\n\r\n}\r\n",
            "styleUrl": "./icon-settings.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n    <path\r\n        d=\"M13.8751 22H10.1251C9.87509 22 9.65843 21.9167 9.47509 21.75C9.29176 21.5833 9.18343 21.375 9.15009 21.125L8.85009 18.8C8.63343 18.7167 8.42943 18.6167 8.23809 18.5C8.04609 18.3833 7.85843 18.2583 7.67509 18.125L5.50009 19.025C5.26676 19.1083 5.03343 19.1167 4.80009 19.05C4.56676 18.9833 4.38343 18.8417 4.25009 18.625L2.40009 15.4C2.26676 15.1833 2.22509 14.95 2.27509 14.7C2.32509 14.45 2.45009 14.25 2.65009 14.1L4.52509 12.675C4.50843 12.5583 4.50009 12.4457 4.50009 12.337V11.662C4.50009 11.554 4.50843 11.4417 4.52509 11.325L2.65009 9.9C2.45009 9.75 2.32509 9.55 2.27509 9.3C2.22509 9.05 2.26676 8.81667 2.40009 8.6L4.25009 5.375C4.36676 5.14167 4.54576 4.99567 4.78709 4.937C5.02909 4.879 5.26676 4.89167 5.50009 4.975L7.67509 5.875C7.85843 5.74167 8.05009 5.61667 8.25009 5.5C8.45009 5.38333 8.65009 5.28333 8.85009 5.2L9.15009 2.875C9.18343 2.625 9.29176 2.41667 9.47509 2.25C9.65843 2.08333 9.87509 2 10.1251 2H13.8751C14.1251 2 14.3418 2.08333 14.5251 2.25C14.7084 2.41667 14.8168 2.625 14.8501 2.875L15.1501 5.2C15.3668 5.28333 15.5711 5.38333 15.7631 5.5C15.9544 5.61667 16.1418 5.74167 16.3251 5.875L18.5001 4.975C18.7334 4.89167 18.9668 4.88333 19.2001 4.95C19.4334 5.01667 19.6168 5.15833 19.7501 5.375L21.6001 8.6C21.7334 8.81667 21.7751 9.05 21.7251 9.3C21.6751 9.55 21.5501 9.75 21.3501 9.9L19.4751 11.325C19.4918 11.4417 19.5001 11.554 19.5001 11.662V12.337C19.5001 12.4457 19.4834 12.5583 19.4501 12.675L21.3251 14.1C21.5251 14.25 21.6501 14.45 21.7001 14.7C21.7501 14.95 21.7084 15.1833 21.5751 15.4L19.7251 18.6C19.5918 18.8167 19.4044 18.9627 19.1631 19.038C18.9211 19.1127 18.6834 19.1083 18.4501 19.025L16.3251 18.125C16.1418 18.2583 15.9501 18.3833 15.7501 18.5C15.5501 18.6167 15.3501 18.7167 15.1501 18.8L14.8501 21.125C14.8168 21.375 14.7084 21.5833 14.5251 21.75C14.3418 21.9167 14.1251 22 13.8751 22ZM12.0501 15.5C13.0168 15.5 13.8418 15.1583 14.5251 14.475C15.2084 13.7917 15.5501 12.9667 15.5501 12C15.5501 11.0333 15.2084 10.2083 14.5251 9.525C13.8418 8.84167 13.0168 8.5 12.0501 8.5C11.0668 8.5 10.2374 8.84167 9.56209 9.525C8.88743 10.2083 8.55009 11.0333 8.55009 12C8.55009 12.9667 8.88743 13.7917 9.56209 14.475C10.2374 15.1583 11.0668 15.5 12.0501 15.5Z\"\r\n        fill=\"currentColor\" />\r\n</svg>"
        },
        {
            "name": "IconStarComponent",
            "id": "component-IconStarComponent-bfa94257de3477cbd19335f33147b3d48f1f2eac4031315b1d0c5521d79088fb9aa69473338917095a4d58873fb3b728407216e404c13b71f401d24c1b0bd1c4",
            "file": "src/app/shared/assets/icons/icon-star.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-star",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-star.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-star',\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  templateUrl: './icon-star.component.html',\r\n  styleUrl: './icon-star.component.scss'\r\n})\r\nexport class IconStarComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-star.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"97\" height=\"97\" viewBox=\"0 0 97 97\" fill=\"none\" [ngClass]=\"class\">\r\n    <g clip-path=\"url(#clip0_157_248)\">\r\n      <path d=\"M88.5 37.46L59.74 34.98L48.5 8.5L37.26 35.02L8.5 37.46L30.34 56.38L23.78 84.5L48.5 69.58L73.22 84.5L66.7 56.38L88.5 37.46ZM48.5 62.1L33.46 71.18L37.46 54.06L24.18 42.54L41.7 41.02L48.5 24.9L55.34 41.06L72.86 42.58L59.58 54.1L63.58 71.22L48.5 62.1Z\" fill=\"currentColor\"/>\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_157_248\">\r\n        <rect width=\"96\" height=\"96\" fill=\"white\" transform=\"translate(0.5 0.5)\"/>\r\n      </clipPath>\r\n    </defs>\r\n  </svg>"
        },
        {
            "name": "IconTransactionComponent",
            "id": "component-IconTransactionComponent-382ba7dbf2a0d8f3c99b680fa3d2506fa86cdcbad4172e4ff0033573eb6d7098224a6615a02a546fccf0de404be09f50fdc970daedd8e03ab7eae5c8684e8ef5",
            "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-transaction",
            "styleUrls": [],
            "styles": [],
            "template": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { MenuItemComponent } from './menu-item.component';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { NgClass, NgComponentOutlet } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Componentes de ícones mock para os exemplos\n@Component({\n  selector: 'app-icon-home',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>',\n  standalone: true\n})\nclass IconHomeComponent {}\n\n@Component({\n  selector: 'app-icon-transaction',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>',\n  standalone: true\n})\nclass IconTransactionComponent {}\n\n@Component({\n  selector: 'app-icon-card',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>',\n  standalone: true\n})\nclass IconCardComponent {}\n\nconst meta: Meta<MenuItemComponent> = {\n  title: 'Componentes/MenuItem',\n  component: MenuItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]), \n        NgClass, \n        NgComponentOutlet,\n        IconHomeComponent, \n        IconTransactionComponent, \n        IconCardComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'Texto do item de menu',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n    route: {\n      control: 'text',\n      description: 'Rota para navegação',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n    active: {\n      control: 'boolean',\n      description: 'Define se o item está ativo',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    iconComponent: {\n      control: { type: 'select', options: ['IconHomeComponent', 'IconTransactionComponent', 'IconCardComponent'] },\n      description: 'Componente de ícone a ser exibido',\n      mapping: {\n        IconHomeComponent: IconHomeComponent,\n        IconTransactionComponent: IconTransactionComponent,\n        IconCardComponent: IconCardComponent\n      }\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de item de menu utilizado na navegação lateral da aplicação.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MenuItemComponent>;\n\nexport const Home: Story = {\n  args: {\n    label: 'Início',\n    route: '/panel',\n    active: false,\n    iconComponent: IconHomeComponent\n  },\n};\n\nexport const HomeActive: Story = {\n  args: {\n    label: 'Início',\n    route: '/panel',\n    active: true,\n    iconComponent: IconHomeComponent\n  },\n};\n\nexport const Transactions: Story = {\n  args: {\n    label: 'Transações',\n    route: '/transactions',\n    active: false,\n    iconComponent: IconTransactionComponent\n  },\n};\n\nexport const Cards: Story = {\n  args: {\n    label: 'Meus Cartões',\n    route: '/cards',\n    active: false,\n    iconComponent: IconCardComponent\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "IconUnderConstructionComponent",
            "id": "component-IconUnderConstructionComponent-35a821ff5276acc38b49a0545157a3f7dbd877c34c998daf42c26e9297e85671856aa826e7a5ece383f9058289d6e2feab0f39197807572d4c8ba95cb3b4dd96",
            "file": "src/app/shared/assets/icons/icon-under-construction.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-under-construction",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-under-construction.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-icon-under-construction',\r\n  imports: [CommonModule],\r\n  templateUrl: './icon-under-construction.component.html',\r\n  styleUrl: './icon-under-construction.component.scss',\r\n})\r\nexport class IconUnderConstructionComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-under-construction.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg\r\n  width=\"128\"\r\n  height=\"128\"\r\n  viewBox=\"0 0 20 20\"\r\n  fill=\"none\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  [ngClass]=\"class\"\r\n>\r\n  <path\r\n    d=\"M13.904 11.0506L11.7827 13.1719L17.7789 19.1681L19.9002 17.0468L13.904 11.0506Z\"\r\n    fill=\"currentColor\"\r\n  />\r\n  <path\r\n    d=\"M15.5001 7.99999C17.4301 7.99999 19.0001 6.42999 19.0001 4.49999C19.0001 3.91999 18.8401 3.37999 18.5901 2.89999L15.8901 5.59999L14.4001 4.10999L17.1001 1.40999C16.6201 1.15999 16.0801 0.999988 15.5001 0.999988C13.5701 0.999988 12.0001 2.56999 12.0001 4.49999C12.0001 4.90999 12.0801 5.29999 12.2101 5.65999L10.3601 7.50999L8.5801 5.72999L9.2901 5.01999L7.8801 3.60999L10.0001 1.48999C8.8301 0.319988 6.9301 0.319988 5.7601 1.48999L2.2201 5.02999L3.6301 6.43999H0.810098L0.100098 7.14999L3.6401 10.69L4.3501 9.97999V7.14999L5.7601 8.55999L6.4701 7.84999L8.2501 9.62999L0.840098 17.04L2.9601 19.16L14.3401 7.78999C14.7001 7.91999 15.0901 7.99999 15.5001 7.99999Z\"\r\n    fill=\"currentColor\"\r\n  />\r\n</svg>\r\n"
        },
        {
            "name": "IconWhatsappComponent",
            "id": "component-IconWhatsappComponent-68212929d9c34eab62a1deb0cc3ee77ccc6238e4179c783dcf7c5ab47312b3b02e2d94abd96e32fbd7324c9f1288c4763080affc0f668809d671c23cb7781723",
            "file": "src/app/shared/assets/icons/icon-whatsapp.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-whatsapp",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-whatsapp.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-whatsapp',\r\n  imports: [CommonModule],\r\n  templateUrl: './icon-whatsapp.component.html',\r\n  styleUrl: './icon-whatsapp.component.scss'\r\n})\r\nexport class IconWhatsappComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-whatsapp.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" [ngClass]=\"class\">\r\n    <path d=\"M0.438223 29.6L2.55822 21.68C1.35822 19.51 0.728223 17.08 0.728223 14.62C0.728223 6.56 7.28822 0 15.3382 0C23.3882 0 29.9582 6.56 29.9582 14.62C29.9582 22.68 23.3982 29.24 15.3382 29.24C12.9182 29.24 10.5282 28.63 8.38822 27.47L0.428223 29.6H0.438223ZM8.78822 24.5L9.28822 24.8C11.1282 25.9 13.2182 26.48 15.3382 26.48C21.8782 26.48 27.1882 21.16 27.1882 14.63C27.1882 8.1 21.8782 2.77 15.3382 2.77C8.79822 2.77 3.48822 8.08 3.48822 14.62C3.48822 16.78 4.08822 18.9 5.21822 20.77L5.52822 21.27L4.34822 25.69L8.78822 24.5Z\" fill=\"currentColor\"/>\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.7783 16.6501C20.1783 16.2901 19.3983 15.8901 18.6883 16.1801C18.1483 16.4001 17.7983 17.2501 17.4483 17.6901C17.2683 17.9101 17.0483 17.9501 16.7783 17.8401C14.7383 17.0301 13.1783 15.6601 12.0483 13.7901C11.8583 13.5001 11.8883 13.2701 12.1183 13.0001C12.4583 12.6001 12.8883 12.1401 12.9783 11.6001C13.0683 11.0601 12.8183 10.4301 12.5983 9.95013C12.3083 9.34013 11.9983 8.46013 11.3783 8.11013C10.8083 7.79013 10.0683 7.97013 9.56826 8.38013C8.69826 9.09013 8.27826 10.2001 8.28826 11.3001C8.28826 11.6101 8.32826 11.9201 8.39826 12.2301C8.57826 12.9601 8.90826 13.6301 9.28826 14.2801C9.56826 14.7701 9.87826 15.2401 10.2183 15.6901C11.3083 17.1701 12.6683 18.4601 14.2383 19.4201C15.0283 19.9001 15.8683 20.3201 16.7483 20.6101C17.7283 20.9301 18.6083 21.2701 19.6683 21.0701C20.7783 20.8601 21.8783 20.1701 22.3183 19.1001C22.4483 18.7801 22.5183 18.4301 22.4383 18.1001C22.2883 17.4101 21.3483 17.0001 20.7883 16.6601L20.7783 16.6501Z\" fill=\"currentColor\"/>\r\n  </svg>"
        },
        {
            "name": "IconYoutubeComponent",
            "id": "component-IconYoutubeComponent-8978da7466458d9084c5f8450ce6e6ce57272ed876f075f08e7bf386a04e62d6d53c092284328d1e3f5ce4c7638f67409b8927be0e6e5f5ab5e25cc5df794b34",
            "file": "src/app/shared/assets/icons/icon-youtube.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-youtube",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon-youtube.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon-youtube',\r\n  imports: [CommonModule],\r\n  templateUrl: './icon-youtube.component.html',\r\n  styleUrl: './icon-youtube.component.scss'\r\n})\r\nexport class IconYoutubeComponent {\r\n  @Input() class = '';\r\n}\r\n",
            "styleUrl": "./icon-youtube.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"22\" viewBox=\"0 0 32 22\" fill=\"none\" [ngClass]=\"class\">\r\n    <path d=\"M31.019 6.8749C31.019 3.2349 28.069 0.274902 24.419 0.274902H7.54898C3.90898 0.284902 0.958984 3.2349 0.958984 6.8749V14.7249C0.958984 18.3649 3.90898 21.3249 7.55898 21.3249H24.429C28.069 21.3249 31.029 18.3749 31.029 14.7249V6.8749H31.019ZM21.099 11.3849L13.529 15.1249C13.229 15.2849 12.229 15.0749 12.229 14.7349V7.0549C12.229 6.7149 13.249 6.4949 13.539 6.6649L20.779 10.6049C21.079 10.7749 21.399 11.2149 21.099 11.3849Z\" fill=\"currentColor\"/>\r\n</svg>"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-775a5082a652613eaa2b929bb0e3ce67e8ced61ef3c31823039451e8d62cf49e844bfbbd6e48720aea4ca429880f99cc3c68a77d98172f56a4efa80b9b124e1c",
            "file": "src/app/shared/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "(string | OptionItem)[]",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Selecione o tipo de transação'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'G'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"G\" | \"P\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "selectedOption",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "getDisplayValue",
                    "args": [
                        {
                            "name": "option",
                            "type": "string | OptionItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "string | OptionItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectOption",
                    "args": [
                        {
                            "name": "option",
                            "type": "string | OptionItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "string | OptionItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\ninterface OptionItem {\r\n  display: string;\r\n  value: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  imports: [CommonModule],\r\n  templateUrl: './input.component.html',\r\n  styleUrl: './input.component.scss',\r\n})\r\nexport class InputComponent {\r\n  @Input() options: (string | OptionItem)[] = [];\r\n  @Input() size: 'G' | 'P' = 'G';\r\n  @Input() placeholder = 'Selecione o tipo de transação';\r\n  @Output() selectionChange = new EventEmitter<any>();\r\n\r\n  isOpen = false;\r\n  selectedOption: string | null = null;\r\n\r\n  toggleDropdown() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  selectOption(option: string | OptionItem) {\r\n    this.selectedOption = typeof option === 'string' ? option : option.display;\r\n    this.isOpen = false;\r\n    this.selectionChange.emit(typeof option === 'string' ? option : option.value);\r\n  }\r\n\r\n  getDisplayValue(option: string | OptionItem): string {\r\n    return typeof option === 'string' ? option : option.display;\r\n  }\r\n}",
            "styleUrl": "./input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- input.component.html -->\r\n<div\r\n  class=\"relative inline-block w-full\"\r\n  [ngClass]=\"{\r\n    'max-w-[360px]': size === 'G',\r\n    'max-w-[290px]': size === 'P'\r\n  }\"\r\n>\r\n  <!-- Campo do select -->\r\n  <button\r\n    type=\"button\"\r\n    [class]=\"\r\n      'w-full bg-gray-100 border border-cyan-blue-500 dark:border-blue-violet-500  text-cyan-blue-500 dark:text-blue-violet-500 font-lato font-medium rounded-md p-4 flex items-center justify-between ' +\r\n      (size === 'G' ? 'gap-[66px]' : 'gap-2')\r\n    \"\r\n    (click)=\"toggleDropdown()\"\r\n  >\r\n    {{ selectedOption || placeholder }}\r\n    <svg\r\n      class=\"w-4 h-4 transition-transform\"\r\n      [ngClass]=\"{ 'rotate-180': isOpen }\"\r\n      fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19 9l-7 7-7-7\" />\r\n    </svg>\r\n  </button>\r\n\r\n  <!-- Dropdown -->\r\n  <div\r\n    *ngIf=\"isOpen\"\r\n    class=\"absolute z-10 mt-0 w-full bg-gray-100 border border-green-dark border-t-0 rounded-b-md shadow-lg\"\r\n  >\r\n    <ul>\r\n      <li\r\n        *ngFor=\"let option of options\"\r\n        (click)=\"selectOption(option)\"\r\n        class=\"px-4 py-2 cursor-pointer transition-colors font-lato text-center text-cyan-blue-500 dark:text-blue-violet-500\"\r\n        [ngClass]=\"{\r\n          'bg-gray-100 font-semibold': getDisplayValue(option) === selectedOption,\r\n          'hover:bg-cyan-blue-500 dark:hover:bg-blue-violet-500 hover:text-white dark:hover:text-white hover:font-bold': getDisplayValue(option) !== selectedOption\r\n        }\"\r\n      >\r\n        {{ getDisplayValue(option) }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-24e357908ce0d9e45b24b1fb48f0cc27d7f1014de1efef0c6f4b2384e5e419de2fa5b9905b5d46400657185531ff4708a69faf9f149b539ae374e01823c0cffb",
            "file": "src/app/shared/components/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout",
            "styleUrls": [
                "./layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "AsideComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { AsideComponent } from '../aside/aside.component';\r\nimport { FooterComponent } from '../footer/footer.component';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  imports: [AsideComponent],\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss'],\r\n})\r\nexport class LayoutComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./layout.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"min-h-screen flex flex-col\">\r\n  <div class=\"bg-gray-200 dark:bg-blue-violet-50 flex flex-1\">\r\n    <app-aside class=\"hidden xl:block\"></app-aside>\r\n    <main class=\"flex flex-col flex-1\">\r\n      <ng-content></ng-content>\r\n    </main>\r\n  </div>\r\n</div>"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-6227929d0dd03524402c0684a699f35e2b259072c973cc2585429c1baf4615d31fb6ffbc5852383bb17987d6187b02682cbad7eb6cb8c2cbb673d5794823c133",
            "file": "src/app/shared/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "menuOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "menuRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "mobile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tablet",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeMenu",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "menuRefReady",
                    "defaultValue": "new EventEmitter<ElementRef>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "menuRefElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'menuRef'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "routerSub",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goToCards",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "goToConfiguration",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "goToPanel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "goToTransactions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isActive",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLinkClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "IconExitComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ElementRef, ViewChild, AfterViewInit, OnInit, OnDestroy, ChangeDetectorRef  } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ThemeService } from '../../services/Theme/theme.service';\r\n\r\nimport { ButtonComponent } from '../button/button.component';\r\nimport { IconExitComponent } from '../../assets/icons/icon-exit.component';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  imports: [CommonModule, ButtonComponent, IconExitComponent],\r\n  templateUrl: './menu.component.html',\r\n  styleUrl: './menu.component.scss'\r\n})\r\nexport class MenuComponent implements AfterViewInit, OnInit, OnDestroy {\r\n  @Input() isLoggedIn: boolean = false;\r\n  @Input() mobile: boolean = false;\r\n  @Input() tablet: boolean = false;\r\n  @Input() menuOpen: boolean = false;\r\n  @Input() menuRef: any;\r\n\r\n  @ViewChild('menuRef') menuRefElement!: ElementRef;\r\n \r\n  @Output() menuRefReady = new EventEmitter<ElementRef>();\r\n  @Output() closeMenu = new EventEmitter<void>();\r\n\r\n  private routerSub: Subscription | undefined;\r\n\r\n  constructor(\r\n    private readonly router: Router,\r\n    public readonly themeService: ThemeService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n    ngOnInit() {\r\n    this.routerSub = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        // Força re-render ao mudar rota\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.routerSub?.unsubscribe();\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    if (this.menuRefElement) {\r\n      this.menuRefReady.emit(this.menuRefElement);\r\n    }\r\n  }\r\n\r\n  onLinkClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.closeMenu.emit();\r\n  }\r\n\r\n  goToPanel(): void {\r\n    this.router.navigate(['/panel']);\r\n  }\r\n\r\n  goToTransactions(): void {\r\n    this.router.navigate(['/transactions']);\r\n  }\r\n\r\n  goToCards(): void {\r\n    this.router.navigate(['/cards']);\r\n  }\r\n\r\n  goToConfiguration(): void {\r\n    this.router.navigate(['/configurations']);\r\n  }\r\n\r\n  // isActive(path: string): boolean {\r\n  //   const result = this.router.url.startsWith(path);\r\n  //   return result;\r\n  // }\r\n\r\n  isActive(path: string): boolean {\r\n    // Remove query params e fragment\r\n    const cleanUrl = this.router.url.split('?')[0].split('#')[0];\r\n    return cleanUrl === path || cleanUrl.startsWith(path + '/');\r\n  }\r\n\r\n  get themeButton(): string {\r\n    return this.themeService.isDarkMode() ? 'ghost-white' : 'outline-cyan-blue';\r\n  }\r\n}",
            "styleUrl": "./menu.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "themeButton": {
                    "name": "themeButton",
                    "getSignature": {
                        "name": "themeButton",
                        "type": "string",
                        "returnType": "string",
                        "line": 90
                    }
                }
            },
            "templateData": "<!-- Menu Mobile/tablet deslogado -->\r\n@if(!isLoggedIn && (mobile || tablet) && menuOpen) {\r\n  <div #menuRef class=\"fixed inset-0 z-50 bg-black/60 flex justify-center items-start pt-24\">\r\n    <div class=\"bg-white dark:bg-blue-violet-500 rounded-lg w-full p-9 flex flex-col gap-4 text-center shadow-xl\">\r\n      <a href=\"#sobre\" class=\"text-cyan-blue-500 dark:text-gray-200 text-[18px] font-semibold\">\r\n        Sobre\r\n      </a>\r\n      <a href=\"#servico\" class=\"text-cyan-blue-500 dark:text-gray-200 text-[18px] font-semibold\">\r\n        Serviços\r\n      </a>\r\n      <div class=\"px-6 flex flex-col justify-center items-center gap-4\">\r\n        <app-button theme=\"secondary\" label=\"Abrir minha conta\" size=\"G\" (click)=\"onLinkClick($event)\"></app-button>\r\n        <app-button [theme]=\"themeService.isDarkMode() ? 'ghost-white' : 'primary'\" label=\"Já tenho conta\" size=\"G\" (click)=\"goToPanel()\">\r\n          <app-icon-exit icon-right class=\"text-white hover:dark:text-gray-200\" />\r\n        </app-button>        \r\n      </div>\r\n    </div>\r\n  </div>\r\n<!-- Menu logado Tablet -->\r\n} @else if(isLoggedIn && tablet) {\r\n  <nav class=\"absolute top-[70px] left-0 w-full bg-white py-4 flex flex-row items-center justify-center gap-4 shadow z-50\">\r\n    <a\r\n      class=\"text-cyan-blue-500 dark:text-blue-violet-500 text-sm font-normal w-full max-w-[131px] flex justify-center cursor-pointer border-b-2 border-transparent transition-all\r\n        hover:border-cyan-blue-900 dark:hover:border-blue-violet-900\"\r\n      [ngClass]=\"{ 'border-[#004d61] dark:border-blue-violet-500': isActive('/panel') }\"\r\n    (click)=\"goToPanel()\"\r\n    >\r\n      Início\r\n    </a>\r\n    <a\r\n      class=\"text-cyan-blue-500 dark:text-blue-violet-500 text-sm font-normal w-full max-w-[131px] flex justify-center cursor-pointer border-b-2 border-transparent transition-all\r\n        hover:border-cyan-blue-900 dark:hover:border-blue-violet-900\"\r\n      [ngClass]=\"{ 'border-[#004d61] dark:border-blue-violet-500': isActive('/transactions') }\"\r\n      (click)=\"goToTransactions()\"\r\n    >\r\n      Transações\r\n    </a>\r\n    <a\r\n      class=\"text-cyan-blue-500 dark:text-blue-violet-500 text-sm font-normal w-full max-w-[131px] flex justify-center cursor-pointer border-b-2 border-transparent transition-all\r\n        hover:border-cyan-blue-900 dark:hover:border-blue-violet-900\"\r\n      [ngClass]=\"{ 'border-[#004d61] dark:border-blue-violet-500': isActive('/cards') }\"\r\n      (click)=\"goToCards()\"\r\n    >\r\n      Meus Cartões\r\n    </a>\r\n    <a\r\n      class=\"text-cyan-blue-500 dark:text-blue-violet-500 text-sm font-normal w-full max-w-[131px] flex justify-center cursor-pointer border-b-2 border-transparent transition-all\r\n        hover:border-cyan-blue-900 dark:hover:border-blue-violet-900\"\r\n      [ngClass]=\"{ 'border-[#004d61] dark:border-blue-violet-500': isActive('/configurations') }\"\r\n      (click)=\"goToConfiguration()\"\r\n    >\r\n      Configurações\r\n    </a>\r\n  </nav>\r\n\r\n<!-- Menu logado mobile -->\r\n} @else if(isLoggedIn && mobile && menuOpen) {\r\n  <div class=\"absolute top-full left-0 bg-white w-full p-6 flex flex-col items-center gap-4 shadow-md z-50\">\r\n    <a\r\n      class=\"text-cyan-blue-500 dark:text-blue-violet-500 text-2xl font-normal p-2 w-full text-center transition-all rounded-lg cursor-pointer\"\r\n      [ngClass]=\"{\r\n        'bg-cyan-blue-500 dark:bg-blue-violet-500 text-white dark:text-white font-bold ': isActive('/panel'),\r\n        'hover:text-white hover:bg-cyan-blue-900 dark:hover:text-white dark:hover:bg-blue-violet-900': !isActive('/panel')\r\n      }\"\r\n      (click)=\"goToPanel()\"\r\n    >\r\n      Início\r\n    </a>\r\n    <a\r\n      class=\"text-cyan-blue-500 dark:text-blue-violet-500 text-2xl font-normal p-2 w-full text-center transition-all rounded-lg cursor-pointer\"\r\n      [ngClass]=\"{\r\n        'bg-cyan-blue-500 text-white dark:bg-blue-violet-500 dark:text-white font-bold': isActive('/transactions'),\r\n        'hover:text-white hover:bg-cyan-blue-900 dark:hover:text-white dark:hover:bg-blue-violet-900': !isActive('/transactions')\r\n      }\"\r\n      (click)=\"goToTransactions()\"\r\n    >\r\n      Transações\r\n    </a>\r\n    <a\r\n      class=\"text-cyan-blue-500 dark:text-blue-violet-500 text-2xl font-normal p-2 w-full text-center transition-all rounded-lg cursor-pointer\"\r\n      [ngClass]=\"{\r\n        'bg-cyan-blue-500 text-white dark:bg-blue-violet-500 dark:text-white font-bold': isActive('/cards'),\r\n        'hover:text-white hover:bg-cyan-blue-900 dark:hover:text-white dark:hover:bg-blue-violet-900': !isActive('/cards')\r\n      }\"\r\n      (click)=\"goToCards()\"\r\n    >\r\n      Meus Cartões\r\n    </a>\r\n    <a\r\n      class=\"text-cyan-blue-500 dark:text-blue-violet-500 text-2xl font-normal p-2 w-full text-center transition-all rounded-lg cursor-pointer\"\r\n      [ngClass]=\"{\r\n        'bg-cyan-blue-500 text-white dark:bg-blue-violet-500 dark:text-white font-bold': isActive('/configurations'),\r\n        'hover:text-white hover:bg-cyan-blue-900 dark:hover:text-white dark:hover:bg-blue-violet-900': !isActive('/configurations')\r\n      }\"\r\n      (click)=\"goToConfiguration()\"\r\n    >\r\n      Configurações\r\n    </a>\r\n  </div>\r\n}"
        },
        {
            "name": "MenuItemComponent",
            "id": "component-MenuItemComponent-a27433e9de7aea7b216859495a18d587666bb5e6857eef7a2138663b85508c5ae3dc885f87f9453814bf21779cfe997436e3af14f5b855d1928c1dda59196eb1",
            "file": "src/app/shared/components/menu-item/menu-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menu-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Type<any>",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "NgClass"
                },
                {
                    "name": "NgComponentOutlet",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Type } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgClass, NgComponentOutlet } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-menu-item',\r\n  standalone: true,\r\n  imports: [RouterModule, NgClass, NgComponentOutlet],\r\n  templateUrl: './menu-item.component.html',\r\n})\r\nexport class MenuItemComponent {\r\n  @Input() label!: string;\r\n  @Input() route!: string;\r\n  @Input() active: boolean = false;\r\n  @Input() iconComponent!: Type<any>;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<a\r\n  [routerLink]=\"route\"\r\n  routerLinkActive=\"bg-cyan-blue-500 text-white\"\r\n  class=\"flex items-center gap-3 px-4 py-3 rounded-lg font-medium transition-colors duration-200 m-1\"\r\n  [ngClass]=\"{\r\n    'bg-cyan-blue-500 dark:bg-blue-violet-500 text-white': active,\r\n    'text-cyan-blue-900 dark:text-blue-violet-500 hover:text-white dark:hover:text-white hover:bg-cyan-blue-900 hover:dark:bg-blue-violet-900': !active\r\n  }\"\r\n>\r\n  <span [ngClass]=\"active ? 'text-white' : 'hover:text-cyan-blue-900 dark:hover:text-blue-violet-900'\">\r\n    <ng-container *ngComponentOutlet=\"iconComponent\"></ng-container>\r\n  </span>\r\n  <span>{{ label }}</span>\r\n</a>\r\n"
        },
        {
            "name": "MockDeleteModalComponent",
            "id": "component-MockDeleteModalComponent-b92860d134328ad15045ebaf7f5200d7272383474cc0add4173a7b602cc3dfaec84068402ca03a85524ae5e5cac2ce05a8bc1a528426e3bc45d13dfa28798c9f",
            "file": "src/app/shared/components/statement/statement.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [
                "isOpen"
            ],
            "outputs": [
                "confirm",
                "cancel"
            ],
            "providers": [],
            "selector": "app-delete-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<div *ngIf=\"isOpen\">Mock Delete Modal</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { StatementComponent } from './statement.component';\nimport { TextComponent } from '../text/text.component';\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { BrlPipe } from '../../pipes/brl.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../../services/Transaction/transaction-service';\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-arrow-pencil',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowPencilComponent {}\n\n@Component({\n  selector: 'app-icon-bin',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12z\"></path></svg>',\n  standalone: true\n})\nclass MockIconBinComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-down-left',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowDownLeftComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-right',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowRightComponent {}\n\n@Component({\n  selector: 'app-delete-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Delete Modal</div>',\n  inputs: ['isOpen'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockDeleteModalComponent {}\n\n@Component({\n  selector: 'app-edit-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Edit Modal</div>',\n  inputs: ['isOpen', 'transaction'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockEditModalComponent {}\n\n// Mock do TransactionService e TransactionEventService\nconst mockTransactionService = {\n  getByUserId: () => of([\n    {\n      id: '1',\n      type: 'exchange',\n      description: 'Câmbio de moeda',\n      amount: 1500.75,\n      date: new Date('2023-05-10'),\n      id_user: 'user123'\n    },\n    {\n      id: '2',\n      type: 'transfer',\n      description: 'Transferência bancária',\n      amount: 750.50,\n      date: new Date('2023-05-08'),\n      id_user: 'user123'\n    },\n    {\n      id: '3',\n      type: 'loan',\n      description: 'Empréstimo pessoal',\n      amount: 3000,\n      date: new Date('2023-05-05'),\n      id_user: 'user123'\n    }\n  ]),\n  delete: () => of({}),\n  update: () => of({})\n};\n\nconst mockTransactionEventService = {\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n};\n\n// Criando um mock do BrlPipe\nclass MockBrlPipe extends BrlPipe {\n  override transform(value: any): string {\n    return `R$ ${value.toFixed(2).replace('.', ',')}`;\n  }\n}\n\nconst meta: Meta<StatementComponent> = {\n  title: 'Componentes/Statement',\n  component: StatementComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule, \n        HttpClientModule,\n        TextComponent,\n        MockIconArrowPencilComponent,\n        MockIconBinComponent,\n        MockIconDollarComponent,\n        MockIconArrowDownLeftComponent,\n        MockIconArrowRightComponent,\n        MockDeleteModalComponent,\n        MockEditModalComponent\n      ],\n      providers: [\n        { provide: BrlPipe, useClass: MockBrlPipe },\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    showDetails: {\n      control: 'boolean',\n      description: 'Exibe detalhes das transações',\n    },\n    showAllTransactions: {\n      control: 'boolean',\n      description: 'Exibe todas as transações ou apenas as 6 mais recentes',\n    },\n    customTitle: {\n      control: 'text',\n      description: 'Título personalizado para o componente',\n    },\n    showLastTransactionsSubtitle: {\n      control: 'boolean',\n      description: 'Exibe o subtítulo de últimas transações',\n    },\n    swapColumns: {\n      control: 'boolean',\n      description: 'Inverte a ordem das colunas',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe um extrato de transações financeiras com opções para editar e excluir transações.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StatementComponent>;\n\nexport const Default: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: false\n  },\n};\n\nexport const AllTransactions: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: true,\n    customTitle: 'Histórico Completo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const CompactView: Story = {\n  args: {\n    showDetails: false,\n    showAllTransactions: false,\n    customTitle: 'Resumo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const SwappedColumns: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: true\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockEditModalComponent",
            "id": "component-MockEditModalComponent-b92860d134328ad15045ebaf7f5200d7272383474cc0add4173a7b602cc3dfaec84068402ca03a85524ae5e5cac2ce05a8bc1a528426e3bc45d13dfa28798c9f",
            "file": "src/app/shared/components/statement/statement.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [
                "isOpen",
                "transaction"
            ],
            "outputs": [
                "confirm",
                "cancel"
            ],
            "providers": [],
            "selector": "app-edit-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<div *ngIf=\"isOpen\">Mock Edit Modal</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { StatementComponent } from './statement.component';\nimport { TextComponent } from '../text/text.component';\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { BrlPipe } from '../../pipes/brl.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../../services/Transaction/transaction-service';\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-arrow-pencil',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowPencilComponent {}\n\n@Component({\n  selector: 'app-icon-bin',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12z\"></path></svg>',\n  standalone: true\n})\nclass MockIconBinComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-down-left',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowDownLeftComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-right',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowRightComponent {}\n\n@Component({\n  selector: 'app-delete-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Delete Modal</div>',\n  inputs: ['isOpen'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockDeleteModalComponent {}\n\n@Component({\n  selector: 'app-edit-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Edit Modal</div>',\n  inputs: ['isOpen', 'transaction'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockEditModalComponent {}\n\n// Mock do TransactionService e TransactionEventService\nconst mockTransactionService = {\n  getByUserId: () => of([\n    {\n      id: '1',\n      type: 'exchange',\n      description: 'Câmbio de moeda',\n      amount: 1500.75,\n      date: new Date('2023-05-10'),\n      id_user: 'user123'\n    },\n    {\n      id: '2',\n      type: 'transfer',\n      description: 'Transferência bancária',\n      amount: 750.50,\n      date: new Date('2023-05-08'),\n      id_user: 'user123'\n    },\n    {\n      id: '3',\n      type: 'loan',\n      description: 'Empréstimo pessoal',\n      amount: 3000,\n      date: new Date('2023-05-05'),\n      id_user: 'user123'\n    }\n  ]),\n  delete: () => of({}),\n  update: () => of({})\n};\n\nconst mockTransactionEventService = {\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n};\n\n// Criando um mock do BrlPipe\nclass MockBrlPipe extends BrlPipe {\n  override transform(value: any): string {\n    return `R$ ${value.toFixed(2).replace('.', ',')}`;\n  }\n}\n\nconst meta: Meta<StatementComponent> = {\n  title: 'Componentes/Statement',\n  component: StatementComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule, \n        HttpClientModule,\n        TextComponent,\n        MockIconArrowPencilComponent,\n        MockIconBinComponent,\n        MockIconDollarComponent,\n        MockIconArrowDownLeftComponent,\n        MockIconArrowRightComponent,\n        MockDeleteModalComponent,\n        MockEditModalComponent\n      ],\n      providers: [\n        { provide: BrlPipe, useClass: MockBrlPipe },\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    showDetails: {\n      control: 'boolean',\n      description: 'Exibe detalhes das transações',\n    },\n    showAllTransactions: {\n      control: 'boolean',\n      description: 'Exibe todas as transações ou apenas as 6 mais recentes',\n    },\n    customTitle: {\n      control: 'text',\n      description: 'Título personalizado para o componente',\n    },\n    showLastTransactionsSubtitle: {\n      control: 'boolean',\n      description: 'Exibe o subtítulo de últimas transações',\n    },\n    swapColumns: {\n      control: 'boolean',\n      description: 'Inverte a ordem das colunas',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe um extrato de transações financeiras com opções para editar e excluir transações.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StatementComponent>;\n\nexport const Default: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: false\n  },\n};\n\nexport const AllTransactions: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: true,\n    customTitle: 'Histórico Completo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const CompactView: Story = {\n  args: {\n    showDetails: false,\n    showAllTransactions: false,\n    customTitle: 'Resumo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const SwappedColumns: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: true\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconAccountCircleComponent",
            "id": "component-MockIconAccountCircleComponent-c16badd8263508c1cbc0db71dfe44d6787e6b800d3eadc331661087da90832cb823c5a00c7a4596f075bb984a804ab8271c2bc21b35ece1389d354ffd40663b2",
            "file": "src/app/shared/components/header/header.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-account-circle",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-4 h-4 bg-gray-500\">Account</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { HeaderComponent } from './header.component';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonComponent } from '../button/button.component';\nimport { TextComponent } from '../text/text.component';\nimport { MenuComponent } from '../menu/menu.component';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { UserService } from '../../services/User/user-service';\n\n// Mock dos serviços necessários\nclass ThemeService {\n  toggleDarkMode() {}\n  isDarkMode = false;\n}\n\nclass RouterMock {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Componentes mock para ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\n@Component({\n  selector: 'app-icon-darkmode',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Dark</div>',\n  standalone: true\n})\nclass MockIconDarkmodeComponent {}\n\n@Component({\n  selector: 'app-icon-hamburger',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Menu</div>',\n  standalone: true\n})\nclass MockIconHamburgerComponent {}\n\n@Component({\n  selector: 'app-icon-bell',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Bell</div>',\n  standalone: true\n})\nclass MockIconBellComponent {}\n\n@Component({\n  selector: 'app-icon-account-circle',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Account</div>',\n  standalone: true\n})\nclass MockIconAccountCircleComponent {}\n\n@Component({\n  selector: 'app-icon-arrowdown',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Arrow</div>',\n  standalone: true\n})\nclass MockIconArrowdownComponent {}\n\nexport default {\n  title: 'Componentes/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule.forChild([]),\n        ButtonComponent,\n        TextComponent,\n        MenuComponent,\n        MockIconLogoComponent,\n        MockIconExitComponent,\n        MockIconDarkmodeComponent,\n        MockIconHamburgerComponent,\n        MockIconBellComponent,\n        MockIconAccountCircleComponent,\n        MockIconArrowdownComponent\n      ],\n      providers: [\n        {\n          provide: ThemeService,\n          useValue: {\n            isDarkMode: () => false,\n            toggleDarkMode: () => {}\n          }\n        },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: UserService, useValue: {\n          getById: () => of({ name: 'Usuário Teste' })\n        }},\n        { provide: Router, useValue: new RouterMock() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de cabeçalho da aplicação, com diferentes estados para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      }\n    }\n  }\n} as Meta<HeaderComponent>;\n\ntype Story = StoryObj<HeaderComponent>;\n\n// Nota: Este componente é complexo e depende de muitos serviços e componentes.\n// Para o Storybook, seria melhor criar uma versão simplificada ou usar mocks mais elaborados.\n// As stories abaixo são exemplos, mas podem não funcionar corretamente no Storybook.\n\nexport const LoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const NotLoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n};\n\nexport const NotLoggedInMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconArrowdownComponent",
            "id": "component-MockIconArrowdownComponent-c16badd8263508c1cbc0db71dfe44d6787e6b800d3eadc331661087da90832cb823c5a00c7a4596f075bb984a804ab8271c2bc21b35ece1389d354ffd40663b2",
            "file": "src/app/shared/components/header/header.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-arrowdown",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-4 h-4 bg-gray-500\">Arrow</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { HeaderComponent } from './header.component';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonComponent } from '../button/button.component';\nimport { TextComponent } from '../text/text.component';\nimport { MenuComponent } from '../menu/menu.component';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { UserService } from '../../services/User/user-service';\n\n// Mock dos serviços necessários\nclass ThemeService {\n  toggleDarkMode() {}\n  isDarkMode = false;\n}\n\nclass RouterMock {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Componentes mock para ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\n@Component({\n  selector: 'app-icon-darkmode',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Dark</div>',\n  standalone: true\n})\nclass MockIconDarkmodeComponent {}\n\n@Component({\n  selector: 'app-icon-hamburger',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Menu</div>',\n  standalone: true\n})\nclass MockIconHamburgerComponent {}\n\n@Component({\n  selector: 'app-icon-bell',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Bell</div>',\n  standalone: true\n})\nclass MockIconBellComponent {}\n\n@Component({\n  selector: 'app-icon-account-circle',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Account</div>',\n  standalone: true\n})\nclass MockIconAccountCircleComponent {}\n\n@Component({\n  selector: 'app-icon-arrowdown',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Arrow</div>',\n  standalone: true\n})\nclass MockIconArrowdownComponent {}\n\nexport default {\n  title: 'Componentes/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule.forChild([]),\n        ButtonComponent,\n        TextComponent,\n        MenuComponent,\n        MockIconLogoComponent,\n        MockIconExitComponent,\n        MockIconDarkmodeComponent,\n        MockIconHamburgerComponent,\n        MockIconBellComponent,\n        MockIconAccountCircleComponent,\n        MockIconArrowdownComponent\n      ],\n      providers: [\n        {\n          provide: ThemeService,\n          useValue: {\n            isDarkMode: () => false,\n            toggleDarkMode: () => {}\n          }\n        },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: UserService, useValue: {\n          getById: () => of({ name: 'Usuário Teste' })\n        }},\n        { provide: Router, useValue: new RouterMock() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de cabeçalho da aplicação, com diferentes estados para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      }\n    }\n  }\n} as Meta<HeaderComponent>;\n\ntype Story = StoryObj<HeaderComponent>;\n\n// Nota: Este componente é complexo e depende de muitos serviços e componentes.\n// Para o Storybook, seria melhor criar uma versão simplificada ou usar mocks mais elaborados.\n// As stories abaixo são exemplos, mas podem não funcionar corretamente no Storybook.\n\nexport const LoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const NotLoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n};\n\nexport const NotLoggedInMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconArrowDownLeftComponent",
            "id": "component-MockIconArrowDownLeftComponent-b92860d134328ad15045ebaf7f5200d7272383474cc0add4173a7b602cc3dfaec84068402ca03a85524ae5e5cac2ce05a8bc1a528426e3bc45d13dfa28798c9f",
            "file": "src/app/shared/components/statement/statement.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-arrow-down-left",
            "styleUrls": [],
            "styles": [],
            "template": "<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"></path></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { StatementComponent } from './statement.component';\nimport { TextComponent } from '../text/text.component';\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { BrlPipe } from '../../pipes/brl.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../../services/Transaction/transaction-service';\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-arrow-pencil',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowPencilComponent {}\n\n@Component({\n  selector: 'app-icon-bin',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12z\"></path></svg>',\n  standalone: true\n})\nclass MockIconBinComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-down-left',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowDownLeftComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-right',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowRightComponent {}\n\n@Component({\n  selector: 'app-delete-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Delete Modal</div>',\n  inputs: ['isOpen'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockDeleteModalComponent {}\n\n@Component({\n  selector: 'app-edit-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Edit Modal</div>',\n  inputs: ['isOpen', 'transaction'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockEditModalComponent {}\n\n// Mock do TransactionService e TransactionEventService\nconst mockTransactionService = {\n  getByUserId: () => of([\n    {\n      id: '1',\n      type: 'exchange',\n      description: 'Câmbio de moeda',\n      amount: 1500.75,\n      date: new Date('2023-05-10'),\n      id_user: 'user123'\n    },\n    {\n      id: '2',\n      type: 'transfer',\n      description: 'Transferência bancária',\n      amount: 750.50,\n      date: new Date('2023-05-08'),\n      id_user: 'user123'\n    },\n    {\n      id: '3',\n      type: 'loan',\n      description: 'Empréstimo pessoal',\n      amount: 3000,\n      date: new Date('2023-05-05'),\n      id_user: 'user123'\n    }\n  ]),\n  delete: () => of({}),\n  update: () => of({})\n};\n\nconst mockTransactionEventService = {\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n};\n\n// Criando um mock do BrlPipe\nclass MockBrlPipe extends BrlPipe {\n  override transform(value: any): string {\n    return `R$ ${value.toFixed(2).replace('.', ',')}`;\n  }\n}\n\nconst meta: Meta<StatementComponent> = {\n  title: 'Componentes/Statement',\n  component: StatementComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule, \n        HttpClientModule,\n        TextComponent,\n        MockIconArrowPencilComponent,\n        MockIconBinComponent,\n        MockIconDollarComponent,\n        MockIconArrowDownLeftComponent,\n        MockIconArrowRightComponent,\n        MockDeleteModalComponent,\n        MockEditModalComponent\n      ],\n      providers: [\n        { provide: BrlPipe, useClass: MockBrlPipe },\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    showDetails: {\n      control: 'boolean',\n      description: 'Exibe detalhes das transações',\n    },\n    showAllTransactions: {\n      control: 'boolean',\n      description: 'Exibe todas as transações ou apenas as 6 mais recentes',\n    },\n    customTitle: {\n      control: 'text',\n      description: 'Título personalizado para o componente',\n    },\n    showLastTransactionsSubtitle: {\n      control: 'boolean',\n      description: 'Exibe o subtítulo de últimas transações',\n    },\n    swapColumns: {\n      control: 'boolean',\n      description: 'Inverte a ordem das colunas',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe um extrato de transações financeiras com opções para editar e excluir transações.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StatementComponent>;\n\nexport const Default: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: false\n  },\n};\n\nexport const AllTransactions: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: true,\n    customTitle: 'Histórico Completo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const CompactView: Story = {\n  args: {\n    showDetails: false,\n    showAllTransactions: false,\n    customTitle: 'Resumo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const SwappedColumns: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: true\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconArrowPencilComponent",
            "id": "component-MockIconArrowPencilComponent-b92860d134328ad15045ebaf7f5200d7272383474cc0add4173a7b602cc3dfaec84068402ca03a85524ae5e5cac2ce05a8bc1a528426e3bc45d13dfa28798c9f",
            "file": "src/app/shared/components/statement/statement.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-arrow-pencil",
            "styleUrls": [],
            "styles": [],
            "template": "<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25z\"></path></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { StatementComponent } from './statement.component';\nimport { TextComponent } from '../text/text.component';\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { BrlPipe } from '../../pipes/brl.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../../services/Transaction/transaction-service';\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-arrow-pencil',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowPencilComponent {}\n\n@Component({\n  selector: 'app-icon-bin',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12z\"></path></svg>',\n  standalone: true\n})\nclass MockIconBinComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-down-left',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowDownLeftComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-right',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowRightComponent {}\n\n@Component({\n  selector: 'app-delete-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Delete Modal</div>',\n  inputs: ['isOpen'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockDeleteModalComponent {}\n\n@Component({\n  selector: 'app-edit-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Edit Modal</div>',\n  inputs: ['isOpen', 'transaction'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockEditModalComponent {}\n\n// Mock do TransactionService e TransactionEventService\nconst mockTransactionService = {\n  getByUserId: () => of([\n    {\n      id: '1',\n      type: 'exchange',\n      description: 'Câmbio de moeda',\n      amount: 1500.75,\n      date: new Date('2023-05-10'),\n      id_user: 'user123'\n    },\n    {\n      id: '2',\n      type: 'transfer',\n      description: 'Transferência bancária',\n      amount: 750.50,\n      date: new Date('2023-05-08'),\n      id_user: 'user123'\n    },\n    {\n      id: '3',\n      type: 'loan',\n      description: 'Empréstimo pessoal',\n      amount: 3000,\n      date: new Date('2023-05-05'),\n      id_user: 'user123'\n    }\n  ]),\n  delete: () => of({}),\n  update: () => of({})\n};\n\nconst mockTransactionEventService = {\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n};\n\n// Criando um mock do BrlPipe\nclass MockBrlPipe extends BrlPipe {\n  override transform(value: any): string {\n    return `R$ ${value.toFixed(2).replace('.', ',')}`;\n  }\n}\n\nconst meta: Meta<StatementComponent> = {\n  title: 'Componentes/Statement',\n  component: StatementComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule, \n        HttpClientModule,\n        TextComponent,\n        MockIconArrowPencilComponent,\n        MockIconBinComponent,\n        MockIconDollarComponent,\n        MockIconArrowDownLeftComponent,\n        MockIconArrowRightComponent,\n        MockDeleteModalComponent,\n        MockEditModalComponent\n      ],\n      providers: [\n        { provide: BrlPipe, useClass: MockBrlPipe },\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    showDetails: {\n      control: 'boolean',\n      description: 'Exibe detalhes das transações',\n    },\n    showAllTransactions: {\n      control: 'boolean',\n      description: 'Exibe todas as transações ou apenas as 6 mais recentes',\n    },\n    customTitle: {\n      control: 'text',\n      description: 'Título personalizado para o componente',\n    },\n    showLastTransactionsSubtitle: {\n      control: 'boolean',\n      description: 'Exibe o subtítulo de últimas transações',\n    },\n    swapColumns: {\n      control: 'boolean',\n      description: 'Inverte a ordem das colunas',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe um extrato de transações financeiras com opções para editar e excluir transações.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StatementComponent>;\n\nexport const Default: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: false\n  },\n};\n\nexport const AllTransactions: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: true,\n    customTitle: 'Histórico Completo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const CompactView: Story = {\n  args: {\n    showDetails: false,\n    showAllTransactions: false,\n    customTitle: 'Resumo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const SwappedColumns: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: true\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconArrowRightComponent",
            "id": "component-MockIconArrowRightComponent-b92860d134328ad15045ebaf7f5200d7272383474cc0add4173a7b602cc3dfaec84068402ca03a85524ae5e5cac2ce05a8bc1a528426e3bc45d13dfa28798c9f",
            "file": "src/app/shared/components/statement/statement.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-arrow-right",
            "styleUrls": [],
            "styles": [],
            "template": "<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { StatementComponent } from './statement.component';\nimport { TextComponent } from '../text/text.component';\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { BrlPipe } from '../../pipes/brl.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../../services/Transaction/transaction-service';\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-arrow-pencil',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowPencilComponent {}\n\n@Component({\n  selector: 'app-icon-bin',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12z\"></path></svg>',\n  standalone: true\n})\nclass MockIconBinComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-down-left',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowDownLeftComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-right',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowRightComponent {}\n\n@Component({\n  selector: 'app-delete-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Delete Modal</div>',\n  inputs: ['isOpen'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockDeleteModalComponent {}\n\n@Component({\n  selector: 'app-edit-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Edit Modal</div>',\n  inputs: ['isOpen', 'transaction'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockEditModalComponent {}\n\n// Mock do TransactionService e TransactionEventService\nconst mockTransactionService = {\n  getByUserId: () => of([\n    {\n      id: '1',\n      type: 'exchange',\n      description: 'Câmbio de moeda',\n      amount: 1500.75,\n      date: new Date('2023-05-10'),\n      id_user: 'user123'\n    },\n    {\n      id: '2',\n      type: 'transfer',\n      description: 'Transferência bancária',\n      amount: 750.50,\n      date: new Date('2023-05-08'),\n      id_user: 'user123'\n    },\n    {\n      id: '3',\n      type: 'loan',\n      description: 'Empréstimo pessoal',\n      amount: 3000,\n      date: new Date('2023-05-05'),\n      id_user: 'user123'\n    }\n  ]),\n  delete: () => of({}),\n  update: () => of({})\n};\n\nconst mockTransactionEventService = {\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n};\n\n// Criando um mock do BrlPipe\nclass MockBrlPipe extends BrlPipe {\n  override transform(value: any): string {\n    return `R$ ${value.toFixed(2).replace('.', ',')}`;\n  }\n}\n\nconst meta: Meta<StatementComponent> = {\n  title: 'Componentes/Statement',\n  component: StatementComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule, \n        HttpClientModule,\n        TextComponent,\n        MockIconArrowPencilComponent,\n        MockIconBinComponent,\n        MockIconDollarComponent,\n        MockIconArrowDownLeftComponent,\n        MockIconArrowRightComponent,\n        MockDeleteModalComponent,\n        MockEditModalComponent\n      ],\n      providers: [\n        { provide: BrlPipe, useClass: MockBrlPipe },\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    showDetails: {\n      control: 'boolean',\n      description: 'Exibe detalhes das transações',\n    },\n    showAllTransactions: {\n      control: 'boolean',\n      description: 'Exibe todas as transações ou apenas as 6 mais recentes',\n    },\n    customTitle: {\n      control: 'text',\n      description: 'Título personalizado para o componente',\n    },\n    showLastTransactionsSubtitle: {\n      control: 'boolean',\n      description: 'Exibe o subtítulo de últimas transações',\n    },\n    swapColumns: {\n      control: 'boolean',\n      description: 'Inverte a ordem das colunas',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe um extrato de transações financeiras com opções para editar e excluir transações.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StatementComponent>;\n\nexport const Default: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: false\n  },\n};\n\nexport const AllTransactions: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: true,\n    customTitle: 'Histórico Completo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const CompactView: Story = {\n  args: {\n    showDetails: false,\n    showAllTransactions: false,\n    customTitle: 'Resumo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const SwappedColumns: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: true\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconBellComponent",
            "id": "component-MockIconBellComponent-c16badd8263508c1cbc0db71dfe44d6787e6b800d3eadc331661087da90832cb823c5a00c7a4596f075bb984a804ab8271c2bc21b35ece1389d354ffd40663b2",
            "file": "src/app/shared/components/header/header.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-bell",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-4 h-4 bg-gray-500\">Bell</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { HeaderComponent } from './header.component';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonComponent } from '../button/button.component';\nimport { TextComponent } from '../text/text.component';\nimport { MenuComponent } from '../menu/menu.component';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { UserService } from '../../services/User/user-service';\n\n// Mock dos serviços necessários\nclass ThemeService {\n  toggleDarkMode() {}\n  isDarkMode = false;\n}\n\nclass RouterMock {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Componentes mock para ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\n@Component({\n  selector: 'app-icon-darkmode',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Dark</div>',\n  standalone: true\n})\nclass MockIconDarkmodeComponent {}\n\n@Component({\n  selector: 'app-icon-hamburger',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Menu</div>',\n  standalone: true\n})\nclass MockIconHamburgerComponent {}\n\n@Component({\n  selector: 'app-icon-bell',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Bell</div>',\n  standalone: true\n})\nclass MockIconBellComponent {}\n\n@Component({\n  selector: 'app-icon-account-circle',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Account</div>',\n  standalone: true\n})\nclass MockIconAccountCircleComponent {}\n\n@Component({\n  selector: 'app-icon-arrowdown',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Arrow</div>',\n  standalone: true\n})\nclass MockIconArrowdownComponent {}\n\nexport default {\n  title: 'Componentes/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule.forChild([]),\n        ButtonComponent,\n        TextComponent,\n        MenuComponent,\n        MockIconLogoComponent,\n        MockIconExitComponent,\n        MockIconDarkmodeComponent,\n        MockIconHamburgerComponent,\n        MockIconBellComponent,\n        MockIconAccountCircleComponent,\n        MockIconArrowdownComponent\n      ],\n      providers: [\n        {\n          provide: ThemeService,\n          useValue: {\n            isDarkMode: () => false,\n            toggleDarkMode: () => {}\n          }\n        },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: UserService, useValue: {\n          getById: () => of({ name: 'Usuário Teste' })\n        }},\n        { provide: Router, useValue: new RouterMock() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de cabeçalho da aplicação, com diferentes estados para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      }\n    }\n  }\n} as Meta<HeaderComponent>;\n\ntype Story = StoryObj<HeaderComponent>;\n\n// Nota: Este componente é complexo e depende de muitos serviços e componentes.\n// Para o Storybook, seria melhor criar uma versão simplificada ou usar mocks mais elaborados.\n// As stories abaixo são exemplos, mas podem não funcionar corretamente no Storybook.\n\nexport const LoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const NotLoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n};\n\nexport const NotLoggedInMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconBinComponent",
            "id": "component-MockIconBinComponent-b92860d134328ad15045ebaf7f5200d7272383474cc0add4173a7b602cc3dfaec84068402ca03a85524ae5e5cac2ce05a8bc1a528426e3bc45d13dfa28798c9f",
            "file": "src/app/shared/components/statement/statement.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-bin",
            "styleUrls": [],
            "styles": [],
            "template": "<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12z\"></path></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { StatementComponent } from './statement.component';\nimport { TextComponent } from '../text/text.component';\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { BrlPipe } from '../../pipes/brl.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../../services/Transaction/transaction-service';\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-arrow-pencil',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowPencilComponent {}\n\n@Component({\n  selector: 'app-icon-bin',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12z\"></path></svg>',\n  standalone: true\n})\nclass MockIconBinComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-down-left',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowDownLeftComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-right',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowRightComponent {}\n\n@Component({\n  selector: 'app-delete-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Delete Modal</div>',\n  inputs: ['isOpen'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockDeleteModalComponent {}\n\n@Component({\n  selector: 'app-edit-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Edit Modal</div>',\n  inputs: ['isOpen', 'transaction'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockEditModalComponent {}\n\n// Mock do TransactionService e TransactionEventService\nconst mockTransactionService = {\n  getByUserId: () => of([\n    {\n      id: '1',\n      type: 'exchange',\n      description: 'Câmbio de moeda',\n      amount: 1500.75,\n      date: new Date('2023-05-10'),\n      id_user: 'user123'\n    },\n    {\n      id: '2',\n      type: 'transfer',\n      description: 'Transferência bancária',\n      amount: 750.50,\n      date: new Date('2023-05-08'),\n      id_user: 'user123'\n    },\n    {\n      id: '3',\n      type: 'loan',\n      description: 'Empréstimo pessoal',\n      amount: 3000,\n      date: new Date('2023-05-05'),\n      id_user: 'user123'\n    }\n  ]),\n  delete: () => of({}),\n  update: () => of({})\n};\n\nconst mockTransactionEventService = {\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n};\n\n// Criando um mock do BrlPipe\nclass MockBrlPipe extends BrlPipe {\n  override transform(value: any): string {\n    return `R$ ${value.toFixed(2).replace('.', ',')}`;\n  }\n}\n\nconst meta: Meta<StatementComponent> = {\n  title: 'Componentes/Statement',\n  component: StatementComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule, \n        HttpClientModule,\n        TextComponent,\n        MockIconArrowPencilComponent,\n        MockIconBinComponent,\n        MockIconDollarComponent,\n        MockIconArrowDownLeftComponent,\n        MockIconArrowRightComponent,\n        MockDeleteModalComponent,\n        MockEditModalComponent\n      ],\n      providers: [\n        { provide: BrlPipe, useClass: MockBrlPipe },\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    showDetails: {\n      control: 'boolean',\n      description: 'Exibe detalhes das transações',\n    },\n    showAllTransactions: {\n      control: 'boolean',\n      description: 'Exibe todas as transações ou apenas as 6 mais recentes',\n    },\n    customTitle: {\n      control: 'text',\n      description: 'Título personalizado para o componente',\n    },\n    showLastTransactionsSubtitle: {\n      control: 'boolean',\n      description: 'Exibe o subtítulo de últimas transações',\n    },\n    swapColumns: {\n      control: 'boolean',\n      description: 'Inverte a ordem das colunas',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe um extrato de transações financeiras com opções para editar e excluir transações.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StatementComponent>;\n\nexport const Default: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: false\n  },\n};\n\nexport const AllTransactions: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: true,\n    customTitle: 'Histórico Completo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const CompactView: Story = {\n  args: {\n    showDetails: false,\n    showAllTransactions: false,\n    customTitle: 'Resumo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const SwappedColumns: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: true\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconCardComponent",
            "id": "component-MockIconCardComponent-91bbc9abef01461860859982f431ace3e1935f2eeba265502e0f1166be2a641bd55cbea429ea774fd7345f562e2857c762ac609694bce00b7399bec4928afb63",
            "file": "src/app/shared/components/aside/aside.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-card",
            "styleUrls": [],
            "styles": [],
            "template": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { AsideComponent } from './aside.component';\nimport { MenuItemComponent } from '../menu-item/menu-item.component';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { NgClass, NgComponentOutlet } from '@angular/common';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/panel';\n  events = {\n    subscribe: () => {}\n  };\n}\n\n// Componentes de ícones mock para os exemplos\n@Component({\n  selector: 'app-icon-home',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>',\n  standalone: true\n})\nclass MockIconHomeComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-list',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line><line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line><line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line><line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line></svg>',\n  standalone: true\n})\nclass MockIconListComponent {}\n\n@Component({\n  selector: 'app-icon-card',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>',\n  standalone: true\n})\nclass MockIconCardComponent {}\n\n@Component({\n  selector: 'app-icon-settings',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle></svg>',\n  standalone: true\n})\nclass MockIconSettingsComponent {}\n\nconst meta: Meta<AsideComponent> = {\n  title: 'Componentes/Aside',\n  component: AsideComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]),\n        MenuItemComponent,\n        NgClass,\n        NgComponentOutlet,\n        MockIconHomeComponent,\n        MockIconDollarComponent,\n        MockIconListComponent,\n        MockIconCardComponent,\n        MockIconSettingsComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de barra lateral de navegação com menu de itens para as principais seções da aplicação.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<AsideComponent>;\n\nexport const Default: Story = {\n  args: {\n    currentRoute: '/panel'\n  },\n};\n\nexport const TransactionsActive: Story = {\n  args: {\n    currentRoute: '/transactions'\n  },\n};\n\nexport const CardsActive: Story = {\n  args: {\n    currentRoute: '/cards'\n  },\n};\n\nexport const ConfigurationsActive: Story = {\n  args: {\n    currentRoute: '/configurations'\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconDarkmodeComponent",
            "id": "component-MockIconDarkmodeComponent-c16badd8263508c1cbc0db71dfe44d6787e6b800d3eadc331661087da90832cb823c5a00c7a4596f075bb984a804ab8271c2bc21b35ece1389d354ffd40663b2",
            "file": "src/app/shared/components/header/header.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-darkmode",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-4 h-4 bg-gray-500\">Dark</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { HeaderComponent } from './header.component';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonComponent } from '../button/button.component';\nimport { TextComponent } from '../text/text.component';\nimport { MenuComponent } from '../menu/menu.component';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { UserService } from '../../services/User/user-service';\n\n// Mock dos serviços necessários\nclass ThemeService {\n  toggleDarkMode() {}\n  isDarkMode = false;\n}\n\nclass RouterMock {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Componentes mock para ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\n@Component({\n  selector: 'app-icon-darkmode',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Dark</div>',\n  standalone: true\n})\nclass MockIconDarkmodeComponent {}\n\n@Component({\n  selector: 'app-icon-hamburger',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Menu</div>',\n  standalone: true\n})\nclass MockIconHamburgerComponent {}\n\n@Component({\n  selector: 'app-icon-bell',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Bell</div>',\n  standalone: true\n})\nclass MockIconBellComponent {}\n\n@Component({\n  selector: 'app-icon-account-circle',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Account</div>',\n  standalone: true\n})\nclass MockIconAccountCircleComponent {}\n\n@Component({\n  selector: 'app-icon-arrowdown',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Arrow</div>',\n  standalone: true\n})\nclass MockIconArrowdownComponent {}\n\nexport default {\n  title: 'Componentes/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule.forChild([]),\n        ButtonComponent,\n        TextComponent,\n        MenuComponent,\n        MockIconLogoComponent,\n        MockIconExitComponent,\n        MockIconDarkmodeComponent,\n        MockIconHamburgerComponent,\n        MockIconBellComponent,\n        MockIconAccountCircleComponent,\n        MockIconArrowdownComponent\n      ],\n      providers: [\n        {\n          provide: ThemeService,\n          useValue: {\n            isDarkMode: () => false,\n            toggleDarkMode: () => {}\n          }\n        },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: UserService, useValue: {\n          getById: () => of({ name: 'Usuário Teste' })\n        }},\n        { provide: Router, useValue: new RouterMock() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de cabeçalho da aplicação, com diferentes estados para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      }\n    }\n  }\n} as Meta<HeaderComponent>;\n\ntype Story = StoryObj<HeaderComponent>;\n\n// Nota: Este componente é complexo e depende de muitos serviços e componentes.\n// Para o Storybook, seria melhor criar uma versão simplificada ou usar mocks mais elaborados.\n// As stories abaixo são exemplos, mas podem não funcionar corretamente no Storybook.\n\nexport const LoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const NotLoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n};\n\nexport const NotLoggedInMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconDollarComponent",
            "id": "component-MockIconDollarComponent-91bbc9abef01461860859982f431ace3e1935f2eeba265502e0f1166be2a641bd55cbea429ea774fd7345f562e2857c762ac609694bce00b7399bec4928afb63",
            "file": "src/app/shared/components/aside/aside.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-dollar",
            "styleUrls": [],
            "styles": [],
            "template": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { AsideComponent } from './aside.component';\nimport { MenuItemComponent } from '../menu-item/menu-item.component';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { NgClass, NgComponentOutlet } from '@angular/common';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/panel';\n  events = {\n    subscribe: () => {}\n  };\n}\n\n// Componentes de ícones mock para os exemplos\n@Component({\n  selector: 'app-icon-home',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>',\n  standalone: true\n})\nclass MockIconHomeComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-list',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line><line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line><line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line><line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line></svg>',\n  standalone: true\n})\nclass MockIconListComponent {}\n\n@Component({\n  selector: 'app-icon-card',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>',\n  standalone: true\n})\nclass MockIconCardComponent {}\n\n@Component({\n  selector: 'app-icon-settings',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle></svg>',\n  standalone: true\n})\nclass MockIconSettingsComponent {}\n\nconst meta: Meta<AsideComponent> = {\n  title: 'Componentes/Aside',\n  component: AsideComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]),\n        MenuItemComponent,\n        NgClass,\n        NgComponentOutlet,\n        MockIconHomeComponent,\n        MockIconDollarComponent,\n        MockIconListComponent,\n        MockIconCardComponent,\n        MockIconSettingsComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de barra lateral de navegação com menu de itens para as principais seções da aplicação.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<AsideComponent>;\n\nexport const Default: Story = {\n  args: {\n    currentRoute: '/panel'\n  },\n};\n\nexport const TransactionsActive: Story = {\n  args: {\n    currentRoute: '/transactions'\n  },\n};\n\nexport const CardsActive: Story = {\n  args: {\n    currentRoute: '/cards'\n  },\n};\n\nexport const ConfigurationsActive: Story = {\n  args: {\n    currentRoute: '/configurations'\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconDollarComponent",
            "id": "component-MockIconDollarComponent-b92860d134328ad15045ebaf7f5200d7272383474cc0add4173a7b602cc3dfaec84068402ca03a85524ae5e5cac2ce05a8bc1a528426e3bc45d13dfa28798c9f-1",
            "file": "src/app/shared/components/statement/statement.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-dollar",
            "styleUrls": [],
            "styles": [],
            "template": "<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"></path></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { StatementComponent } from './statement.component';\nimport { TextComponent } from '../text/text.component';\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { BrlPipe } from '../../pipes/brl.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../../services/Transaction/transaction-service';\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-arrow-pencil',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowPencilComponent {}\n\n@Component({\n  selector: 'app-icon-bin',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12z\"></path></svg>',\n  standalone: true\n})\nclass MockIconBinComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-down-left',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowDownLeftComponent {}\n\n@Component({\n  selector: 'app-icon-arrow-right',\n  template: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"></path></svg>',\n  standalone: true\n})\nclass MockIconArrowRightComponent {}\n\n@Component({\n  selector: 'app-delete-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Delete Modal</div>',\n  inputs: ['isOpen'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockDeleteModalComponent {}\n\n@Component({\n  selector: 'app-edit-modal',\n  template: '<div *ngIf=\"isOpen\">Mock Edit Modal</div>',\n  inputs: ['isOpen', 'transaction'],\n  outputs: ['confirm', 'cancel'],\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockEditModalComponent {}\n\n// Mock do TransactionService e TransactionEventService\nconst mockTransactionService = {\n  getByUserId: () => of([\n    {\n      id: '1',\n      type: 'exchange',\n      description: 'Câmbio de moeda',\n      amount: 1500.75,\n      date: new Date('2023-05-10'),\n      id_user: 'user123'\n    },\n    {\n      id: '2',\n      type: 'transfer',\n      description: 'Transferência bancária',\n      amount: 750.50,\n      date: new Date('2023-05-08'),\n      id_user: 'user123'\n    },\n    {\n      id: '3',\n      type: 'loan',\n      description: 'Empréstimo pessoal',\n      amount: 3000,\n      date: new Date('2023-05-05'),\n      id_user: 'user123'\n    }\n  ]),\n  delete: () => of({}),\n  update: () => of({})\n};\n\nconst mockTransactionEventService = {\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n};\n\n// Criando um mock do BrlPipe\nclass MockBrlPipe extends BrlPipe {\n  override transform(value: any): string {\n    return `R$ ${value.toFixed(2).replace('.', ',')}`;\n  }\n}\n\nconst meta: Meta<StatementComponent> = {\n  title: 'Componentes/Statement',\n  component: StatementComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule, \n        HttpClientModule,\n        TextComponent,\n        MockIconArrowPencilComponent,\n        MockIconBinComponent,\n        MockIconDollarComponent,\n        MockIconArrowDownLeftComponent,\n        MockIconArrowRightComponent,\n        MockDeleteModalComponent,\n        MockEditModalComponent\n      ],\n      providers: [\n        { provide: BrlPipe, useClass: MockBrlPipe },\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    showDetails: {\n      control: 'boolean',\n      description: 'Exibe detalhes das transações',\n    },\n    showAllTransactions: {\n      control: 'boolean',\n      description: 'Exibe todas as transações ou apenas as 6 mais recentes',\n    },\n    customTitle: {\n      control: 'text',\n      description: 'Título personalizado para o componente',\n    },\n    showLastTransactionsSubtitle: {\n      control: 'boolean',\n      description: 'Exibe o subtítulo de últimas transações',\n    },\n    swapColumns: {\n      control: 'boolean',\n      description: 'Inverte a ordem das colunas',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe um extrato de transações financeiras com opções para editar e excluir transações.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<StatementComponent>;\n\nexport const Default: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: false\n  },\n};\n\nexport const AllTransactions: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: true,\n    customTitle: 'Histórico Completo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const CompactView: Story = {\n  args: {\n    showDetails: false,\n    showAllTransactions: false,\n    customTitle: 'Resumo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n};\n\nexport const SwappedColumns: Story = {\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: true\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "MockIconDollarComponent-1"
        },
        {
            "name": "MockIconExitComponent",
            "id": "component-MockIconExitComponent-c16badd8263508c1cbc0db71dfe44d6787e6b800d3eadc331661087da90832cb823c5a00c7a4596f075bb984a804ab8271c2bc21b35ece1389d354ffd40663b2",
            "file": "src/app/shared/components/header/header.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-exit",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-4 h-4 bg-gray-500\">Exit</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { HeaderComponent } from './header.component';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonComponent } from '../button/button.component';\nimport { TextComponent } from '../text/text.component';\nimport { MenuComponent } from '../menu/menu.component';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { UserService } from '../../services/User/user-service';\n\n// Mock dos serviços necessários\nclass ThemeService {\n  toggleDarkMode() {}\n  isDarkMode = false;\n}\n\nclass RouterMock {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Componentes mock para ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\n@Component({\n  selector: 'app-icon-darkmode',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Dark</div>',\n  standalone: true\n})\nclass MockIconDarkmodeComponent {}\n\n@Component({\n  selector: 'app-icon-hamburger',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Menu</div>',\n  standalone: true\n})\nclass MockIconHamburgerComponent {}\n\n@Component({\n  selector: 'app-icon-bell',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Bell</div>',\n  standalone: true\n})\nclass MockIconBellComponent {}\n\n@Component({\n  selector: 'app-icon-account-circle',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Account</div>',\n  standalone: true\n})\nclass MockIconAccountCircleComponent {}\n\n@Component({\n  selector: 'app-icon-arrowdown',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Arrow</div>',\n  standalone: true\n})\nclass MockIconArrowdownComponent {}\n\nexport default {\n  title: 'Componentes/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule.forChild([]),\n        ButtonComponent,\n        TextComponent,\n        MenuComponent,\n        MockIconLogoComponent,\n        MockIconExitComponent,\n        MockIconDarkmodeComponent,\n        MockIconHamburgerComponent,\n        MockIconBellComponent,\n        MockIconAccountCircleComponent,\n        MockIconArrowdownComponent\n      ],\n      providers: [\n        {\n          provide: ThemeService,\n          useValue: {\n            isDarkMode: () => false,\n            toggleDarkMode: () => {}\n          }\n        },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: UserService, useValue: {\n          getById: () => of({ name: 'Usuário Teste' })\n        }},\n        { provide: Router, useValue: new RouterMock() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de cabeçalho da aplicação, com diferentes estados para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      }\n    }\n  }\n} as Meta<HeaderComponent>;\n\ntype Story = StoryObj<HeaderComponent>;\n\n// Nota: Este componente é complexo e depende de muitos serviços e componentes.\n// Para o Storybook, seria melhor criar uma versão simplificada ou usar mocks mais elaborados.\n// As stories abaixo são exemplos, mas podem não funcionar corretamente no Storybook.\n\nexport const LoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const NotLoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n};\n\nexport const NotLoggedInMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconExitComponent",
            "id": "component-MockIconExitComponent-b15c97a105addf40642efcd58ef03e3f425a08317301491b6aefd7c293f40f6a6bbcf92c764e4f5d4f3994767edcc735d8aa6cc1030d478d12bb1b2085af5b87-1",
            "file": "src/app/shared/components/menu/menu.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-exit",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-4 h-4 bg-gray-500\">Exit</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { MenuComponent } from './menu.component';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from '../button/button.component';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Mock do ThemeService\nclass ThemeService {\n  isDarkMode() { return false; }\n  toggleDarkMode() {}\n}\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\nconst meta: Meta<MenuComponent> = {\n  title: 'Componentes/Menu',\n  component: MenuComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        ButtonComponent,\n        MockIconExitComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() },\n        { provide: ThemeService, useValue: new ThemeService() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    mobile: {\n      control: 'boolean',\n      description: 'Define se está em modo mobile',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    tablet: {\n      control: 'boolean',\n      description: 'Define se está em modo tablet',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    menuOpen: {\n      control: 'boolean',\n      description: 'Define se o menu está aberto',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    closeMenu: {\n      action: 'closeMenu',\n      description: 'Evento emitido quando o menu é fechado',\n    },\n    menuRefReady: {\n      action: 'menuRefReady',\n      description: 'Evento emitido quando a referência do menu está pronta',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de menu da aplicação, com diferentes layouts para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MenuComponent>;\n\nexport const LoggedOutMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false,\n    menuOpen: true,\n  },\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    menuOpen: false,\n  },\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    menuOpen: true,\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "MockIconExitComponent-1"
        },
        {
            "name": "MockIconHamburgerComponent",
            "id": "component-MockIconHamburgerComponent-c16badd8263508c1cbc0db71dfe44d6787e6b800d3eadc331661087da90832cb823c5a00c7a4596f075bb984a804ab8271c2bc21b35ece1389d354ffd40663b2",
            "file": "src/app/shared/components/header/header.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-hamburger",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-4 h-4 bg-gray-500\">Menu</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { HeaderComponent } from './header.component';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonComponent } from '../button/button.component';\nimport { TextComponent } from '../text/text.component';\nimport { MenuComponent } from '../menu/menu.component';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { UserService } from '../../services/User/user-service';\n\n// Mock dos serviços necessários\nclass ThemeService {\n  toggleDarkMode() {}\n  isDarkMode = false;\n}\n\nclass RouterMock {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Componentes mock para ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\n@Component({\n  selector: 'app-icon-darkmode',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Dark</div>',\n  standalone: true\n})\nclass MockIconDarkmodeComponent {}\n\n@Component({\n  selector: 'app-icon-hamburger',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Menu</div>',\n  standalone: true\n})\nclass MockIconHamburgerComponent {}\n\n@Component({\n  selector: 'app-icon-bell',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Bell</div>',\n  standalone: true\n})\nclass MockIconBellComponent {}\n\n@Component({\n  selector: 'app-icon-account-circle',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Account</div>',\n  standalone: true\n})\nclass MockIconAccountCircleComponent {}\n\n@Component({\n  selector: 'app-icon-arrowdown',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Arrow</div>',\n  standalone: true\n})\nclass MockIconArrowdownComponent {}\n\nexport default {\n  title: 'Componentes/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule.forChild([]),\n        ButtonComponent,\n        TextComponent,\n        MenuComponent,\n        MockIconLogoComponent,\n        MockIconExitComponent,\n        MockIconDarkmodeComponent,\n        MockIconHamburgerComponent,\n        MockIconBellComponent,\n        MockIconAccountCircleComponent,\n        MockIconArrowdownComponent\n      ],\n      providers: [\n        {\n          provide: ThemeService,\n          useValue: {\n            isDarkMode: () => false,\n            toggleDarkMode: () => {}\n          }\n        },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: UserService, useValue: {\n          getById: () => of({ name: 'Usuário Teste' })\n        }},\n        { provide: Router, useValue: new RouterMock() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de cabeçalho da aplicação, com diferentes estados para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      }\n    }\n  }\n} as Meta<HeaderComponent>;\n\ntype Story = StoryObj<HeaderComponent>;\n\n// Nota: Este componente é complexo e depende de muitos serviços e componentes.\n// Para o Storybook, seria melhor criar uma versão simplificada ou usar mocks mais elaborados.\n// As stories abaixo são exemplos, mas podem não funcionar corretamente no Storybook.\n\nexport const LoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const NotLoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n};\n\nexport const NotLoggedInMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconHomeComponent",
            "id": "component-MockIconHomeComponent-91bbc9abef01461860859982f431ace3e1935f2eeba265502e0f1166be2a641bd55cbea429ea774fd7345f562e2857c762ac609694bce00b7399bec4928afb63",
            "file": "src/app/shared/components/aside/aside.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-home",
            "styleUrls": [],
            "styles": [],
            "template": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { AsideComponent } from './aside.component';\nimport { MenuItemComponent } from '../menu-item/menu-item.component';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { NgClass, NgComponentOutlet } from '@angular/common';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/panel';\n  events = {\n    subscribe: () => {}\n  };\n}\n\n// Componentes de ícones mock para os exemplos\n@Component({\n  selector: 'app-icon-home',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>',\n  standalone: true\n})\nclass MockIconHomeComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-list',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line><line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line><line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line><line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line></svg>',\n  standalone: true\n})\nclass MockIconListComponent {}\n\n@Component({\n  selector: 'app-icon-card',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>',\n  standalone: true\n})\nclass MockIconCardComponent {}\n\n@Component({\n  selector: 'app-icon-settings',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle></svg>',\n  standalone: true\n})\nclass MockIconSettingsComponent {}\n\nconst meta: Meta<AsideComponent> = {\n  title: 'Componentes/Aside',\n  component: AsideComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]),\n        MenuItemComponent,\n        NgClass,\n        NgComponentOutlet,\n        MockIconHomeComponent,\n        MockIconDollarComponent,\n        MockIconListComponent,\n        MockIconCardComponent,\n        MockIconSettingsComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de barra lateral de navegação com menu de itens para as principais seções da aplicação.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<AsideComponent>;\n\nexport const Default: Story = {\n  args: {\n    currentRoute: '/panel'\n  },\n};\n\nexport const TransactionsActive: Story = {\n  args: {\n    currentRoute: '/transactions'\n  },\n};\n\nexport const CardsActive: Story = {\n  args: {\n    currentRoute: '/cards'\n  },\n};\n\nexport const ConfigurationsActive: Story = {\n  args: {\n    currentRoute: '/configurations'\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconInstagramComponent",
            "id": "component-MockIconInstagramComponent-9c4d50b08941ea4829b23b4d3bf4539daf2943a4c7f103487235857d5c889b2a00ba8f1a1e8c07ab19d00778433597e5f9b5d0010058c681017bfbcafad4d2ab",
            "file": "src/app/shared/components/footer/footer.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-instagram",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-4 h-4 bg-pink-500\">Instagram</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { FooterComponent } from './footer.component';\nimport { CommonModule } from '@angular/common';\nimport { TextComponent } from '../text/text.component';\nimport { ButtonComponent } from '../button/button.component';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/';\n  events = of({});\n  navigate() {}\n}\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-whatsapp',\n  template: '<div class=\"w-4 h-4 bg-green-500\">WhatsApp</div>',\n  standalone: true\n})\nclass MockIconWhatsappComponent {}\n\n@Component({\n  selector: 'app-icon-instagram',\n  template: '<div class=\"w-4 h-4 bg-pink-500\">Instagram</div>',\n  standalone: true\n})\nclass MockIconInstagramComponent {}\n\n@Component({\n  selector: 'app-icon-youtube',\n  template: '<div class=\"w-4 h-4 bg-red-500\">YouTube</div>',\n  standalone: true\n})\nclass MockIconYoutubeComponent {}\n\nconst meta: Meta<FooterComponent> = {\n  title: 'Componentes/Footer',\n  component: FooterComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        TextComponent,\n        ButtonComponent,\n        MockIconLogoComponent,\n        MockIconWhatsappComponent,\n        MockIconInstagramComponent,\n        MockIconYoutubeComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    company: {\n      control: 'text',\n      description: 'Nome da empresa',\n      table: {\n        defaultValue: { summary: 'ByteBank' },\n      },\n    },\n    version: {\n      control: 'text',\n      description: 'Versão da aplicação',\n      table: {\n        defaultValue: { summary: '1.0.0' },\n      },\n    },\n    year: {\n      control: 'number',\n      description: 'Ano atual para o copyright',\n      table: {\n        defaultValue: { summary: '2025' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de rodapé da aplicação, com diferentes layouts para usuários logados e não logados.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<FooterComponent>;\n\nexport const LoggedOut: Story = {\n  args: {\n    isLoggedIn: false,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n};\n\nexport const LoggedIn: Story = {\n  args: {\n    isLoggedIn: true,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconListComponent",
            "id": "component-MockIconListComponent-91bbc9abef01461860859982f431ace3e1935f2eeba265502e0f1166be2a641bd55cbea429ea774fd7345f562e2857c762ac609694bce00b7399bec4928afb63",
            "file": "src/app/shared/components/aside/aside.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-list",
            "styleUrls": [],
            "styles": [],
            "template": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line><line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line><line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line><line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { AsideComponent } from './aside.component';\nimport { MenuItemComponent } from '../menu-item/menu-item.component';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { NgClass, NgComponentOutlet } from '@angular/common';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/panel';\n  events = {\n    subscribe: () => {}\n  };\n}\n\n// Componentes de ícones mock para os exemplos\n@Component({\n  selector: 'app-icon-home',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>',\n  standalone: true\n})\nclass MockIconHomeComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-list',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line><line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line><line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line><line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line></svg>',\n  standalone: true\n})\nclass MockIconListComponent {}\n\n@Component({\n  selector: 'app-icon-card',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>',\n  standalone: true\n})\nclass MockIconCardComponent {}\n\n@Component({\n  selector: 'app-icon-settings',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle></svg>',\n  standalone: true\n})\nclass MockIconSettingsComponent {}\n\nconst meta: Meta<AsideComponent> = {\n  title: 'Componentes/Aside',\n  component: AsideComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]),\n        MenuItemComponent,\n        NgClass,\n        NgComponentOutlet,\n        MockIconHomeComponent,\n        MockIconDollarComponent,\n        MockIconListComponent,\n        MockIconCardComponent,\n        MockIconSettingsComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de barra lateral de navegação com menu de itens para as principais seções da aplicação.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<AsideComponent>;\n\nexport const Default: Story = {\n  args: {\n    currentRoute: '/panel'\n  },\n};\n\nexport const TransactionsActive: Story = {\n  args: {\n    currentRoute: '/transactions'\n  },\n};\n\nexport const CardsActive: Story = {\n  args: {\n    currentRoute: '/cards'\n  },\n};\n\nexport const ConfigurationsActive: Story = {\n  args: {\n    currentRoute: '/configurations'\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconLogoComponent",
            "id": "component-MockIconLogoComponent-9c4d50b08941ea4829b23b4d3bf4539daf2943a4c7f103487235857d5c889b2a00ba8f1a1e8c07ab19d00778433597e5f9b5d0010058c681017bfbcafad4d2ab",
            "file": "src/app/shared/components/footer/footer.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-logo",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-8 h-8 bg-blue-500\">Logo</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { FooterComponent } from './footer.component';\nimport { CommonModule } from '@angular/common';\nimport { TextComponent } from '../text/text.component';\nimport { ButtonComponent } from '../button/button.component';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/';\n  events = of({});\n  navigate() {}\n}\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-whatsapp',\n  template: '<div class=\"w-4 h-4 bg-green-500\">WhatsApp</div>',\n  standalone: true\n})\nclass MockIconWhatsappComponent {}\n\n@Component({\n  selector: 'app-icon-instagram',\n  template: '<div class=\"w-4 h-4 bg-pink-500\">Instagram</div>',\n  standalone: true\n})\nclass MockIconInstagramComponent {}\n\n@Component({\n  selector: 'app-icon-youtube',\n  template: '<div class=\"w-4 h-4 bg-red-500\">YouTube</div>',\n  standalone: true\n})\nclass MockIconYoutubeComponent {}\n\nconst meta: Meta<FooterComponent> = {\n  title: 'Componentes/Footer',\n  component: FooterComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        TextComponent,\n        ButtonComponent,\n        MockIconLogoComponent,\n        MockIconWhatsappComponent,\n        MockIconInstagramComponent,\n        MockIconYoutubeComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    company: {\n      control: 'text',\n      description: 'Nome da empresa',\n      table: {\n        defaultValue: { summary: 'ByteBank' },\n      },\n    },\n    version: {\n      control: 'text',\n      description: 'Versão da aplicação',\n      table: {\n        defaultValue: { summary: '1.0.0' },\n      },\n    },\n    year: {\n      control: 'number',\n      description: 'Ano atual para o copyright',\n      table: {\n        defaultValue: { summary: '2025' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de rodapé da aplicação, com diferentes layouts para usuários logados e não logados.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<FooterComponent>;\n\nexport const LoggedOut: Story = {\n  args: {\n    isLoggedIn: false,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n};\n\nexport const LoggedIn: Story = {\n  args: {\n    isLoggedIn: true,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconLogoComponent",
            "id": "component-MockIconLogoComponent-c16badd8263508c1cbc0db71dfe44d6787e6b800d3eadc331661087da90832cb823c5a00c7a4596f075bb984a804ab8271c2bc21b35ece1389d354ffd40663b2-1",
            "file": "src/app/shared/components/header/header.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-logo",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-8 h-8 bg-blue-500\">Logo</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { HeaderComponent } from './header.component';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonComponent } from '../button/button.component';\nimport { TextComponent } from '../text/text.component';\nimport { MenuComponent } from '../menu/menu.component';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { UserService } from '../../services/User/user-service';\n\n// Mock dos serviços necessários\nclass ThemeService {\n  toggleDarkMode() {}\n  isDarkMode = false;\n}\n\nclass RouterMock {\n  url = '/panel';\n  events = of({});\n  navigate() {}\n}\n\n// Componentes mock para ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-exit',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Exit</div>',\n  standalone: true\n})\nclass MockIconExitComponent {}\n\n@Component({\n  selector: 'app-icon-darkmode',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Dark</div>',\n  standalone: true\n})\nclass MockIconDarkmodeComponent {}\n\n@Component({\n  selector: 'app-icon-hamburger',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Menu</div>',\n  standalone: true\n})\nclass MockIconHamburgerComponent {}\n\n@Component({\n  selector: 'app-icon-bell',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Bell</div>',\n  standalone: true\n})\nclass MockIconBellComponent {}\n\n@Component({\n  selector: 'app-icon-account-circle',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Account</div>',\n  standalone: true\n})\nclass MockIconAccountCircleComponent {}\n\n@Component({\n  selector: 'app-icon-arrowdown',\n  template: '<div class=\"w-4 h-4 bg-gray-500\">Arrow</div>',\n  standalone: true\n})\nclass MockIconArrowdownComponent {}\n\nexport default {\n  title: 'Componentes/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        RouterModule.forChild([]),\n        ButtonComponent,\n        TextComponent,\n        MenuComponent,\n        MockIconLogoComponent,\n        MockIconExitComponent,\n        MockIconDarkmodeComponent,\n        MockIconHamburgerComponent,\n        MockIconBellComponent,\n        MockIconAccountCircleComponent,\n        MockIconArrowdownComponent\n      ],\n      providers: [\n        {\n          provide: ThemeService,\n          useValue: {\n            isDarkMode: () => false,\n            toggleDarkMode: () => {}\n          }\n        },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: UserService, useValue: {\n          getById: () => of({ name: 'Usuário Teste' })\n        }},\n        { provide: Router, useValue: new RouterMock() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de cabeçalho da aplicação, com diferentes estados para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      }\n    }\n  }\n} as Meta<HeaderComponent>;\n\ntype Story = StoryObj<HeaderComponent>;\n\n// Nota: Este componente é complexo e depende de muitos serviços e componentes.\n// Para o Storybook, seria melhor criar uma versão simplificada ou usar mocks mais elaborados.\n// As stories abaixo são exemplos, mas podem não funcionar corretamente no Storybook.\n\nexport const LoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInTablet: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n};\n\nexport const LoggedInMobile: Story = {\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n};\n\nexport const NotLoggedInDesktop: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n};\n\nexport const NotLoggedInMobile: Story = {\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "MockIconLogoComponent-1"
        },
        {
            "name": "MockIconSettingsComponent",
            "id": "component-MockIconSettingsComponent-91bbc9abef01461860859982f431ace3e1935f2eeba265502e0f1166be2a641bd55cbea429ea774fd7345f562e2857c762ac609694bce00b7399bec4928afb63",
            "file": "src/app/shared/components/aside/aside.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-settings",
            "styleUrls": [],
            "styles": [],
            "template": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle></svg>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { AsideComponent } from './aside.component';\nimport { MenuItemComponent } from '../menu-item/menu-item.component';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { NgClass, NgComponentOutlet } from '@angular/common';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/panel';\n  events = {\n    subscribe: () => {}\n  };\n}\n\n// Componentes de ícones mock para os exemplos\n@Component({\n  selector: 'app-icon-home',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>',\n  standalone: true\n})\nclass MockIconHomeComponent {}\n\n@Component({\n  selector: 'app-icon-dollar',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\"></line><path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"></path></svg>',\n  standalone: true\n})\nclass MockIconDollarComponent {}\n\n@Component({\n  selector: 'app-icon-list',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"8\" y1=\"6\" x2=\"21\" y2=\"6\"></line><line x1=\"8\" y1=\"12\" x2=\"21\" y2=\"12\"></line><line x1=\"8\" y1=\"18\" x2=\"21\" y2=\"18\"></line><line x1=\"3\" y1=\"6\" x2=\"3.01\" y2=\"6\"></line><line x1=\"3\" y1=\"12\" x2=\"3.01\" y2=\"12\"></line><line x1=\"3\" y1=\"18\" x2=\"3.01\" y2=\"18\"></line></svg>',\n  standalone: true\n})\nclass MockIconListComponent {}\n\n@Component({\n  selector: 'app-icon-card',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect width=\"20\" height=\"14\" x=\"2\" y=\"5\" rx=\"2\"></rect><line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\"></line></svg>',\n  standalone: true\n})\nclass MockIconCardComponent {}\n\n@Component({\n  selector: 'app-icon-settings',\n  template: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle></svg>',\n  standalone: true\n})\nclass MockIconSettingsComponent {}\n\nconst meta: Meta<AsideComponent> = {\n  title: 'Componentes/Aside',\n  component: AsideComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]),\n        MenuItemComponent,\n        NgClass,\n        NgComponentOutlet,\n        MockIconHomeComponent,\n        MockIconDollarComponent,\n        MockIconListComponent,\n        MockIconCardComponent,\n        MockIconSettingsComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de barra lateral de navegação com menu de itens para as principais seções da aplicação.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<AsideComponent>;\n\nexport const Default: Story = {\n  args: {\n    currentRoute: '/panel'\n  },\n};\n\nexport const TransactionsActive: Story = {\n  args: {\n    currentRoute: '/transactions'\n  },\n};\n\nexport const CardsActive: Story = {\n  args: {\n    currentRoute: '/cards'\n  },\n};\n\nexport const ConfigurationsActive: Story = {\n  args: {\n    currentRoute: '/configurations'\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconUnderConstructionComponent",
            "id": "component-MockIconUnderConstructionComponent-f3333ec0ef3954f144ac0f5f7bfa859a22b866f3e5f91726085d13d689f0b2bc6d9ef88eec26fd0875ff020049e8912d3c758fdcdf872adfa0e8ba877a549ca1",
            "file": "src/app/shared/components/under-construction/under-construction.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-under-construction",
            "styleUrls": [],
            "styles": [],
            "template": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"120\" height=\"120\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n  <rect x=\"2\" y=\"6\" width=\"20\" height=\"12\" rx=\"2\"></rect>\n  <path d=\"M12 12h.01\"></path>\n  <path d=\"M17 12h.01\"></path>\n  <path d=\"M7 12h.01\"></path>\n  <path d=\"M2 10h20\"></path>\n  <path d=\"M2 14h20\"></path>\n  <path d=\"M6 18v2\"></path>\n  <path d=\"M18 18v2\"></path>\n  <path d=\"M10 18v2\"></path>\n  <path d=\"M14 18v2\"></path>\n</svg>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { UnderConstructionComponent } from './under-construction.component';\nimport { TextComponent } from '../text/text.component';\nimport { Component } from '@angular/core';\n\n// Mock do ícone de construção\n@Component({\n  selector: 'app-icon-under-construction',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"120\" height=\"120\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <rect x=\"2\" y=\"6\" width=\"20\" height=\"12\" rx=\"2\"></rect>\n      <path d=\"M12 12h.01\"></path>\n      <path d=\"M17 12h.01\"></path>\n      <path d=\"M7 12h.01\"></path>\n      <path d=\"M2 10h20\"></path>\n      <path d=\"M2 14h20\"></path>\n      <path d=\"M6 18v2\"></path>\n      <path d=\"M18 18v2\"></path>\n      <path d=\"M10 18v2\"></path>\n      <path d=\"M14 18v2\"></path>\n    </svg>\n  `,\n  standalone: true\n})\nclass MockIconUnderConstructionComponent {}\n\nconst meta: Meta<UnderConstructionComponent> = {\n  title: 'Componentes/UnderConstruction',\n  component: UnderConstructionComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        TextComponent,\n        MockIconUnderConstructionComponent\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe uma mensagem de página em construção, utilizado para páginas que ainda estão sendo desenvolvidas.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<UnderConstructionComponent>;\n\nexport const Default: Story = {\n  args: {}\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconWhatsappComponent",
            "id": "component-MockIconWhatsappComponent-9c4d50b08941ea4829b23b4d3bf4539daf2943a4c7f103487235857d5c889b2a00ba8f1a1e8c07ab19d00778433597e5f9b5d0010058c681017bfbcafad4d2ab",
            "file": "src/app/shared/components/footer/footer.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-whatsapp",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-4 h-4 bg-green-500\">WhatsApp</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { FooterComponent } from './footer.component';\nimport { CommonModule } from '@angular/common';\nimport { TextComponent } from '../text/text.component';\nimport { ButtonComponent } from '../button/button.component';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/';\n  events = of({});\n  navigate() {}\n}\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-whatsapp',\n  template: '<div class=\"w-4 h-4 bg-green-500\">WhatsApp</div>',\n  standalone: true\n})\nclass MockIconWhatsappComponent {}\n\n@Component({\n  selector: 'app-icon-instagram',\n  template: '<div class=\"w-4 h-4 bg-pink-500\">Instagram</div>',\n  standalone: true\n})\nclass MockIconInstagramComponent {}\n\n@Component({\n  selector: 'app-icon-youtube',\n  template: '<div class=\"w-4 h-4 bg-red-500\">YouTube</div>',\n  standalone: true\n})\nclass MockIconYoutubeComponent {}\n\nconst meta: Meta<FooterComponent> = {\n  title: 'Componentes/Footer',\n  component: FooterComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        TextComponent,\n        ButtonComponent,\n        MockIconLogoComponent,\n        MockIconWhatsappComponent,\n        MockIconInstagramComponent,\n        MockIconYoutubeComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    company: {\n      control: 'text',\n      description: 'Nome da empresa',\n      table: {\n        defaultValue: { summary: 'ByteBank' },\n      },\n    },\n    version: {\n      control: 'text',\n      description: 'Versão da aplicação',\n      table: {\n        defaultValue: { summary: '1.0.0' },\n      },\n    },\n    year: {\n      control: 'number',\n      description: 'Ano atual para o copyright',\n      table: {\n        defaultValue: { summary: '2025' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de rodapé da aplicação, com diferentes layouts para usuários logados e não logados.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<FooterComponent>;\n\nexport const LoggedOut: Story = {\n  args: {\n    isLoggedIn: false,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n};\n\nexport const LoggedIn: Story = {\n  args: {\n    isLoggedIn: true,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockIconYoutubeComponent",
            "id": "component-MockIconYoutubeComponent-9c4d50b08941ea4829b23b4d3bf4539daf2943a4c7f103487235857d5c889b2a00ba8f1a1e8c07ab19d00778433597e5f9b5d0010058c681017bfbcafad4d2ab",
            "file": "src/app/shared/components/footer/footer.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-youtube",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-4 h-4 bg-red-500\">YouTube</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { FooterComponent } from './footer.component';\nimport { CommonModule } from '@angular/common';\nimport { TextComponent } from '../text/text.component';\nimport { ButtonComponent } from '../button/button.component';\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\n\n// Mock do Router\nclass Router {\n  url = '/';\n  events = of({});\n  navigate() {}\n}\n\n// Mock dos componentes de ícones\n@Component({\n  selector: 'app-icon-logo',\n  template: '<div class=\"w-8 h-8 bg-blue-500\">Logo</div>',\n  standalone: true\n})\nclass MockIconLogoComponent {}\n\n@Component({\n  selector: 'app-icon-whatsapp',\n  template: '<div class=\"w-4 h-4 bg-green-500\">WhatsApp</div>',\n  standalone: true\n})\nclass MockIconWhatsappComponent {}\n\n@Component({\n  selector: 'app-icon-instagram',\n  template: '<div class=\"w-4 h-4 bg-pink-500\">Instagram</div>',\n  standalone: true\n})\nclass MockIconInstagramComponent {}\n\n@Component({\n  selector: 'app-icon-youtube',\n  template: '<div class=\"w-4 h-4 bg-red-500\">YouTube</div>',\n  standalone: true\n})\nclass MockIconYoutubeComponent {}\n\nconst meta: Meta<FooterComponent> = {\n  title: 'Componentes/Footer',\n  component: FooterComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        TextComponent,\n        ButtonComponent,\n        MockIconLogoComponent,\n        MockIconWhatsappComponent,\n        MockIconInstagramComponent,\n        MockIconYoutubeComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    company: {\n      control: 'text',\n      description: 'Nome da empresa',\n      table: {\n        defaultValue: { summary: 'ByteBank' },\n      },\n    },\n    version: {\n      control: 'text',\n      description: 'Versão da aplicação',\n      table: {\n        defaultValue: { summary: '1.0.0' },\n      },\n    },\n    year: {\n      control: 'number',\n      description: 'Ano atual para o copyright',\n      table: {\n        defaultValue: { summary: '2025' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de rodapé da aplicação, com diferentes layouts para usuários logados e não logados.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<FooterComponent>;\n\nexport const LoggedOut: Story = {\n  args: {\n    isLoggedIn: false,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n};\n\nexport const LoggedIn: Story = {\n  args: {\n    isLoggedIn: true,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "MockTransactionChartComponent",
            "id": "component-MockTransactionChartComponent-e7516f3739a69d824d9402d8c97b61d310d443cef922aaa8f85214803c616703bab9424f5fff477de92513d6db03292246b423b2193ed3058fdf00fa2fbcc119",
            "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transaction-chart",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"transaction-chart-mock p-4 border rounded-lg\">\n  <h3 class=\"text-lg font-bold mb-4\">Gráfico de Transações (Mock)</h3>\n  <div class=\"flex justify-between mb-4\">\n    <div class=\"text-green-500\">\n      <p>Entradas</p>\n      <p class=\"font-bold\">{{ totalEntries }}</p>\n    </div>\n    <div class=\"text-red-500\">\n      <p>Saídas</p>\n      <p class=\"font-bold\">{{ totalExits }}</p>\n    </div>\n  </div>\n  <div class=\"grid grid-cols-4 gap-4\">\n    <div *ngFor=\"let data of transactionData\" class=\"text-center\">\n      <p>{{ data.day }}</p>\n      <div class=\"h-20 flex items-end justify-center space-x-2\">\n        <div class=\"bg-green-500 w-4\" [style.height.px]=\"data.entries / 10\"></div>\n        <div class=\"bg-red-500 w-4\" [style.height.px]=\"data.exits / 10\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "totalEntries",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "totalExits",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "transactionData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { DashboardComponent } from './dashboard.component';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { of } from 'rxjs';\nimport { TransactionService } from '../../services/Transaction/transaction-service';\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\nimport { UserService } from '../../services/User/user-service';\n\n// Mock do TransactionChartComponent\n@Component({\n  selector: 'app-transaction-chart',\n  template: `\n    <div class=\"transaction-chart-mock p-4 border rounded-lg\">\n      <h3 class=\"text-lg font-bold mb-4\">Gráfico de Transações (Mock)</h3>\n      <div class=\"flex justify-between mb-4\">\n        <div class=\"text-green-500\">\n          <p>Entradas</p>\n          <p class=\"font-bold\">{{ totalEntries }}</p>\n        </div>\n        <div class=\"text-red-500\">\n          <p>Saídas</p>\n          <p class=\"font-bold\">{{ totalExits }}</p>\n        </div>\n      </div>\n      <div class=\"grid grid-cols-4 gap-4\">\n        <div *ngFor=\"let data of transactionData\" class=\"text-center\">\n          <p>{{ data.day }}</p>\n          <div class=\"h-20 flex items-end justify-center space-x-2\">\n            <div class=\"bg-green-500 w-4\" [style.height.px]=\"data.entries / 10\"></div>\n            <div class=\"bg-red-500 w-4\" [style.height.px]=\"data.exits / 10\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  standalone: true,\n  imports: [CommonModule]\n})\nclass MockTransactionChartComponent {\n  @Input() transactionData: any[] = [];\n  @Input() totalEntries: string = '';\n  @Input() totalExits: string = '';\n}\n\n// Mock dos serviços\nconst mockTransactionService = {\n  getByUserId: () => of([\n    {\n      id: '1',\n      id_user: 'user123',\n      description: 'Salário',\n      amount: 5000,\n      date: '2025-06-01T10:00:00',\n      type: 'deposit'\n    },\n    {\n      id: '2',\n      id_user: 'user123',\n      description: 'Aluguel',\n      amount: 1500,\n      date: '2025-06-05T14:30:00',\n      type: 'withdrawal'\n    },\n    {\n      id: '3',\n      id_user: 'user123',\n      description: 'Supermercado',\n      amount: 500,\n      date: '2025-06-10T16:45:00',\n      type: 'withdrawal'\n    },\n    {\n      id: '4',\n      id_user: 'user123',\n      description: 'Freelance',\n      amount: 2000,\n      date: '2025-06-15T09:15:00',\n      type: 'deposit'\n    }\n  ])\n};\n\nconst mockUserService = {\n  getById: () => of({\n    id: 'user123',\n    name: 'João Silva',\n    email: 'joao@example.com'\n  })\n};\n\nconst mockTransactionEventService = {\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n};\n\nconst meta: Meta<DashboardComponent> = {\n  title: 'Componentes/Dashboard',\n  component: DashboardComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        MockTransactionChartComponent\n      ],\n      providers: [\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: UserService, useValue: mockUserService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    userName: {\n      control: 'text',\n      description: 'Nome do usuário',\n      table: {\n        defaultValue: { summary: 'João Silva' },\n      },\n    },\n    currentDate: {\n      control: 'text',\n      description: 'Data atual formatada',\n      table: {\n        defaultValue: { summary: 'Segunda-feira, 02/06/2025 21:52' },\n      },\n    },\n    balance: {\n      control: 'text',\n      description: 'Saldo da conta',\n      table: {\n        defaultValue: { summary: 'R$ 5.000,00' },\n      },\n    },\n    showBalance: {\n      control: 'boolean',\n      description: 'Mostrar ou ocultar o saldo',\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    isLoading: {\n      control: 'boolean',\n      description: 'Estado de carregamento',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    errorMessage: {\n      control: 'text',\n      description: 'Mensagem de erro',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de dashboard que exibe o saldo da conta, informações do usuário e um gráfico de transações do mês atual.'\n      },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<DashboardComponent>;\n\nexport const Default: Story = {\n  args: {\n    userName: 'João Silva',\n    currentDate: 'Segunda-feira, 02/06/2025 21:52',\n    currentMonthName: 'Junho',\n    balance: 'R$ 5.000,00',\n    accountType: 'Conta Corrente',\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00',\n    showBalance: true,\n    isLoading: false,\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    errorMessage: ''\n  },\n};\n\nexport const Loading: Story = {\n  args: {\n    isLoading: true\n  },\n};\n\nexport const WithError: Story = {\n  args: {\n    userName: 'João Silva',\n    currentDate: 'Segunda-feira, 02/06/2025 21:52',\n    currentMonthName: 'Junho',\n    balance: 'R$ 5.000,00',\n    accountType: 'Conta Corrente',\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00',\n    showBalance: true,\n    isLoading: false,\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    errorMessage: 'Erro ao carregar as transações. Tente novamente mais tarde.'\n  },\n};\n\nexport const HiddenBalance: Story = {\n  args: {\n    userName: 'João Silva',\n    currentDate: 'Segunda-feira, 02/06/2025 21:52',\n    currentMonthName: 'Junho',\n    balance: 'R$ 5.000,00',\n    accountType: 'Conta Corrente',\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00',\n    showBalance: false,\n    isLoading: false,\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    errorMessage: ''\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "NewTransactionComponent",
            "id": "component-NewTransactionComponent-f3e69a2321bf32f031127dbb4a8d19e40941939d1449dc10e3afe90b6c0f5110bfc713fd753c456b863e3bda1c8bb356134f2e509335ac021aa5d37dde4adf7e",
            "file": "src/app/shared/components/new-transaction/new-transaction.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-transaction",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./new-transaction.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fixedUserId",
                    "defaultValue": "systemConfig.userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "newTransaction",
                    "defaultValue": "{\r\n    type: TransactionType.Exchange,\r\n    amount: 0,\r\n    description: '',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<Transaction>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "selectedOption",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "submitStatus",
                    "defaultValue": "{\r\n    success: false,\r\n    message: ''\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "transactionOptions",
                    "defaultValue": "[\r\n    { display: 'Receita (Câmbio de Moeda)', value: TransactionType.Exchange },\r\n    { display: 'Despesa (DOC/TED)', value: TransactionType.Transfer },\r\n    { display: 'Empréstimo (Empréstimo e Financiamento)', value: TransactionType.Loan }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "valorTransacao",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "createTransaction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTransactionTypeLabel",
                    "args": [
                        {
                            "name": "type",
                            "type": "TransactionType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "TransactionType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onAmountChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDescriptionChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTransactionTypeChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "TransactionType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "TransactionType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ButtonComponent } from \"../button/button.component\";\r\nimport { TextComponent } from \"../text/text.component\";\r\nimport { InputComponent } from \"../input/input.component\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TransactionService } from '../../services/Transaction/transaction-service';\r\nimport {\r\n  Transaction,\r\n  TransactionType,\r\n  isCredit,\r\n  TRANSACTION_TYPE_LABELS,\r\n} from '../../models/transaction';\r\nimport { systemConfig } from '../../../app.config';\r\n\r\n@Component({\r\n  selector: 'app-new-transaction',\r\n  templateUrl: './new-transaction.component.html',\r\n  standalone: true,\r\n  imports: [ButtonComponent, TextComponent, InputComponent, CommonModule, FormsModule]\r\n})\r\nexport class NewTransactionComponent {\r\n  private readonly fixedUserId = systemConfig.userId;\r\n\r\n  transactionOptions = [\r\n    { display: 'Receita (Câmbio de Moeda)', value: TransactionType.Exchange },\r\n    { display: 'Despesa (DOC/TED)', value: TransactionType.Transfer },\r\n    { display: 'Empréstimo (Empréstimo e Financiamento)', value: TransactionType.Loan }\r\n  ];\r\n\r\n  newTransaction: Partial<Transaction> = {\r\n    type: TransactionType.Exchange,\r\n    amount: 0,\r\n    description: '',\r\n  };\r\n\r\n  valorTransacao: string = '';\r\n  selectedOption: string = '';\r\n\r\n  submitStatus: {\r\n    success: boolean;\r\n    message: string;\r\n  } = {\r\n    success: false,\r\n    message: ''\r\n  };\r\n\r\n  constructor(\r\n    private transactionService: TransactionService\r\n  ) {}\r\n\r\n  onTransactionTypeChange(value: TransactionType): void {\r\n    this.newTransaction.type = value;\r\n  }\r\n\r\n  onAmountChange(event: Event): void {\r\n    const input = event.target as HTMLInputElement;\r\n    let value = input.value.replace(/\\D/g, '');\r\n\r\n    value = value.substring(0, 12);\r\n\r\n    while (value.length < 3) {\r\n      value = '0' + value;\r\n    }\r\n\r\n    const cents = value.slice(-2);\r\n    let integer = value.slice(0, -2);\r\n    integer = integer.replace(/^0+/, '') || '0';\r\n\r\n    integer = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n\r\n    const formatted = `${integer},${cents}`;\r\n\r\n    this.valorTransacao = formatted;\r\n    this.newTransaction.amount = Number(integer.replace(/\\./g, '') + '.' + cents);\r\n  }\r\n\r\n  onDescriptionChange(event: Event): void {\r\n    const input = event.target as HTMLInputElement;\r\n    this.newTransaction.description = input.value;\r\n  }\r\n\r\n  getTransactionTypeLabel(type: TransactionType): string {\r\n    const labels = Object.entries(TRANSACTION_TYPE_LABELS)\r\n      .find(([label, value]) => value === type);\r\n\r\n    return labels ? labels[0] : type;\r\n  }\r\n\r\n  createTransaction(): void {\r\n    if (!this.newTransaction.type) {\r\n      this.submitStatus = {\r\n        success: false,\r\n        message: 'Por favor, selecione o tipo de transação.'\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (!this.newTransaction.amount || this.newTransaction.amount <= 0) {\r\n      this.submitStatus = {\r\n        success: false,\r\n        message: 'Por favor, informe um valor válido para a transação.'\r\n      };\r\n      return;\r\n    }\r\n\r\n    if (!this.newTransaction.description || this.newTransaction.description.trim() === '') {\r\n      this.submitStatus = {\r\n        success: false,\r\n        message: 'Por favor, adicione uma descrição para a transação.'\r\n      };\r\n      return;\r\n    }\r\n\r\n    this.submitStatus = {\r\n      success: true,\r\n      message: 'Processando transação...'\r\n    };\r\n\r\n    const transaction: Transaction = {\r\n      type: this.newTransaction.type,\r\n      description: this.newTransaction.description,\r\n      amount: this.newTransaction.amount,\r\n      date: new Date(),\r\n      id_user: this.fixedUserId\r\n    };\r\n\r\n    this.transactionService.create(transaction).subscribe({\r\n      next: (createdTransaction) => {\r\n        const transactionTypeLabel = this.getTransactionTypeLabel(transaction.type);\r\n\r\n        this.submitStatus = {\r\n          success: true,\r\n          message: `Transação de ${isCredit(transaction.type) ? 'crédito' : 'débito'} (${transactionTypeLabel}) criada com sucesso!`\r\n        };\r\n\r\n        this.resetForm();\r\n      },\r\n      error: (error) => {\r\n        console.error('Erro ao criar transação:', error);\r\n        this.submitStatus = {\r\n          success: false,\r\n          message: 'Erro ao criar transação: ' + (error.message || 'Tente novamente mais tarde')\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.newTransaction = {\r\n      type: TransactionType.Exchange,\r\n      amount: 0,\r\n      description: ''\r\n    };\r\n    this.valorTransacao = '';\r\n    this.selectedOption = '';\r\n\r\n    setTimeout(() => {\r\n      if (this.submitStatus.success) {\r\n        this.submitStatus.message = '';\r\n      }\r\n    }, 3000);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "transactionService",
                        "type": "TransactionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "transactionService",
                        "type": "TransactionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"rounded-xl shadow p-6 bg-white\">\r\n  <div class=\"pb-6\">\r\n    <div class=\"border-b-2\">\r\n      <app-text\r\n        variant=\"subtitle\"\r\n        as=\"h1\"\r\n        color=\"text-gray-900\"\r\n        class=\"mb-4 border-gray-200 block\"\r\n        >Nova Transação</app-text\r\n      >\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Container flex com layout responsivo -->\r\n  <div class=\"flex flex-col md:flex-row\">\r\n    <!-- Container de inputs: centralizado apenas em telas pequenas -->\r\n    <div\r\n      class=\"w-full md:w-1/2 md:pr-4 flex flex-col items-center md:items-start md:justify-start\"\r\n    >\r\n      <!-- Inputs e botão -->\r\n      <div class=\"w-full max-w-sm md:max-w-none\">\r\n        <!-- Input de tipo de transação -->\r\n        <div class=\"mb-4\">\r\n          <app-input\r\n            [options]=\"transactionOptions\"\r\n            placeholder=\"Selecione o tipo de transação\"\r\n            size=\"G\"\r\n            (selectionChange)=\"onTransactionTypeChange($event)\"\r\n          >\r\n          </app-input>\r\n        </div>\r\n\r\n        <!-- Input de valor -->\r\n        <div class=\"mb-4\">\r\n          <div class=\"relative inline-block w-full\">\r\n            <div\r\n              class=\"w-full bg-gray-100 border border-cyan-blue-500 dark:border-blue-violet-500  text-cyan-blue-500 dark:text-blue-violet-500 font-lato font-medium rounded-md p-4 flex items-center max-w-[360px]\"\r\n            >\r\n              <span class=\"text-cyan-blue-500  dark:text-blue-violet-500 mr-2\">R$</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"00,00\"\r\n                class=\"bg-transparent w-full outline-none text-cyan-blue-500 dark:text-blue-violet-500 placeholder-cyan-blue-500 dark:placeholder-blue-violet-500 placeholder-opacity-70\"\r\n                [(ngModel)]=\"valorTransacao\"\r\n                (input)=\"onAmountChange($event)\"\r\n                autocomplete=\"off\"\r\n                inputmode=\"numeric\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Input de descrição -->\r\n        <div class=\"mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Descrição da transação\"\r\n            class=\"w-full max-w-[360px] bg-gray-100 border border-cyan-blue-500 dark:border-blue-violet-500 text-cyan-blue-500 dark:text-blue-violet-500 font-lato font-medium rounded-md p-4\"\r\n            [(ngModel)]=\"newTransaction.description\"\r\n            (input)=\"onDescriptionChange($event)\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Status da submissão -->\r\n        <div\r\n          *ngIf=\"submitStatus.message\"\r\n          class=\"mb-4 p-3 rounded-md max-w-[360px]\"\r\n          [ngClass]=\"{\r\n            'bg-green-100 text-green-800': submitStatus.success,\r\n            'bg-red-100 text-red-800': !submitStatus.success\r\n          }\"\r\n        >\r\n          {{ submitStatus.message }}\r\n        </div>\r\n\r\n        <!-- Botão de submissão -->\r\n        <app-button\r\n          theme=\"primary\"\r\n          size=\"GG\"\r\n          label=\"Concluir Transação\"\r\n          class=\"w-full max-w-full sm:max-w-[360px]\"\r\n          (click)=\"createTransaction()\"\r\n        >\r\n        </app-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Imagem alinhada ao primeiro input e centralizada -->\r\n    <div class=\"w-full md:w-1/2 pl-4 mt-[20px] flex justify-center\">\r\n      <img\r\n        src=\"assets/icons/vector.svg\"\r\n        alt=\"Ilustração de Transação\"\r\n        class=\"max-w-full h-auto\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PainelComponent",
            "id": "component-PainelComponent-966c83206920fc5d9ef573109e349fe43d98b5cb4fa5edb562dde4002bec4e257f9618724b6e7d836f90aaf338ca3b157d813aa5f50f6cafe246c360e8af2e67",
            "file": "src/app/pages/panel/panel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-panel",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./panel.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'tech-challenge'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "LayoutComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardComponent",
                    "type": "component"
                },
                {
                    "name": "StatementComponent",
                    "type": "component"
                },
                {
                    "name": "NewTransactionComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { LayoutComponent } from '../../shared/components/layout/layout.component';\r\nimport { DashboardComponent } from '../../shared/components/dashboard/dashboard.component';\r\nimport { StatementComponent } from '../../shared/components/statement/statement.component';\r\nimport { NewTransactionComponent } from '../../shared/components/new-transaction/new-transaction.component';\r\n\r\n@Component({\r\n  selector: 'app-panel',\r\n  standalone: true,\r\n  imports: [\r\n    LayoutComponent,\r\n    DashboardComponent,\r\n    StatementComponent,\r\n    NewTransactionComponent,\r\n],\r\n  templateUrl: './panel.component.html',\r\n  styleUrl: './panel.component.scss',\r\n})\r\nexport class PainelComponent {\r\n  title: string = 'tech-challenge';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "styleUrl": "./panel.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "extends": [],
            "templateData": "<app-layout>\r\n  <section class=\"h-full w-full bg-gray-100 flex flex-col mt-0 sm:mt-[52px] xl:mt-0 overflow-x-hidden\">\r\n    <div class=\"bg-gray-200 dark:bg-blue-violet-50 flex flex-grow\">\r\n      <div class=\"flex w-full flex-col gap-6 p-2 xs:p-3 sm:p-4 md:p-5 lg:p-6\">\r\n        <div class=\"flex flex-col 2md:flex-row gap-6\">\r\n          <div class=\"mx-auto bg-white rounded-xl shadow-md overflow-visible w-full xl:max-w-2/3\">\r\n            <app-dashboard></app-dashboard>\r\n          </div>\r\n\r\n          <div class=\"order-3 2md:order-none 2md:w-1/3\">\r\n            <div class=\"mx-auto overflow-hidden rounded-xl shadow-md\">\r\n              <app-statement\r\n                [showDetails]=\"false\"\r\n                [showAllTransactions]=\"false\"\r\n                [customTitle]=\"'Transações'\"\r\n                [showLastTransactionsSubtitle]=\"true\"\r\n                [swapColumns]=\"false\"\r\n              >\r\n              </app-statement>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n          <!-- Nova Transação (abaixo, ocupando largura total) -->\r\n          <div class=\"order-2 2md:order-none w-full\">\r\n            <app-new-transaction></app-new-transaction>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  </section>\r\n</app-layout>\r\n"
        },
        {
            "name": "StatementComponent",
            "id": "component-StatementComponent-299c1d8aace1f0139243c8d80c9dc3ec3836227574cf5eb8e22d273a318784eda66f52b1e6ab9dcd7b3beeab1a85599d670225a4fd5d2717bd577a4ca40f8c2d",
            "file": "src/app/shared/components/statement/statement.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-statement",
            "styleUrls": [
                "./statement.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./statement.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "customTitle",
                    "defaultValue": "'Transações'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showAllTransactions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showDetails",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showLastTransactionsSubtitle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "swapColumns",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "alertMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isEditModalOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "isModalOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "showAlert",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "transactionLabels",
                    "defaultValue": "TRANSACTION_TYPE_LABELS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "transactions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "transactionToDelete",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "transactionToEdit",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteTransaction",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editTransaction",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTransactionTypeLabel",
                    "args": [
                        {
                            "name": "type",
                            "type": "TransactionType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "TransactionType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isDeposit",
                    "args": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isWithdraw",
                    "args": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadUserTransactions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancelDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancelEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onConfirmDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSaveEdit",
                    "args": [
                        {
                            "name": "updatedTransaction",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "updatedTransaction",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openDeleteModal",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openEditModal",
                    "args": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                },
                {
                    "name": "IconArrowPencilComponent",
                    "type": "component"
                },
                {
                    "name": "IconBinComponent",
                    "type": "component"
                },
                {
                    "name": "IconDollarComponent",
                    "type": "component"
                },
                {
                    "name": "IconArrowDownLeftComponent",
                    "type": "component"
                },
                {
                    "name": "IconArrowRightComponent",
                    "type": "component"
                },
                {
                    "name": "DeleteModalComponent",
                    "type": "component"
                },
                {
                    "name": "EditModalComponent",
                    "type": "component"
                },
                {
                    "name": "BrlPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TextComponent } from '../text/text.component';\r\nimport { IconArrowPencilComponent } from '../../assets/icons/icon-arrow-pencil.component';\r\nimport { IconBinComponent } from '../../assets/icons/icon-bin.component';\r\nimport { IconDollarComponent } from '../../assets/icons/icon-dollar.component';\r\nimport { IconArrowDownLeftComponent } from '../../assets/icons/icon-arrow-down-left.component';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { DeleteModalComponent } from '../modal/delete-modal.component';\r\nimport { EditModalComponent } from '../modal/edit-modal.component';\r\n\r\nimport {\r\n  Transaction,\r\n  TransactionType,\r\n  isCredit,\r\n  isDebit,\r\n  TRANSACTION_TYPE_LABELS,\r\n} from '../../models/transaction';\r\nimport { TransactionService } from '../../services/Transaction/transaction-service';\r\nimport { systemConfig } from '../../../app.config';\r\nimport { TransactionEventService } from '../../services/TransactionEvent/transaction-event.service';\r\nimport { IconArrowRightComponent } from '../../assets/icons/icon-arrow-right.component';\r\nimport { BrlPipe } from '../../pipes/brl.pipe';\r\n\r\n@Component({\r\n  selector: 'app-statement',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    TextComponent,\r\n    IconArrowPencilComponent,\r\n    IconBinComponent,\r\n    IconDollarComponent,\r\n    IconArrowDownLeftComponent,\r\n    IconArrowRightComponent,\r\n    DeleteModalComponent,\r\n    EditModalComponent,\r\n    BrlPipe\r\n  ],\r\n  templateUrl: './statement.component.html',\r\n  styleUrls: ['./statement.component.scss'],\r\n})\r\nexport class StatementComponent implements OnInit, OnDestroy {\r\n  @Input() showDetails = true;\r\n  @Input() showAllTransactions = false;\r\n  @Input() customTitle = 'Transações';\r\n  @Input() showLastTransactionsSubtitle = false;\r\n  @Input() swapColumns = false;\r\n  transactions: Transaction[] = [];\r\n  transactionLabels = TRANSACTION_TYPE_LABELS;\r\n  isLoading = false;\r\n  private destroy$ = new Subject<void>();\r\n  isModalOpen = false;\r\n  transactionToDelete: string | null = null;\r\n  showAlert = false;\r\n  alertMessage = '';\r\n  isEditModalOpen = false;\r\n  transactionToEdit: Transaction | null = null;\r\n\r\n  get recentTransactions(): Transaction[] {\r\n    const sortedTransactions = this.transactions\r\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n\r\n    return this.showAllTransactions ? sortedTransactions : sortedTransactions.slice(0, 6);\r\n  }\r\n\r\n  constructor(\r\n    private transactionService: TransactionService,\r\n    private transactionEventService: TransactionEventService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadUserTransactions();\r\n\r\n    this.transactionEventService.transactionCreated$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((transaction) => {\r\n        if (transaction.id_user === systemConfig.userId) {\r\n          this.transactions = [transaction, ...this.transactions];\r\n        }\r\n      });\r\n\r\n    this.transactionEventService.transactionUpdated$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((transaction) => {\r\n        if (transaction.id_user === systemConfig.userId) {\r\n          this.transactions = this.transactions.map((t) =>\r\n            t.id === transaction.id ? transaction : t\r\n          );\r\n        }\r\n      });\r\n\r\n    this.transactionEventService.transactionDeleted$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((transactionId) => {\r\n        this.transactions = this.transactions.filter(\r\n          (t) => t.id !== transactionId\r\n        );\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  loadUserTransactions(): void {\r\n    const userId = systemConfig.userId;\r\n    this.isLoading = true;\r\n\r\n    this.transactionService.getByUserId(userId).subscribe({\r\n      next: (transactions) => {\r\n        this.transactions = transactions.filter((t) => t.id);\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Error fetching user transactions:', error);\r\n      },\r\n    });\r\n  }\r\n\r\n  isDeposit(transaction: Transaction): boolean {\r\n    return isCredit(transaction.type);\r\n  }\r\n\r\n  isWithdraw(transaction: Transaction): boolean {\r\n    return isDebit(transaction.type);\r\n  }\r\n\r\n  formatDate(date: Date | string): string {\r\n    const dateObj = date instanceof Date ? date : new Date(date);\r\n    return dateObj.toLocaleDateString();\r\n  }\r\n\r\n  getTransactionTypeLabel(type: TransactionType): string {\r\n    const entry = Object.entries(TRANSACTION_TYPE_LABELS).find(\r\n      ([_, value]) => value === type\r\n    );\r\n\r\n    return entry ? entry[0] : type;\r\n  }\r\n\r\n  openDeleteModal(id: string): void {\r\n    this.transactionToDelete = id;\r\n    this.isModalOpen = true;\r\n  }\r\n\r\n  onConfirmDelete(): void {\r\n    if (this.transactionToDelete) {\r\n      this.deleteTransaction(this.transactionToDelete);\r\n      this.isModalOpen = false;\r\n      this.transactionToDelete = null;\r\n      this.showAlert = true;\r\n      this.alertMessage = 'Transação deletada com sucesso!';\r\n      setTimeout(() => {\r\n        this.showAlert = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  onCancelDelete(): void {\r\n    this.isModalOpen = false;\r\n    this.transactionToDelete = null;\r\n  }\r\n\r\n  deleteTransaction(id: string): void {\r\n    if (!id) return;\r\n\r\n    this.transactionService.delete(id).subscribe({\r\n      next: () => {\r\n        // The transaction will be removed via the subscription to transactionDeleted$\r\n        console.log('Transaction deleted', id);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error deleting transaction:', error);\r\n      },\r\n    });\r\n  }\r\n\r\n  openEditModal(transaction: Transaction): void {\r\n    this.transactionToEdit = transaction;\r\n    this.isEditModalOpen = true;\r\n  }\r\n\r\n  onSaveEdit(updatedTransaction: { id: string; amount: number; description: string }): void {\r\n    if (this.transactionToEdit) {\r\n      const updated = { ...this.transactionToEdit, ...updatedTransaction };\r\n      this.transactionService.update(updated.id, updated).subscribe({\r\n        next: () => {\r\n          this.isEditModalOpen = false;\r\n          this.transactionToEdit = null;\r\n          this.showAlert = true;\r\n          this.alertMessage = 'Transação atualizada com sucesso!';\r\n          setTimeout(() => {\r\n            this.showAlert = false;\r\n          }, 2000);\r\n        },\r\n        error: (error) => {\r\n          console.error('Error updating transaction:', error);\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancelEdit(): void {\r\n    this.isEditModalOpen = false;\r\n    this.transactionToEdit = null;\r\n  }\r\n\r\n  editTransaction(id: string): void {\r\n    const transaction = this.transactions.find(t => t.id === id);\r\n    if (transaction) {\r\n      this.openEditModal(transaction);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./statement.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "transactionService",
                        "type": "TransactionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "transactionEventService",
                        "type": "TransactionEventService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 66,
                "jsdoctags": [
                    {
                        "name": "transactionService",
                        "type": "TransactionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "transactionEventService",
                        "type": "TransactionEventService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "recentTransactions": {
                    "name": "recentTransactions",
                    "getSignature": {
                        "name": "recentTransactions",
                        "type": "[]",
                        "returnType": "Transaction[]",
                        "line": 61
                    }
                }
            },
            "templateData": "<div\r\n  *ngIf=\"showAlert\"\r\n  class=\"fixed top-0 left-0 right-0 bg-white text-cyan-blue-500 p-4 text-center z-50\"\r\n>\r\n  {{ alertMessage }}\r\n</div>\r\n\r\n<div class=\"rounded-xl shadow p-4 sm:p-6 bg-white\">\r\n  <div class=\"flex items-end flex-wrap\">\r\n    <app-text\r\n      variant=\"subtitle\"\r\n      as=\"h2\"\r\n      color=\"text-gray-900\"\r\n      class=\"text-base sm:text-lg\"\r\n    >\r\n      {{ customTitle }}\r\n    </app-text>\r\n\r\n    <app-text\r\n      variant=\"text-small\"\r\n      color=\"text-gray-400\"\r\n      *ngIf=\"showLastTransactionsSubtitle\"\r\n      class=\"pl-2 sm:pl-3 text-xs\"\r\n    >\r\n      {{ \"(últimas 6 transações)\" }}\r\n    </app-text>\r\n  </div>\r\n\r\n  <div *ngIf=\"isLoading\" class=\"text-center py-4\">\r\n    <app-text color=\"text-gray-600\">Carregando transações...</app-text>\r\n  </div>\r\n\r\n  <div\r\n    [ngClass]=\"{\r\n      'max-h-[400px] overflow-y-auto mt-2 sm:mt-3': showAllTransactions\r\n    }\"\r\n  >\r\n    <div class=\"overflow-x-auto\">\r\n      <table\r\n        *ngIf=\"!isLoading && recentTransactions.length > 0\"\r\n        class=\"w-full text-xs sm:text-sm border-t-2 mt-2 sm:mt-3 pt-2 sm:pt-3\"\r\n      >\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let transaction of recentTransactions\"\r\n            class=\"border-b-2 last:border-none\"\r\n          >\r\n            <ng-container *ngIf=\"!swapColumns\">\r\n              <td class=\"py-2 sm:py-4 pr-1 sm:pr-2\">\r\n                <ng-container\r\n                  [ngSwitch]=\"isDeposit(transaction) ? 'deposit' : 'withdraw'\"\r\n                >\r\n                  <app-icon-dollar\r\n                    *ngSwitchCase=\"'deposit'\"\r\n                    class=\"w-3 h-3 sm:w-4 sm:h-4\"\r\n                    [ngClass]=\"'text-green-600'\"\r\n                  ></app-icon-dollar>\r\n\r\n                  <app-icon-arrow-down-left\r\n                    *ngSwitchCase=\"'withdraw'\"\r\n                    class=\"w-3 h-3 sm:w-4 sm:h-4\"\r\n                    [ngClass]=\"'text-red-600'\"\r\n                  ></app-icon-arrow-down-left>\r\n                </ng-container>\r\n              </td>\r\n\r\n              <td class=\"py-2 sm:py-4 pr-1 sm:pr-2\">\r\n                <app-text\r\n                  [color]=\"\r\n                    isDeposit(transaction) ? 'text-green-600' : 'text-red-600'\r\n                  \"\r\n                  class=\"text-xs sm:text-sm whitespace-nowrap\"\r\n                >\r\n                  <span class=\"sm:hidden\">\r\n                    {{ isDeposit(transaction) ? \"Depósito\" : \"Saque\" }}\r\n                  </span>\r\n                  <span class=\"hidden sm:inline\">\r\n                    {{ getTransactionTypeLabel(transaction.type) }}\r\n                  </span>\r\n                </app-text>\r\n              </td>\r\n\r\n              <td\r\n                class=\"py-2 sm:py-4 pr-1 sm:pr-2 hidden sm:table-cell\"\r\n                *ngIf=\"showDetails\"\r\n              >\r\n                <app-text\r\n                  [color]=\"\r\n                    isDeposit(transaction) ? 'text-green-600' : 'text-red-600'\r\n                  \"\r\n                  class=\"text-xs sm:text-sm\"\r\n                >\r\n                  {{ transaction.description }}\r\n                </app-text>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"swapColumns\">\r\n              <td class=\"py-2 sm:py-4 pr-1 sm:pr-2\">\r\n                <ng-container\r\n                  [ngSwitch]=\"isDeposit(transaction) ? 'deposit' : 'withdraw'\"\r\n                >\r\n                  <app-icon-dollar\r\n                    *ngSwitchCase=\"'deposit'\"\r\n                    class=\"w-3 h-3 sm:w-4 sm:h-4\"\r\n                    [ngClass]=\"'text-green-600'\"\r\n                  ></app-icon-dollar>\r\n\r\n                  <app-icon-arrow-down-left\r\n                    *ngSwitchCase=\"'withdraw'\"\r\n                    class=\"w-3 h-3 sm:w-4 sm:h-4\"\r\n                    [ngClass]=\"'text-red-600'\"\r\n                  ></app-icon-arrow-down-left>\r\n                </ng-container>\r\n              </td>\r\n\r\n              <td class=\"py-2 sm:py-4 pr-1 sm:pr-2\">\r\n                <app-text\r\n                  [color]=\"\r\n                    isDeposit(transaction) ? 'text-green-600' : 'text-red-600'\r\n                  \"\r\n                  class=\"text-xs sm:text-sm whitespace-nowrap\"\r\n                >\r\n                  <span class=\"sm:hidden\">\r\n                    {{ isDeposit(transaction) ? \"Depósito\" : \"Saque\" }}\r\n                  </span>\r\n                  <span class=\"hidden sm:inline\">\r\n                    {{ getTransactionTypeLabel(transaction.type) }}\r\n                  </span>\r\n                </app-text>\r\n              </td>\r\n\r\n              <td\r\n                class=\"py-2 sm:py-4 pr-1 sm:pr-2 hidden sm:table-cell\"\r\n                *ngIf=\"showDetails\"\r\n              >\r\n                <app-text\r\n                  [color]=\"\r\n                    isDeposit(transaction) ? 'text-green-600' : 'text-red-600'\r\n                  \"\r\n                  class=\"text-xs sm:text-sm\"\r\n                >\r\n                  {{ transaction.description }}\r\n                </app-text>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <td class=\"py-2 sm:py-4 pr-1 sm:pr-2\">\r\n              <app-text\r\n                [color]=\"\r\n                  isDeposit(transaction) ? 'text-green-600' : 'text-red-600'\r\n                \"\r\n                class=\"text-xs sm:text-sm whitespace-nowrap\"\r\n              >\r\n                {{ transaction.amount | brl }}\r\n              </app-text>\r\n            </td>\r\n\r\n            <td class=\"py-2 sm:py-4 pr-1 sm:pr-2 hidden xs:table-cell\">\r\n              <app-text\r\n                [color]=\"\r\n                  isDeposit(transaction) ? 'text-green-600' : 'text-red-600'\r\n                \"\r\n                class=\"text-xs sm:text-sm whitespace-nowrap\"\r\n              >\r\n                {{ formatDate(transaction.date) }}\r\n              </app-text>\r\n            </td>\r\n\r\n            <td class=\"py-2 sm:py-4 text-center pl-1\">\r\n              <button (click)=\"editTransaction(transaction.id!)\">\r\n                <app-icon-arrow-pencil\r\n                  [ngClass]=\"\r\n                    isDeposit(transaction) ? 'text-green-600' : 'text-red-600'\r\n                  \"\r\n                  class=\"w-3 h-3 sm:w-4 sm:h-4\"\r\n                ></app-icon-arrow-pencil>\r\n              </button>\r\n            </td>\r\n            <td class=\"py-2 sm:py-4 text-center pl-1\">\r\n              <button (click)=\"openDeleteModal(transaction.id!)\">\r\n                <app-icon-bin\r\n                  [ngClass]=\"\r\n                    isDeposit(transaction) ? 'text-green-600' : 'text-red-600'\r\n                  \"\r\n                  class=\"w-3 h-3 sm:w-4 sm:h-4\"\r\n                ></app-icon-bin>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"!isLoading && recentTransactions.length === 0\"\r\n    class=\"text-center py-4\"\r\n  >\r\n    <app-text color=\"text-gray-600\">Nenhuma transação encontrada</app-text>\r\n  </div>\r\n\r\n  <div\r\n    class=\"flex justify-end mt-4\"\r\n    *ngIf=\"!showDetails && !showAllTransactions\"\r\n  >\r\n    <a\r\n      href=\"/transactions\"\r\n      class=\"inline-flex items-center gap-2 text-cyan-blue-500 hover:underline text-sm\"\r\n    >\r\n      Listar\r\n      <app-icon-arrow-right class=\"w-3 h-3 sm:w-4 sm:h-4\" />\r\n    </a>\r\n  </div>\r\n</div>\r\n\r\n<app-delete-modal\r\n  [isOpen]=\"isModalOpen\"\r\n  (confirm)=\"onConfirmDelete()\"\r\n  (cancel)=\"onCancelDelete()\"\r\n></app-delete-modal>\r\n\r\n<app-edit-modal\r\n  [isOpen]=\"isEditModalOpen\"\r\n  [transaction]=\"transactionToEdit\"\r\n  (save)=\"onSaveEdit($event)\"\r\n  (cancel)=\"onCancelEdit()\"\r\n></app-edit-modal>\r\n"
        },
        {
            "name": "TextComponent",
            "id": "component-TextComponent-5ec80c9e540536b7003fd835e0d5da7489e2eaca3db76db0c514a0454590a058e1263ddfc8ae684f87f6efa6a87a68f013c3ea78d6f7be5e9ed9a4e85c2f8f1f",
            "file": "src/app/shared/components/text/text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'text-white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tag",
                    "defaultValue": "'p'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"p\" | \"h1\" | \"h2\" | \"span\"",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'text-regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"title-bold\" | \"title-regular\" | \"subtitle\" | \"text-regular\" | \"text-regular-special\" | \"text-small\" | \"text-small-bold\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-text',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './text.component.html',\r\n})\r\nexport class TextComponent {\r\n  @Input() variant:\r\n    | 'title-bold'\r\n    | 'title-regular'\r\n    | 'subtitle'\r\n    | 'text-regular'\r\n    | 'text-regular-special'\r\n    | 'text-small'\r\n    | 'text-small-bold' = 'text-regular';\r\n\r\n  @Input() color: string = 'text-white';\r\n\r\n  @Input() tag: 'p' | 'h1' | 'h2' | 'span' = 'p'; // unificado\r\n\r\n  get classes(): string {\r\n    const base = 'font-lato leading-[20px]';\r\n\r\n    const variants: Record<string, string> = {\r\n      'title-bold': 'text-[32px] font-bold leading-[40px]',\r\n      'title-regular': 'text-[24px] font-normal',\r\n      'subtitle': 'text-[20px] font-semibold',\r\n      'text-regular': 'text-[16px] font-bold',\r\n      'text-regular-special': 'text-[16px] font-normal',\r\n      'text-small': 'text-[14px] font-normal',\r\n      'text-small-bold': 'text-[14px] font-bold',\r\n    };\r\n\r\n    return `${base} ${variants[this.variant]} ${this.color}`;\r\n  }\r\n}\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 24
                    }
                }
            },
            "templateData": "<ng-container [ngSwitch]=\"tag\">\r\n  <h1 *ngSwitchCase=\"'h1'\" [ngClass]=\"classes\"><ng-content></ng-content></h1>\r\n  <h2 *ngSwitchCase=\"'h2'\" [ngClass]=\"classes\"><ng-content></ng-content></h2>\r\n  <span *ngSwitchCase=\"'span'\" [ngClass]=\"classes\"><ng-content></ng-content></span>\r\n  <p *ngSwitchDefault [ngClass]=\"classes\"><ng-content></ng-content></p>\r\n</ng-container>\r\n"
        },
        {
            "name": "TransactionChartComponent",
            "id": "component-TransactionChartComponent-82fe43e4d6b864675aaa8c1a45c082994bc85787463304ca72efd1c6b80a721d72e5f31111dd728feaaa8f460b5f917a645266801a242c7b44b2db6bb7c655ef",
            "file": "src/app/shared/components/transaction-chart/transaction-chart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transaction-chart",
            "styleUrls": [
                "./transaction-chart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transaction-chart.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "totalEntries",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "totalExits",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "transactionData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "TransactionData[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'chartContainer'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "chartHeight",
                    "defaultValue": "192",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "yAxisLabels",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateBarHeight",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatAxisLabel",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatBalance",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMaxTransactionValue",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getMaxValue",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateChart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateYAxisLabels",
                    "args": [
                        {
                            "name": "maxValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "maxValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TransactionData } from '../../models/transaction-data';\r\n\r\n@Component({\r\n  selector: 'app-transaction-chart',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './transaction-chart.component.html',\r\n  styleUrls: ['./transaction-chart.component.scss']\r\n})\r\nexport class TransactionChartComponent implements OnInit {\r\n  @Input() transactionData: TransactionData[] = [];\r\n  @Input() totalEntries: string = '';\r\n  @Input() totalExits: string = '';\r\n\r\n  @ViewChild('chartContainer') chartContainer: ElementRef | undefined;\r\n  chartHeight: number = 192;\r\n  yAxisLabels: number[] = [];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.updateChart();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.updateChart();\r\n  }\r\n\r\n  updateChart(): void {\r\n    const maxValue = this.getMaxTransactionValue();\r\n    this.updateYAxisLabels(maxValue);\r\n  }\r\n\r\n  getMaxTransactionValue(): number {\r\n    let maxValue = 500;\r\n    for (const data of this.transactionData) {\r\n      if (data.entries > maxValue) maxValue = data.entries;\r\n      if (data.exits > maxValue) maxValue = data.exits;\r\n    }\r\n    maxValue = maxValue * 1.1;\r\n    return Math.ceil(maxValue / 750) * 750;\r\n  }\r\n\r\n  updateYAxisLabels(maxValue: number): void {\r\n    const roundedMax = Math.ceil(maxValue / 750) * 750;\r\n\r\n    this.yAxisLabels = [];\r\n    const step = roundedMax / 4;\r\n    for (let i = 4; i >= 0; i--) {\r\n      this.yAxisLabels.push(i * step);\r\n    }\r\n  }\r\n\r\n  getMaxValue(): number {\r\n    return this.yAxisLabels[0];\r\n  }\r\n\r\n  calculateBarHeight(value: number): number {\r\n    const maxYAxisValue = this.yAxisLabels[0];\r\n    if (maxYAxisValue === 0) return 0;\r\n    const proportion = value / maxYAxisValue;\r\n    const height = proportion * this.chartHeight;\r\n    return height;\r\n  }\r\n\r\n  formatAxisLabel(value: number): string {\r\n    return value.toLocaleString('pt-BR', {\r\n      style: 'decimal',\r\n      maximumFractionDigits: 0\r\n    });\r\n  }\r\n\r\n  formatBalance(value: number): string {\r\n    return value.toLocaleString('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL',\r\n    });\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./transaction-chart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-col lg:flex-row gap-8\">\r\n  <div class=\"relative h-48 mx-auto w-full sm:w-4/5 lg:w-4/5\" #chartContainer>\r\n    <div class=\"relative h-full\">\r\n      <div\r\n        class=\"absolute left-0 h-full flex flex-col justify-between pointer-events-none\"\r\n      >\r\n        <ng-container *ngFor=\"let label of yAxisLabels\">\r\n          <span class=\"text-right text-xs text-gray-500 pr-1 w-10\">{{\r\n            formatAxisLabel(label)\r\n          }}</span>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <div class=\"absolute inset-0 ml-10 border border-gray-200\">\r\n        <div class=\"absolute w-full h-1/4 border-b border-gray-200\"></div>\r\n        <div class=\"absolute w-full h-2/4 border-b border-gray-200\"></div>\r\n        <div class=\"absolute w-full h-3/4 border-b border-gray-200\"></div>\r\n\r\n        <div class=\"absolute h-full w-1/4 border-r border-gray-200\"></div>\r\n        <div class=\"absolute h-full w-1/2 border-r border-gray-200\"></div>\r\n        <div class=\"absolute h-full w-3/4 border-r border-gray-200\"></div>\r\n      </div>\r\n\r\n      <div class=\"absolute inset-0 ml-10 flex justify-around items-end\">\r\n        <ng-container *ngFor=\"let data of transactionData; let i = index\">\r\n          <div\r\n            class=\"flex items-end justify-center w-1/4 h-full\"\r\n            *ngIf=\"data.day !== ''\"\r\n          >\r\n            <div class=\"flex items-end space-x-1 sm:space-x-2 mb-0\">\r\n              <div\r\n                class=\"w-3 sm:w-5 md:w-7\"\r\n                [style.height.px]=\"calculateBarHeight(data.exits)\"\r\n                [ngClass]=\"'bg-orange-500 dark:bg-yellow-500'\"\r\n                [title]=\"'Saídas: ' + formatBalance(data.exits)\"\r\n              ></div>\r\n              <div\r\n                class=\"w-3 sm:w-5 md:w-7\"\r\n                [style.height.px]=\"calculateBarHeight(data.entries)\"\r\n                [ngClass]=\"'bg-cyan-blue-500 dark:bg-blue-violet-500'\"\r\n                [title]=\"'Entradas: ' + formatBalance(data.entries)\"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <div\r\n        class=\"absolute w-full -bottom-6 ml-10 pr-8 grid grid-cols-4 text-center\"\r\n      >\r\n        <ng-container *ngFor=\"let data of transactionData\">\r\n          <span class=\"text-gray-600 text-xs\" *ngIf=\"data.day !== ''\">{{\r\n            data.day\r\n          }}</span>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Legenda -->\r\n  <div class=\"flex flex-col sm:hidden justify-center gap-2 items-center mt-8\">\r\n    <!-- Entradas -->\r\n    <div class=\"flex items-center space-x-3\">\r\n      <div class=\"w-4 h-4 rounded-full bg-cyan-blue-500 dark:bg-blue-violet-500\"></div>\r\n      <div class=\"flex flex-col\">\r\n        <span class=\"text-xs\">Entradas</span>\r\n        <span class=\"text-sm font-bold\">{{ totalEntries }}</span>\r\n      </div>\r\n    </div>\r\n    <!-- Saídas -->\r\n    <div class=\"flex items-center space-x-3\">\r\n      <div class=\"w-4 h-4 rounded-full bg-orange-500 dark:bg-yellow-500\"></div>\r\n      <div class=\"flex flex-col\">\r\n        <span class=\"text-xs\">Saídas</span>\r\n        <span class=\"text-sm font-bold\">{{ totalExits }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Legenda para telas maiores -->\r\n  <div\r\n    class=\"hidden sm:flex sm:flex-row lg:flex-col gap-4 sm:justify-center sm:items-center\"\r\n  >\r\n    <!-- Entradas -->\r\n    <div class=\"flex items-center space-x-3\">\r\n      <div class=\"w-4 h-4 rounded-full bg-cyan-blue-500 dark:bg-blue-violet-500\"></div>\r\n      <div class=\"flex flex-col\">\r\n        <span class=\"text-xs\">Entradas</span>\r\n        <span class=\"text-sm font-bold\">{{ totalEntries }}</span>\r\n      </div>\r\n    </div>\r\n    <!-- Saídas -->\r\n    <div class=\"flex items-center space-x-3\">\r\n      <div class=\"w-4 h-4 rounded-full bg-orange-500 dark:bg-yellow-500\"></div>\r\n      <div class=\"flex flex-col\">\r\n        <span class=\"text-xs\">Saídas</span>\r\n        <span class=\"text-sm font-bold\">{{ totalExits }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "TransactionFormComponent",
            "id": "component-TransactionFormComponent-a62c2649d6a53ba16bf4e3fe49e1de17939e38919afd0c16a8a87a28fb962d8ee09d2f1cbeabdf11f711374ce509eeeab784739b11c3e11beb31c435aa9922d1",
            "file": "src/app/shared/components/transaction-form/transaction-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transaction-form",
            "styleUrls": [
                "./transaction-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./transaction-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "this.createEmptyForm()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionForm",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "transactionOptions",
                    "defaultValue": "Object.keys(TRANSACTION_TYPE_LABELS)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "createEmptyForm",
                    "args": [],
                    "optional": false,
                    "returnType": "TransactionForm",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                },
                {
                    "name": "InputComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ButtonComponent } from '../button/button.component';\r\nimport { TextComponent } from '../text/text.component';\r\nimport { InputComponent } from '../input/input.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TransactionService } from '../../services/Transaction/transaction-service';\r\nimport {\r\n  Transaction,\r\n  TransactionType,\r\n  TRANSACTION_TYPE_LABELS,\r\n} from '../../models/transaction';\r\nimport { systemConfig } from '../../../app.config';\r\n\r\nexport interface TransactionForm {\r\n  type: string;\r\n  amount: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-transaction-form',\r\n  templateUrl: './transaction-form.component.html',\r\n  styleUrls: ['./transaction-form.component.scss'],\r\n  imports: [\r\n    ButtonComponent,\r\n    TextComponent,\r\n    InputComponent,\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class TransactionFormComponent implements OnInit {\r\n  transactionOptions = Object.keys(TRANSACTION_TYPE_LABELS);\r\n  form: TransactionForm = this.createEmptyForm();\r\n\r\n  private createEmptyForm(): TransactionForm {\r\n    return {\r\n      type: this.transactionOptions[0],\r\n      amount: '00,00',\r\n    };\r\n  }\r\n\r\n  constructor(private transactionService: TransactionService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  submitForm() {\r\n    const type = TRANSACTION_TYPE_LABELS[this.form.type] as TransactionType;\r\n    const amount = Number((this.form.amount as string).replace(',', '.'));\r\n\r\n    const transaction: Transaction = {\r\n      type,\r\n      amount,\r\n      date: new Date(),\r\n      description: this.form.type,\r\n      id_user: systemConfig.userId,\r\n    } as Transaction;\r\n\r\n    this.transactionService.create(transaction).subscribe(\r\n      () => {\r\n        this.resetForm();\r\n      },\r\n      (error) => {\r\n        console.error('Error creating transaction:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  resetForm() {\r\n    this.form = this.createEmptyForm();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./transaction-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "transactionService",
                        "type": "TransactionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "transactionService",
                        "type": "TransactionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- transaction-form.component.html -->\r\n<div class=\"rounded-xl shadow p-6 bg-white pb-[80px]\">\r\n  <!-- Título e borda (sem interferência do layout flex) -->\r\n  <div class=\"pb-4\">\r\n    <div class=\"border-b-2\">\r\n      <app-text variant=\"title-bold\" as=\"h1\" class=\"mb-4 border-gray-200 block\">\r\n        Nova Transação\r\n      </app-text>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Container flex com layout responsivo -->\r\n  <div class=\"flex flex-col md:flex-row\">\r\n    <!-- Container de inputs: centralizado apenas em telas pequenas -->\r\n    <div\r\n      class=\"w-full md:w-1/2 md:pr-4 flex flex-col items-center md:items-start md:justify-start\"\r\n    >\r\n      <!-- Inputs e botão -->\r\n      <form\r\n        class=\"w-full max-w-sm md:max-w-none mt-8\"\r\n        (ngSubmit)=\"submitForm()\"\r\n        #transactionForm=\"ngForm\"\r\n      >\r\n        <div class=\"mb-4\">\r\n          <app-input\r\n            class=\"w-full\"\r\n            [(ngModel)]=\"form.type\"\r\n            name=\"type\"\r\n            required\r\n            [options]=\"transactionOptions\"\r\n            placeholder=\"Selecione o tipo de transação\"\r\n            size=\"G\"\r\n          >\r\n          </app-input>\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n          <div class=\"relative inline-block w-full\">\r\n            <div\r\n              class=\"w-full bg-gray-100 border border-cyan-blue-500 text-cyan-blue-500 font-lato font-medium rounded-md p-4 flex items-center\"\r\n              [ngClass]=\"{\r\n                'max-w-[360px]': true\r\n              }\"\r\n            >\r\n              <span class=\"text-cyan-blue-500 mr-2\">R$</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"00,00\"\r\n                class=\"bg-transparent w-full outline-none text-cyan-blue-500 placeholder-cyan-blue-500 placeholder-opacity-70\"\r\n                [(ngModel)]=\"form.amount\"\r\n                name=\"amount\"\r\n                autocomplete=\"off\"\r\n                inputmode=\"numeric\"\r\n                (click)=\"form.amount = ''\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <app-button\r\n          theme=\"primary\"\r\n          size=\"GG\"\r\n          label=\"Concluir Transação\"\r\n          class=\"w-full\"\r\n          type=\"submit\"\r\n        ></app-button>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Imagem alinhada ao primeiro input e centralizada -->\r\n    <div class=\"w-full md:w-1/2 pl-4 mt-[20px] flex justify-center\">\r\n      <img\r\n        src=\"assets/icons/vector.svg\"\r\n        alt=\"Ilustração de Transação\"\r\n        class=\"max-w-full h-auto\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TransactionsComponent",
            "id": "component-TransactionsComponent-3ba46dba45ed2cbac00264a14fd0c8ed2d9a32eb4d582d64d3554cd43dd389836cada4342c3912e6a536a5d41815ffd5d8086a441019cc9874867293f100a4fa",
            "file": "src/app/pages/transactions/transactions.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-transactions",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./transactions.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "LayoutComponent",
                    "type": "component"
                },
                {
                    "name": "StatementComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { LayoutComponent } from '../../shared/components/layout/layout.component';\r\nimport { StatementComponent } from '../../shared/components/statement/statement.component';\r\n\r\n@Component({\r\n  selector: 'app-transactions',\r\n  standalone: true,\r\n  imports: [LayoutComponent, StatementComponent],\r\n  templateUrl: './transactions.component.html',\r\n  styleUrl: './transactions.component.scss',\r\n})\r\nexport class TransactionsComponent {}\r\n",
            "styleUrl": "./transactions.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-layout>\r\n  <section class=\"w-full  flex flex-col mt-0 sm:mt-[52px] xl:mt-0\">\r\n    <div class=\"flex h-screen flex-col gap-6 p-6\">\r\n      <app-statement \r\n        [showDetails]=\"true\"\r\n\r\n        [showAllTransactions]=\"true\"\r\n        [customTitle]=\"'Transações'\"\r\n        [swapColumns]=\"true\">\r\n      </app-statement>\r\n    </div>\r\n  </section>\r\n</app-layout>\r\n"
        },
        {
            "name": "UnderConstructionComponent",
            "id": "component-UnderConstructionComponent-751d3616f0646b126a7625e6bc8f4d4472e1541b0b42dad2354ed85eb8391871f007b93ccb0035f2372578756bbda0d59da095af5d3652c9cbcc5b57d7c37aa6",
            "file": "src/app/shared/components/under-construction/under-construction.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-under-construction",
            "styleUrls": [
                "./under-construction.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./under-construction.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "IconUnderConstructionComponent",
                    "type": "component"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { TextComponent } from '../text/text.component';\r\nimport { IconUnderConstructionComponent } from '../../assets/icons/icon-under-construction.component';\r\n\r\n@Component({\r\n  selector: 'app-under-construction',\r\n  templateUrl: './under-construction.component.html',\r\n  imports: [IconUnderConstructionComponent, TextComponent],\r\n  styleUrls: ['./under-construction.component.scss'],\r\n})\r\nexport class UnderConstructionComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./under-construction.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex flex-col items-center justify-center gap-4\">\r\n  <app-icon-under-construction class=\"opacity-70 text-cyan-blue-500\" alt=\"Em construção\" />\r\n  <app-text variant=\"title-bold\" as=\"h1\" color=\"text-regular\">\r\n    Em construção\r\n  </app-text>\r\n  <app-text variant=\"text-regular-special\" color=\"text-gray-500\" class=\"text-center\">\r\n    Esta página está em desenvolvimento. Volte em breve!\r\n  </app-text>\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AllTransactions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/statement/statement.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    showDetails: true,\n    showAllTransactions: true,\n    customTitle: 'Histórico Completo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n}"
            },
            {
                "name": "apiConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  baseUrl: 'http://localhost:8080',\r\n  usersEndpoint: '/users',\r\n  transactionsEndpoint: '/transactions',\r\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes),\r\n    provideHttpClient(),\r\n  ],\r\n}"
            },
            {
                "name": "Cards",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Meus Cartões',\n    route: '/cards',\n    active: false,\n    iconComponent: IconCardComponent\n  },\n}"
            },
            {
                "name": "CardsActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/aside/aside.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    currentRoute: '/cards'\n  },\n}"
            },
            {
                "name": "CompactView",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/statement/statement.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    showDetails: false,\n    showAllTransactions: false,\n    customTitle: 'Resumo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n}"
            },
            {
                "name": "ConfigurationsActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/aside/aside.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    currentRoute: '/configurations'\n  },\n}"
            },
            {
                "name": "CREDIT_TYPES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/models/transaction.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TransactionType[]",
                "defaultValue": "[\r\n  TransactionType.Exchange,\r\n  TransactionType.Loan,\r\n]"
            },
            {
                "name": "CustomMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modal/delete-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isOpen: true,\n    message: 'Tem certeza que deseja excluir este item permanentemente?',\n  },\n}"
            },
            {
                "name": "DEBIT_TYPES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/models/transaction.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TransactionType[]",
                "defaultValue": "[TransactionType.Transfer]"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/aside/aside.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    currentRoute: '/panel'\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    userName: 'João Silva',\n    currentDate: 'Segunda-feira, 02/06/2025 21:52',\n    currentMonthName: 'Junho',\n    balance: 'R$ 5.000,00',\n    accountType: 'Conta Corrente',\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00',\n    showBalance: true,\n    isLoading: false,\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    errorMessage: ''\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/grafic/grafic.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Seg', entries: 5000, exits: 1500 },\n      { day: 'Ter', entries: 3000, exits: 2500 },\n      { day: 'Qua', entries: 7000, exits: 1000 },\n      { day: 'Qui', entries: 2000, exits: 3000 },\n      { day: 'Sex', entries: 4000, exits: 2000 }\n    ],\n    maxChartValue: 10000,\n    barMaxHeight: 170\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: ['Opção 1', 'Opção 2', 'Opção 3'],\n    size: 'G',\n    placeholder: 'Selecione uma opção',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modal/delete-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isOpen: true,\n    message: 'Deseja realmente deletar essa transação?',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isOpen: true,\n    transaction: sampleTransaction,\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    valorTransacao: '',\n    selectedOption: '',\n    submitStatus: {\n      success: false,\n      message: ''\n    }\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"rounded-xl shadow p-6 bg-white\">\n        <div class=\"pb-6\">\n          <div class=\"border-b-2\">\n            <app-text\n              variant=\"subtitle\"\n              as=\"h1\"\n              color=\"text-gray-900\"\n              class=\"mb-4 border-gray-200 block\"\n              >Nova Transação</app-text\n            >\n          </div>\n        </div>\n      \n        <div class=\"flex flex-col md:flex-row\">\n          <div\n            class=\"w-full flex flex-col items-center md:items-start md:justify-start\"\n          >\n            <div class=\"w-full max-w-sm md:max-w-none\">\n              <div class=\"mb-4\">\n                <app-input\n                  [options]=\"transactionOptions\"\n                  placeholder=\"Selecione o tipo de transação\"\n                  size=\"G\"\n                  (selectionChange)=\"onTransactionTypeChange($event)\"\n                >\n                </app-input>\n              </div>\n      \n              <div class=\"mb-4\">\n                <div class=\"relative inline-block w-full\">\n                  <div\n                    class=\"w-full bg-gray-100 border border-cyan-blue-500 dark:border-blue-violet-500  text-cyan-blue-500 dark:text-blue-violet-500 font-lato font-medium rounded-md p-4 flex items-center max-w-[360px]\"\n                  >\n                    <span class=\"text-cyan-blue-500  dark:text-blue-violet-500 mr-2\">R$</span>\n                    <input\n                      type=\"text\"\n                      placeholder=\"00,00\"\n                      class=\"bg-transparent w-full outline-none text-cyan-blue-500 dark:text-blue-violet-500 placeholder-cyan-blue-500 dark:placeholder-blue-violet-500 placeholder-opacity-70\"\n                      [(ngModel)]=\"valorTransacao\"\n                      (input)=\"onAmountChange($event)\"\n                      autocomplete=\"off\"\n                      inputmode=\"numeric\"\n                    />\n                  </div>\n                </div>\n              </div>\n      \n              <div class=\"mb-4\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Descrição da transação\"\n                  class=\"w-full max-w-[360px] bg-gray-100 border border-cyan-blue-500 dark:border-blue-violet-500 text-cyan-blue-500 dark:text-blue-violet-500 font-lato font-medium rounded-md p-4\"\n                  [(ngModel)]=\"newTransaction.description\"\n                  (input)=\"onDescriptionChange($event)\"\n                />\n              </div>\n      \n              <div\n                *ngIf=\"submitStatus.message\"\n                class=\"mb-4 p-3 rounded-md max-w-[360px]\"\n                [ngClass]=\"{\n                  'bg-green-100 text-green-800': submitStatus.success,\n                  'bg-red-100 text-red-800': !submitStatus.success\n                }\"\n              >\n                {{ submitStatus.message }}\n              </div>\n      \n              <app-button\n                theme=\"primary\"\n                size=\"GG\"\n                label=\"Concluir Transação\"\n                class=\"w-full max-w-full sm:max-w-[360px]\"\n                (click)=\"createTransaction()\"\n              >\n              </app-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/statement/statement.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: false\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00'\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    form: {\n      type: 'Câmbio de Moeda',\n      amount: '00,00'\n    }\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"rounded-xl shadow p-6 bg-white pb-[80px]\">\n        <div class=\"pb-4\">\n          <div class=\"border-b-2\">\n            <app-text variant=\"title-bold\" as=\"h1\" class=\"mb-4 border-gray-200 block\">\n              Nova Transação\n            </app-text>\n          </div>\n        </div>\n\n        <div class=\"flex flex-col md:flex-row\">\n          <div class=\"w-full flex flex-col items-center md:items-start md:justify-start\">\n            <form\n              class=\"w-full max-w-sm md:max-w-none mt-8\"\n              (ngSubmit)=\"submitForm()\"\n              #transactionForm=\"ngForm\"\n            >\n              <div class=\"mb-4\">\n                <app-input\n                  class=\"w-full\"\n                  [(ngModel)]=\"form.type\"\n                  name=\"type\"\n                  required\n                  [options]=\"transactionOptions\"\n                  placeholder=\"Selecione o tipo de transação\"\n                  size=\"G\"\n                >\n                </app-input>\n              </div>\n\n              <div class=\"mb-4\">\n                <div class=\"relative inline-block w-full\">\n                  <div\n                    class=\"w-full bg-gray-100 border border-cyan-blue-500 text-cyan-blue-500 font-lato font-medium rounded-md p-4 flex items-center\"\n                    [ngClass]=\"{\n                      'max-w-[360px]': true\n                    }\"\n                  >\n                    <span class=\"text-cyan-blue-500 mr-2\">R$</span>\n                    <input\n                      type=\"text\"\n                      placeholder=\"00,00\"\n                      class=\"bg-transparent w-full outline-none text-cyan-blue-500 placeholder-cyan-blue-500 placeholder-opacity-70\"\n                      [(ngModel)]=\"form.amount\"\n                      name=\"amount\"\n                      autocomplete=\"off\"\n                      inputmode=\"numeric\"\n                      (click)=\"form.amount = ''\"\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <app-button\n                theme=\"primary\"\n                size=\"GG\"\n                label=\"Concluir Transação\"\n                class=\"w-full\"\n                type=\"submit\"\n              ></app-button>\n            </form>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/under-construction/under-construction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {}\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    theme: 'primary',\n    size: 'G',\n    label: 'Botão Desabilitado',\n    disabled: true,\n  },\n}"
            },
            {
                "name": "EmptyDescription",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isOpen: true,\n    transaction: {\n      ...sampleTransaction,\n      description: ''\n    },\n  },\n}"
            },
            {
                "name": "ErrorState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    valorTransacao: '1.000,00',\n    selectedOption: 'Receita (Câmbio de Moeda)',\n    submitStatus: {\n      success: false,\n      message: 'Erro ao criar transação: Tente novamente mais tarde'\n    }\n  },\n}"
            },
            {
                "name": "ExtraLarge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    theme: 'primary',\n    size: 'GG',\n    label: 'Botão Extra Grande',\n    disabled: false,\n  },\n}"
            },
            {
                "name": "GhostCyanBlue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    theme: 'ghost-cyan-blue',\n    size: 'G',\n    label: 'Botão Ghost Cyan',\n    disabled: false,\n  },\n}"
            },
            {
                "name": "GhostWhite",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    theme: 'ghost-white',\n    size: 'G',\n    label: 'Botão Ghost White',\n    disabled: false,\n  },\n}"
            },
            {
                "name": "Hidden",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: {\n    docs: {\n      disable: true,\n    },\n  },\n}"
            },
            {
                "name": "HiddenBalance",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    userName: 'João Silva',\n    currentDate: 'Segunda-feira, 02/06/2025 21:52',\n    currentMonthName: 'Junho',\n    balance: 'R$ 5.000,00',\n    accountType: 'Conta Corrente',\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00',\n    showBalance: false,\n    isLoading: false,\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    errorMessage: ''\n  },\n}"
            },
            {
                "name": "HighValues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/grafic/grafic.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Seg', entries: 15000, exits: 8000 },\n      { day: 'Ter', entries: 12000, exits: 10000 },\n      { day: 'Qua', entries: 18000, exits: 5000 },\n      { day: 'Qui', entries: 9000, exits: 12000 },\n      { day: 'Sex', entries: 14000, exits: 7000 }\n    ],\n    maxChartValue: 20000,\n    barMaxHeight: 170\n  },\n}"
            },
            {
                "name": "HighValues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Semana 1', entries: 12000, exits: 3000 },\n      { day: 'Semana 2', entries: 5000, exits: 8000 },\n      { day: 'Semana 3', entries: 7500, exits: 4500 },\n      { day: 'Semana 4', entries: 10000, exits: 6000 }\n    ],\n    totalEntries: 'R$ 34.500,00',\n    totalExits: 'R$ 21.500,00'\n  },\n}"
            },
            {
                "name": "Home",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Início',\n    route: '/panel',\n    active: false,\n    iconComponent: IconHomeComponent\n  },\n}"
            },
            {
                "name": "HomeActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Início',\n    route: '/panel',\n    active: true,\n    iconComponent: IconHomeComponent\n  },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    theme: 'primary',\n    size: 'G',\n    label: 'Botão Grande',\n    disabled: false,\n  },\n}"
            },
            {
                "name": "LargeAmount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isOpen: true,\n    transaction: {\n      ...sampleTransaction,\n      amount: 9999999.99,\n      description: 'Transação de alto valor'\n    },\n  },\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoading: true\n  },\n}"
            },
            {
                "name": "LoanType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    form: {\n      type: 'Empréstimo e Financiamento',\n      amount: '5.000,00'\n    }\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n}"
            },
            {
                "name": "LoggedInDesktop",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n}"
            },
            {
                "name": "LoggedInMobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n}"
            },
            {
                "name": "LoggedInMobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    menuOpen: true,\n  },\n}"
            },
            {
                "name": "LoggedInTablet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n}"
            },
            {
                "name": "LoggedInTablet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    menuOpen: false,\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoggedIn: false,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n}"
            },
            {
                "name": "LoggedOutMobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false,\n    menuOpen: true,\n  },\n}"
            },
            {
                "name": "LowValues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/grafic/grafic.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Seg', entries: 500, exits: 300 },\n      { day: 'Ter', entries: 400, exits: 250 },\n      { day: 'Qua', entries: 700, exits: 100 },\n      { day: 'Qui', entries: 200, exits: 350 },\n      { day: 'Sex', entries: 450, exits: 200 }\n    ],\n    maxChartValue: 1000,\n    barMaxHeight: 170\n  },\n}"
            },
            {
                "name": "LowValues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Semana 1', entries: 100, exits: 50 },\n      { day: 'Semana 2', entries: 75, exits: 125 },\n      { day: 'Semana 3', entries: 200, exits: 150 },\n      { day: 'Semana 4', entries: 150, exits: 100 }\n    ],\n    totalEntries: 'R$ 525,00',\n    totalExits: 'R$ 425,00'\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/aside/aside.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AsideComponent>",
                "defaultValue": "{\n  title: 'Componentes/Aside',\n  component: AsideComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]),\n        MenuItemComponent,\n        NgClass,\n        NgComponentOutlet,\n        MockIconHomeComponent,\n        MockIconDollarComponent,\n        MockIconListComponent,\n        MockIconCardComponent,\n        MockIconSettingsComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de barra lateral de navegação com menu de itens para as principais seções da aplicação.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Componentes/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n    }),\n  ],\n  argTypes: {\n    theme: {\n      control: 'select',\n      options: ['primary', 'secondary', 'outline-cyan-blue', 'ghost-cyan-blue', 'ghost-white'],\n      description: 'Tema do botão que define suas cores e estilos',\n      table: {\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    size: {\n      control: 'select',\n      options: ['P', 'G', 'GG'],\n      description: 'Tamanho do botão',\n      table: {\n        defaultValue: { summary: 'G' },\n      },\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Define se o botão está desabilitado',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    label: {\n      control: 'text',\n      description: 'Texto do botão',\n      table: {\n        defaultValue: { summary: 'Button' },\n      },\n    },\n    iconPosition: {\n      control: 'select',\n      options: ['left', 'right'],\n      description: 'Posição do ícone em relação ao texto',\n      table: {\n        defaultValue: { summary: 'left' },\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DashboardComponent>",
                "defaultValue": "{\n  title: 'Componentes/Dashboard',\n  component: DashboardComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        MockTransactionChartComponent\n      ],\n      providers: [\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: UserService, useValue: mockUserService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    userName: {\n      control: 'text',\n      description: 'Nome do usuário',\n      table: {\n        defaultValue: { summary: 'João Silva' },\n      },\n    },\n    currentDate: {\n      control: 'text',\n      description: 'Data atual formatada',\n      table: {\n        defaultValue: { summary: 'Segunda-feira, 02/06/2025 21:52' },\n      },\n    },\n    balance: {\n      control: 'text',\n      description: 'Saldo da conta',\n      table: {\n        defaultValue: { summary: 'R$ 5.000,00' },\n      },\n    },\n    showBalance: {\n      control: 'boolean',\n      description: 'Mostrar ou ocultar o saldo',\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    isLoading: {\n      control: 'boolean',\n      description: 'Estado de carregamento',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    errorMessage: {\n      control: 'text',\n      description: 'Mensagem de erro',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de dashboard que exibe o saldo da conta, informações do usuário e um gráfico de transações do mês atual.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FooterComponent>",
                "defaultValue": "{\n  title: 'Componentes/Footer',\n  component: FooterComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        TextComponent,\n        ButtonComponent,\n        MockIconLogoComponent,\n        MockIconWhatsappComponent,\n        MockIconInstagramComponent,\n        MockIconYoutubeComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    company: {\n      control: 'text',\n      description: 'Nome da empresa',\n      table: {\n        defaultValue: { summary: 'ByteBank' },\n      },\n    },\n    version: {\n      control: 'text',\n      description: 'Versão da aplicação',\n      table: {\n        defaultValue: { summary: '1.0.0' },\n      },\n    },\n    year: {\n      control: 'number',\n      description: 'Ano atual para o copyright',\n      table: {\n        defaultValue: { summary: '2025' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de rodapé da aplicação, com diferentes layouts para usuários logados e não logados.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/grafic/grafic.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<GraficComponent>",
                "defaultValue": "{\n  title: 'Componentes/Grafic',\n  component: GraficComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule]\n    })\n  ],\n  argTypes: {\n    transactionData: {\n      control: 'object',\n      description: 'Dados de transações para exibição no gráfico',\n    },\n    maxChartValue: {\n      control: 'number',\n      description: 'Valor máximo para o eixo Y do gráfico',\n    },\n    barMaxHeight: {\n      control: 'number',\n      description: 'Altura máxima das barras em pixels',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de gráfico simplificado que exibe transações com barras para entradas e saídas.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\n  title: 'Componentes/Input',\n  component: InputComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n    }),\n  ],\n  argTypes: {\n    options: {\n      control: 'object',\n      description: 'Lista de opções disponíveis no dropdown',\n    },\n    size: {\n      control: 'select',\n      options: ['G', 'P'],\n      description: 'Tamanho do input',\n      table: {\n        defaultValue: { summary: 'G' },\n      },\n    },\n    placeholder: {\n      control: 'text',\n      description: 'Texto exibido quando nenhuma opção está selecionada',\n      table: {\n        defaultValue: { summary: 'Selecione o tipo de transação' },\n      },\n    },\n    selectionChange: {\n      action: 'selectionChanged',\n      description: 'Evento emitido quando uma opção é selecionada',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LayoutComponent>",
                "defaultValue": "{\n  title: 'Componentes/Layout',\n  component: LayoutComponent,\n  // Configuração para ocultar o componente no Storybook\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': { hidden: true },\n    },\n    viewMode: 'story',\n    docsOnly: true,\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenuComponent>",
                "defaultValue": "{\n  title: 'Componentes/Menu',\n  component: MenuComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        ButtonComponent,\n        MockIconExitComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() },\n        { provide: ThemeService, useValue: new ThemeService() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    mobile: {\n      control: 'boolean',\n      description: 'Define se está em modo mobile',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    tablet: {\n      control: 'boolean',\n      description: 'Define se está em modo tablet',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    menuOpen: {\n      control: 'boolean',\n      description: 'Define se o menu está aberto',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    closeMenu: {\n      action: 'closeMenu',\n      description: 'Evento emitido quando o menu é fechado',\n    },\n    menuRefReady: {\n      action: 'menuRefReady',\n      description: 'Evento emitido quando a referência do menu está pronta',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de menu da aplicação, com diferentes layouts para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MenuItemComponent>",
                "defaultValue": "{\n  title: 'Componentes/MenuItem',\n  component: MenuItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]), \n        NgClass, \n        NgComponentOutlet,\n        IconHomeComponent, \n        IconTransactionComponent, \n        IconCardComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'Texto do item de menu',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n    route: {\n      control: 'text',\n      description: 'Rota para navegação',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n    active: {\n      control: 'boolean',\n      description: 'Define se o item está ativo',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    iconComponent: {\n      control: { type: 'select', options: ['IconHomeComponent', 'IconTransactionComponent', 'IconCardComponent'] },\n      description: 'Componente de ícone a ser exibido',\n      mapping: {\n        IconHomeComponent: IconHomeComponent,\n        IconTransactionComponent: IconTransactionComponent,\n        IconCardComponent: IconCardComponent\n      }\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de item de menu utilizado na navegação lateral da aplicação.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modal/delete-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DeleteModalComponent>",
                "defaultValue": "{\n  title: 'Componentes/Modal/DeleteModal',\n  component: DeleteModalComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, ButtonComponent],\n    }),\n  ],\n  argTypes: {\n    isOpen: {\n      control: 'boolean',\n      description: 'Define se o modal está aberto ou fechado',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    message: {\n      control: 'text',\n      description: 'Mensagem exibida no modal de confirmação',\n      table: {\n        defaultValue: { summary: 'Deseja realmente deletar essa transação?' },\n      },\n    },\n    confirm: {\n      action: 'confirm',\n      description: 'Evento emitido quando o usuário confirma a ação',\n    },\n    cancel: {\n      action: 'cancel',\n      description: 'Evento emitido quando o usuário cancela a ação',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Modal de confirmação para exclusão de itens, com opções para confirmar ou cancelar a ação.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<EditModalComponent>",
                "defaultValue": "{\n  title: 'Componentes/Modal/EditModal',\n  component: EditModalComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, ButtonComponent, FormsModule],\n    }),\n  ],\n  argTypes: {\n    isOpen: {\n      control: 'boolean',\n      description: 'Define se o modal está aberto ou fechado',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    transaction: {\n      control: 'object',\n      description: 'Objeto de transação a ser editado',\n    },\n    save: {\n      action: 'save',\n      description: 'Evento emitido quando o usuário salva as alterações',\n    },\n    cancel: {\n      action: 'cancel',\n      description: 'Evento emitido quando o usuário cancela a edição',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Modal para edição de transações financeiras, permitindo alterar valor e descrição.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NewTransactionComponent>",
                "defaultValue": "{\n  title: 'Componentes/NewTransaction',\n  component: NewTransactionComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        ButtonComponent, \n        TextComponent, \n        InputComponent, \n        CommonModule, \n        HttpClientModule,\n        FormsModule\n      ],\n      providers: [\n        { provide: TransactionService, useValue: mockTransactionService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    valorTransacao: {\n      control: 'text',\n      description: 'Valor formatado da transação',\n    },\n    selectedOption: {\n      control: 'text',\n      description: 'Opção selecionada no dropdown',\n    },\n    submitStatus: {\n      control: 'object',\n      description: 'Status da submissão do formulário',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de formulário para criação de novas transações financeiras, permitindo selecionar o tipo, valor e descrição.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/statement/statement.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StatementComponent>",
                "defaultValue": "{\n  title: 'Componentes/Statement',\n  component: StatementComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule, \n        HttpClientModule,\n        TextComponent,\n        MockIconArrowPencilComponent,\n        MockIconBinComponent,\n        MockIconDollarComponent,\n        MockIconArrowDownLeftComponent,\n        MockIconArrowRightComponent,\n        MockDeleteModalComponent,\n        MockEditModalComponent\n      ],\n      providers: [\n        { provide: BrlPipe, useClass: MockBrlPipe },\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    showDetails: {\n      control: 'boolean',\n      description: 'Exibe detalhes das transações',\n    },\n    showAllTransactions: {\n      control: 'boolean',\n      description: 'Exibe todas as transações ou apenas as 6 mais recentes',\n    },\n    customTitle: {\n      control: 'text',\n      description: 'Título personalizado para o componente',\n    },\n    showLastTransactionsSubtitle: {\n      control: 'boolean',\n      description: 'Exibe o subtítulo de últimas transações',\n    },\n    swapColumns: {\n      control: 'boolean',\n      description: 'Inverte a ordem das colunas',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe um extrato de transações financeiras com opções para editar e excluir transações.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TextComponent>",
                "defaultValue": "{\n  title: 'Componentes/Text',\n  component: TextComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n    }),\n  ],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: [\n        'title-bold',\n        'title-regular',\n        'subtitle',\n        'text-regular',\n        'text-regular-special',\n        'text-small',\n        'text-small-bold'\n      ],\n      description: 'Variante do texto que define o tamanho e peso da fonte',\n      table: {\n        defaultValue: { summary: 'text-regular' },\n      },\n    },\n    color: {\n      control: 'text',\n      description: 'Classe CSS para a cor do texto (classes do Tailwind)',\n      table: {\n        defaultValue: { summary: 'text-white' },\n      },\n    },\n    tag: {\n      control: 'select',\n      options: ['p', 'h1', 'h2', 'span'],\n      description: 'Tag HTML a ser usada para renderizar o texto',\n      table: {\n        defaultValue: { summary: 'p' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de texto com diferentes variantes, cores e tags HTML.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TransactionChartComponent>",
                "defaultValue": "{\n  title: 'Componentes/TransactionChart',\n  component: TransactionChartComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule]\n    })\n  ],\n  argTypes: {\n    transactionData: {\n      control: 'object',\n      description: 'Dados de transações para exibição no gráfico',\n    },\n    totalEntries: {\n      control: 'text',\n      description: 'Total de entradas formatado',\n    },\n    totalExits: {\n      control: 'text',\n      description: 'Total de saídas formatado',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de gráfico que exibe as transações por semana, mostrando entradas e saídas.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TransactionFormComponent>",
                "defaultValue": "{\n  title: 'Componentes/TransactionForm',\n  component: TransactionFormComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        ButtonComponent, \n        TextComponent, \n        InputComponent, \n        CommonModule, \n        HttpClientModule,\n        FormsModule\n      ],\n      providers: [\n        { provide: TransactionService, useValue: mockTransactionService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    form: {\n      control: 'object',\n      description: 'Formulário de transação com tipo e valor',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de formulário simplificado para criação de novas transações financeiras.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/under-construction/under-construction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UnderConstructionComponent>",
                "defaultValue": "{\n  title: 'Componentes/UnderConstruction',\n  component: UnderConstructionComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        TextComponent,\n        MockIconUnderConstructionComponent\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe uma mensagem de página em construção, utilizado para páginas que ainda estão sendo desenvolvidas.'\n      },\n    },\n  },\n}"
            },
            {
                "name": "mockTransactionEventService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n}"
            },
            {
                "name": "mockTransactionEventService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/statement/statement.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n}"
            },
            {
                "name": "mockTransactionService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  getByUserId: () => of([\n    {\n      id: '1',\n      id_user: 'user123',\n      description: 'Salário',\n      amount: 5000,\n      date: '2025-06-01T10:00:00',\n      type: 'deposit'\n    },\n    {\n      id: '2',\n      id_user: 'user123',\n      description: 'Aluguel',\n      amount: 1500,\n      date: '2025-06-05T14:30:00',\n      type: 'withdrawal'\n    },\n    {\n      id: '3',\n      id_user: 'user123',\n      description: 'Supermercado',\n      amount: 500,\n      date: '2025-06-10T16:45:00',\n      type: 'withdrawal'\n    },\n    {\n      id: '4',\n      id_user: 'user123',\n      description: 'Freelance',\n      amount: 2000,\n      date: '2025-06-15T09:15:00',\n      type: 'deposit'\n    }\n  ])\n}"
            },
            {
                "name": "mockTransactionService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  create: () => of({\n    id: '123',\n    type: 'exchange',\n    description: 'Transação de teste',\n    amount: 1000,\n    date: new Date(),\n    id_user: 'user123'\n  })\n}"
            },
            {
                "name": "mockTransactionService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/statement/statement.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  getByUserId: () => of([\n    {\n      id: '1',\n      type: 'exchange',\n      description: 'Câmbio de moeda',\n      amount: 1500.75,\n      date: new Date('2023-05-10'),\n      id_user: 'user123'\n    },\n    {\n      id: '2',\n      type: 'transfer',\n      description: 'Transferência bancária',\n      amount: 750.50,\n      date: new Date('2023-05-08'),\n      id_user: 'user123'\n    },\n    {\n      id: '3',\n      type: 'loan',\n      description: 'Empréstimo pessoal',\n      amount: 3000,\n      date: new Date('2023-05-05'),\n      id_user: 'user123'\n    }\n  ]),\n  delete: () => of({}),\n  update: () => of({})\n}"
            },
            {
                "name": "mockTransactionService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  create: () => of({\n    id: '123',\n    type: 'exchange',\n    description: 'Transação de teste',\n    amount: 1000,\n    date: new Date(),\n    id_user: 'user123'\n  })\n}"
            },
            {
                "name": "mockUserService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  getById: () => of({\n    id: 'user123',\n    name: 'João Silva',\n    email: 'joao@example.com'\n  })\n}"
            },
            {
                "name": "NotLoggedInDesktop",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n}"
            },
            {
                "name": "NotLoggedInMobile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n}"
            },
            {
                "name": "NoTransactions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Semana 1', entries: 0, exits: 0 },\n      { day: 'Semana 2', entries: 0, exits: 0 },\n      { day: 'Semana 3', entries: 0, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    totalEntries: 'R$ 0,00',\n    totalExits: 'R$ 0,00'\n  },\n}"
            },
            {
                "name": "OutlineCyanBlue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    theme: 'outline-cyan-blue',\n    size: 'G',\n    label: 'Botão Outline',\n    disabled: false,\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    theme: 'primary',\n    size: 'G',\n    label: 'Botão Primário',\n    disabled: false,\n  },\n}"
            },
            {
                "name": "sampleTransaction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Transaction",
                "defaultValue": "{\n  id: '1',\n  type: TransactionType.Exchange,\n  amount: 1500.75,\n  date: new Date(),\n  description: 'Câmbio de dólares',\n  id_user: 'user123'\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    theme: 'secondary',\n    size: 'G',\n    label: 'Botão Secundário',\n    disabled: false,\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    theme: 'primary',\n    size: 'P',\n    label: 'Botão Pequeno',\n    disabled: false,\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: ['Opção 1', 'Opção 2', 'Opção 3'],\n    size: 'P',\n    placeholder: 'Selecione uma opção',\n  },\n}"
            },
            {
                "name": "SpanText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'text-regular',\n    color: 'text-gray-800 dark:text-gray-200',\n    tag: 'span',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Texto em Span</app-text>`,\n  }),\n}"
            },
            {
                "name": "Subtitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'subtitle',\n    color: 'text-cyan-blue-500 dark:text-blue-violet-500',\n    tag: 'h2',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Subtítulo</app-text>`,\n  }),\n}"
            },
            {
                "name": "SuccessState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    valorTransacao: '1.000,00',\n    selectedOption: 'Receita (Câmbio de Moeda)',\n    submitStatus: {\n      success: true,\n      message: 'Transação de crédito (Câmbio de Moeda) criada com sucesso!'\n    }\n  },\n}"
            },
            {
                "name": "SwappedColumns",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/statement/statement.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: true\n  },\n}"
            },
            {
                "name": "systemConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\r\n  version: '1.0.0',\r\n  company: 'CDJMV',\r\n  year: new Date().getFullYear(),\r\n  userId: 'u2',\r\n  isLogged: false,\r\n  loggedPages: ['/panel', '/transactions', '/cards', '/configurations'],\r\n}"
            },
            {
                "name": "TextRegular",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'text-regular',\n    color: 'text-gray-800 dark:text-gray-200',\n    tag: 'p',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Texto Regular</app-text>`,\n  }),\n}"
            },
            {
                "name": "TextRegularSpecial",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'text-regular-special',\n    color: 'text-gray-800 dark:text-gray-200',\n    tag: 'p',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Texto Regular Especial</app-text>`,\n  }),\n}"
            },
            {
                "name": "TextSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'text-small',\n    color: 'text-gray-600 dark:text-gray-400',\n    tag: 'p',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Texto Pequeno</app-text>`,\n  }),\n}"
            },
            {
                "name": "TextSmallBold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'text-small-bold',\n    color: 'text-gray-600 dark:text-gray-400',\n    tag: 'p',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Texto Pequeno em Negrito</app-text>`,\n  }),\n}"
            },
            {
                "name": "TitleBold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'title-bold',\n    color: 'text-cyan-blue-500 dark:text-blue-violet-500',\n    tag: 'h1',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Título em Negrito</app-text>`,\n  }),\n}"
            },
            {
                "name": "TitleRegular",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'title-regular',\n    color: 'text-cyan-blue-500 dark:text-blue-violet-500',\n    tag: 'h1',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Título Regular</app-text>`,\n  }),\n}"
            },
            {
                "name": "TRANSACTION_TYPE_LABELS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/models/transaction.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<string, TransactionType>",
                "defaultValue": "{\r\n  'Câmbio de Moeda': TransactionType.Exchange,\r\n  'Empréstimo e Financiamento': TransactionType.Loan,\r\n  'DOC/TED': TransactionType.Transfer,\r\n}"
            },
            {
                "name": "Transactions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Transações',\n    route: '/transactions',\n    active: false,\n    iconComponent: IconTransactionComponent\n  },\n}"
            },
            {
                "name": "TransactionsActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/aside/aside.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    currentRoute: '/transactions'\n  },\n}"
            },
            {
                "name": "TransactionType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: ['Receita', 'Despesa', 'Transferência'],\n    size: 'G',\n    placeholder: 'Selecione o tipo de transação',\n  },\n}"
            },
            {
                "name": "TransferType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    form: {\n      type: 'DOC/TED',\n      amount: '500,00'\n    }\n  },\n}"
            },
            {
                "name": "WithAmount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    form: {\n      type: 'Câmbio de Moeda',\n      amount: '1.000,00'\n    }\n  },\n}"
            },
            {
                "name": "WithError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    userName: 'João Silva',\n    currentDate: 'Segunda-feira, 02/06/2025 21:52',\n    currentMonthName: 'Junho',\n    balance: 'R$ 5.000,00',\n    accountType: 'Conta Corrente',\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00',\n    showBalance: true,\n    isLoading: false,\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    errorMessage: 'Erro ao carregar as transações. Tente novamente mais tarde.'\n  },\n}"
            },
            {
                "name": "WithObjectOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    options: [\n      { display: 'Opção A', value: 'a' },\n      { display: 'Opção B', value: 'b' },\n      { display: 'Opção C', value: 'c' },\n    ],\n    size: 'G',\n    placeholder: 'Selecione uma opção',\n  },\n}"
            },
            {
                "name": "WithValues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    valorTransacao: '1.000,00',\n    selectedOption: 'Receita (Câmbio de Moeda)',\n    submitStatus: {\n      success: false,\n      message: ''\n    }\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "isCredit",
                "file": "src/app/shared/models/transaction.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "type",
                        "type": "TransactionType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "type",
                        "type": "TransactionType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isDebit",
                "file": "src/app/shared/models/transaction.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "type",
                        "type": "TransactionType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "type",
                        "type": "TransactionType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AsideComponent>",
                "file": "src/app/shared/components/aside/aside.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DashboardComponent>",
                "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FooterComponent>",
                "file": "src/app/shared/components/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<GraficComponent>",
                "file": "src/app/shared/components/grafic/grafic.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "src/app/shared/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "src/app/shared/components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LayoutComponent>",
                "file": "src/app/shared/components/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenuComponent>",
                "file": "src/app/shared/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MenuItemComponent>",
                "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DeleteModalComponent>",
                "file": "src/app/shared/components/modal/delete-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<EditModalComponent>",
                "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NewTransactionComponent>",
                "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StatementComponent>",
                "file": "src/app/shared/components/statement/statement.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextComponent>",
                "file": "src/app/shared/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TransactionChartComponent>",
                "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TransactionFormComponent>",
                "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UnderConstructionComponent>",
                "file": "src/app/shared/components/under-construction/under-construction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [
            {
                "name": "TransactionType",
                "childs": [
                    {
                        "name": "Exchange",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "exchange"
                    },
                    {
                        "name": "Loan",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "loan"
                    },
                    {
                        "name": "Transfer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "transfer"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/models/transaction.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/components/statement/statement.stories.ts": [
                {
                    "name": "AllTransactions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/statement/statement.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    showDetails: true,\n    showAllTransactions: true,\n    customTitle: 'Histórico Completo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n}"
                },
                {
                    "name": "CompactView",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/statement/statement.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    showDetails: false,\n    showAllTransactions: false,\n    customTitle: 'Resumo',\n    showLastTransactionsSubtitle: false,\n    swapColumns: false\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/statement/statement.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: false\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/statement/statement.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StatementComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Statement',\n  component: StatementComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule, \n        HttpClientModule,\n        TextComponent,\n        MockIconArrowPencilComponent,\n        MockIconBinComponent,\n        MockIconDollarComponent,\n        MockIconArrowDownLeftComponent,\n        MockIconArrowRightComponent,\n        MockDeleteModalComponent,\n        MockEditModalComponent\n      ],\n      providers: [\n        { provide: BrlPipe, useClass: MockBrlPipe },\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    showDetails: {\n      control: 'boolean',\n      description: 'Exibe detalhes das transações',\n    },\n    showAllTransactions: {\n      control: 'boolean',\n      description: 'Exibe todas as transações ou apenas as 6 mais recentes',\n    },\n    customTitle: {\n      control: 'text',\n      description: 'Título personalizado para o componente',\n    },\n    showLastTransactionsSubtitle: {\n      control: 'boolean',\n      description: 'Exibe o subtítulo de últimas transações',\n    },\n    swapColumns: {\n      control: 'boolean',\n      description: 'Inverte a ordem das colunas',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe um extrato de transações financeiras com opções para editar e excluir transações.'\n      },\n    },\n  },\n}"
                },
                {
                    "name": "mockTransactionEventService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/statement/statement.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n}"
                },
                {
                    "name": "mockTransactionService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/statement/statement.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  getByUserId: () => of([\n    {\n      id: '1',\n      type: 'exchange',\n      description: 'Câmbio de moeda',\n      amount: 1500.75,\n      date: new Date('2023-05-10'),\n      id_user: 'user123'\n    },\n    {\n      id: '2',\n      type: 'transfer',\n      description: 'Transferência bancária',\n      amount: 750.50,\n      date: new Date('2023-05-08'),\n      id_user: 'user123'\n    },\n    {\n      id: '3',\n      type: 'loan',\n      description: 'Empréstimo pessoal',\n      amount: 3000,\n      date: new Date('2023-05-05'),\n      id_user: 'user123'\n    }\n  ]),\n  delete: () => of({}),\n  update: () => of({})\n}"
                },
                {
                    "name": "SwappedColumns",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/statement/statement.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    showDetails: true,\n    showAllTransactions: false,\n    customTitle: 'Transações',\n    showLastTransactionsSubtitle: true,\n    swapColumns: true\n  },\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "apiConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  baseUrl: 'http://localhost:8080',\r\n  usersEndpoint: '/users',\r\n  transactionsEndpoint: '/transactions',\r\n}"
                },
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes),\r\n    provideHttpClient(),\r\n  ],\r\n}"
                },
                {
                    "name": "systemConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\r\n  version: '1.0.0',\r\n  company: 'CDJMV',\r\n  year: new Date().getFullYear(),\r\n  userId: 'u2',\r\n  isLogged: false,\r\n  loggedPages: ['/panel', '/transactions', '/cards', '/configurations'],\r\n}"
                }
            ],
            "src/app/shared/components/menu-item/menu-item.stories.ts": [
                {
                    "name": "Cards",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Meus Cartões',\n    route: '/cards',\n    active: false,\n    iconComponent: IconCardComponent\n  },\n}"
                },
                {
                    "name": "Home",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Início',\n    route: '/panel',\n    active: false,\n    iconComponent: IconHomeComponent\n  },\n}"
                },
                {
                    "name": "HomeActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Início',\n    route: '/panel',\n    active: true,\n    iconComponent: IconHomeComponent\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenuItemComponent>",
                    "defaultValue": "{\n  title: 'Componentes/MenuItem',\n  component: MenuItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]), \n        NgClass, \n        NgComponentOutlet,\n        IconHomeComponent, \n        IconTransactionComponent, \n        IconCardComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    label: {\n      control: 'text',\n      description: 'Texto do item de menu',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n    route: {\n      control: 'text',\n      description: 'Rota para navegação',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n    active: {\n      control: 'boolean',\n      description: 'Define se o item está ativo',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    iconComponent: {\n      control: { type: 'select', options: ['IconHomeComponent', 'IconTransactionComponent', 'IconCardComponent'] },\n      description: 'Componente de ícone a ser exibido',\n      mapping: {\n        IconHomeComponent: IconHomeComponent,\n        IconTransactionComponent: IconTransactionComponent,\n        IconCardComponent: IconCardComponent\n      }\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de item de menu utilizado na navegação lateral da aplicação.'\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Transactions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Transações',\n    route: '/transactions',\n    active: false,\n    iconComponent: IconTransactionComponent\n  },\n}"
                }
            ],
            "src/app/shared/components/aside/aside.stories.ts": [
                {
                    "name": "CardsActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/aside/aside.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    currentRoute: '/cards'\n  },\n}"
                },
                {
                    "name": "ConfigurationsActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/aside/aside.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    currentRoute: '/configurations'\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/aside/aside.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    currentRoute: '/panel'\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/aside/aside.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AsideComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Aside',\n  component: AsideComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RouterModule.forChild([]),\n        MenuItemComponent,\n        NgClass,\n        NgComponentOutlet,\n        MockIconHomeComponent,\n        MockIconDollarComponent,\n        MockIconListComponent,\n        MockIconCardComponent,\n        MockIconSettingsComponent\n      ],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        },\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de barra lateral de navegação com menu de itens para as principais seções da aplicação.'\n      },\n    },\n  },\n}"
                },
                {
                    "name": "TransactionsActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/aside/aside.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    currentRoute: '/transactions'\n  },\n}"
                }
            ],
            "src/app/shared/models/transaction.ts": [
                {
                    "name": "CREDIT_TYPES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/models/transaction.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionType[]",
                    "defaultValue": "[\r\n  TransactionType.Exchange,\r\n  TransactionType.Loan,\r\n]"
                },
                {
                    "name": "DEBIT_TYPES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/models/transaction.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionType[]",
                    "defaultValue": "[TransactionType.Transfer]"
                },
                {
                    "name": "TRANSACTION_TYPE_LABELS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/models/transaction.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, TransactionType>",
                    "defaultValue": "{\r\n  'Câmbio de Moeda': TransactionType.Exchange,\r\n  'Empréstimo e Financiamento': TransactionType.Loan,\r\n  'DOC/TED': TransactionType.Transfer,\r\n}"
                }
            ],
            "src/app/shared/components/modal/delete-modal.stories.ts": [
                {
                    "name": "CustomMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modal/delete-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isOpen: true,\n    message: 'Tem certeza que deseja excluir este item permanentemente?',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modal/delete-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isOpen: true,\n    message: 'Deseja realmente deletar essa transação?',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modal/delete-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DeleteModalComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Modal/DeleteModal',\n  component: DeleteModalComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, ButtonComponent],\n    }),\n  ],\n  argTypes: {\n    isOpen: {\n      control: 'boolean',\n      description: 'Define se o modal está aberto ou fechado',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    message: {\n      control: 'text',\n      description: 'Mensagem exibida no modal de confirmação',\n      table: {\n        defaultValue: { summary: 'Deseja realmente deletar essa transação?' },\n      },\n    },\n    confirm: {\n      action: 'confirm',\n      description: 'Evento emitido quando o usuário confirma a ação',\n    },\n    cancel: {\n      action: 'cancel',\n      description: 'Evento emitido quando o usuário cancela a ação',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Modal de confirmação para exclusão de itens, com opções para confirmar ou cancelar a ação.'\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/shared/components/dashboard/dashboard.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    userName: 'João Silva',\n    currentDate: 'Segunda-feira, 02/06/2025 21:52',\n    currentMonthName: 'Junho',\n    balance: 'R$ 5.000,00',\n    accountType: 'Conta Corrente',\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00',\n    showBalance: true,\n    isLoading: false,\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    errorMessage: ''\n  },\n}"
                },
                {
                    "name": "HiddenBalance",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    userName: 'João Silva',\n    currentDate: 'Segunda-feira, 02/06/2025 21:52',\n    currentMonthName: 'Junho',\n    balance: 'R$ 5.000,00',\n    accountType: 'Conta Corrente',\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00',\n    showBalance: false,\n    isLoading: false,\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    errorMessage: ''\n  },\n}"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoading: true\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DashboardComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Dashboard',\n  component: DashboardComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        MockTransactionChartComponent\n      ],\n      providers: [\n        { provide: TransactionService, useValue: mockTransactionService },\n        { provide: UserService, useValue: mockUserService },\n        { provide: TransactionEventService, useValue: mockTransactionEventService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    userName: {\n      control: 'text',\n      description: 'Nome do usuário',\n      table: {\n        defaultValue: { summary: 'João Silva' },\n      },\n    },\n    currentDate: {\n      control: 'text',\n      description: 'Data atual formatada',\n      table: {\n        defaultValue: { summary: 'Segunda-feira, 02/06/2025 21:52' },\n      },\n    },\n    balance: {\n      control: 'text',\n      description: 'Saldo da conta',\n      table: {\n        defaultValue: { summary: 'R$ 5.000,00' },\n      },\n    },\n    showBalance: {\n      control: 'boolean',\n      description: 'Mostrar ou ocultar o saldo',\n      table: {\n        defaultValue: { summary: 'true' },\n      },\n    },\n    isLoading: {\n      control: 'boolean',\n      description: 'Estado de carregamento',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    errorMessage: {\n      control: 'text',\n      description: 'Mensagem de erro',\n      table: {\n        defaultValue: { summary: '' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de dashboard que exibe o saldo da conta, informações do usuário e um gráfico de transações do mês atual.'\n      },\n    },\n  },\n}"
                },
                {
                    "name": "mockTransactionEventService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  transactionCreated$: of({}),\n  transactionUpdated$: of({}),\n  transactionDeleted$: of({})\n}"
                },
                {
                    "name": "mockTransactionService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  getByUserId: () => of([\n    {\n      id: '1',\n      id_user: 'user123',\n      description: 'Salário',\n      amount: 5000,\n      date: '2025-06-01T10:00:00',\n      type: 'deposit'\n    },\n    {\n      id: '2',\n      id_user: 'user123',\n      description: 'Aluguel',\n      amount: 1500,\n      date: '2025-06-05T14:30:00',\n      type: 'withdrawal'\n    },\n    {\n      id: '3',\n      id_user: 'user123',\n      description: 'Supermercado',\n      amount: 500,\n      date: '2025-06-10T16:45:00',\n      type: 'withdrawal'\n    },\n    {\n      id: '4',\n      id_user: 'user123',\n      description: 'Freelance',\n      amount: 2000,\n      date: '2025-06-15T09:15:00',\n      type: 'deposit'\n    }\n  ])\n}"
                },
                {
                    "name": "mockUserService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  getById: () => of({\n    id: 'user123',\n    name: 'João Silva',\n    email: 'joao@example.com'\n  })\n}"
                },
                {
                    "name": "WithError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    userName: 'João Silva',\n    currentDate: 'Segunda-feira, 02/06/2025 21:52',\n    currentMonthName: 'Junho',\n    balance: 'R$ 5.000,00',\n    accountType: 'Conta Corrente',\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00',\n    showBalance: true,\n    isLoading: false,\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    errorMessage: 'Erro ao carregar as transações. Tente novamente mais tarde.'\n  },\n}"
                }
            ],
            "src/app/shared/components/grafic/grafic.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/grafic/grafic.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Seg', entries: 5000, exits: 1500 },\n      { day: 'Ter', entries: 3000, exits: 2500 },\n      { day: 'Qua', entries: 7000, exits: 1000 },\n      { day: 'Qui', entries: 2000, exits: 3000 },\n      { day: 'Sex', entries: 4000, exits: 2000 }\n    ],\n    maxChartValue: 10000,\n    barMaxHeight: 170\n  },\n}"
                },
                {
                    "name": "HighValues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/grafic/grafic.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Seg', entries: 15000, exits: 8000 },\n      { day: 'Ter', entries: 12000, exits: 10000 },\n      { day: 'Qua', entries: 18000, exits: 5000 },\n      { day: 'Qui', entries: 9000, exits: 12000 },\n      { day: 'Sex', entries: 14000, exits: 7000 }\n    ],\n    maxChartValue: 20000,\n    barMaxHeight: 170\n  },\n}"
                },
                {
                    "name": "LowValues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/grafic/grafic.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Seg', entries: 500, exits: 300 },\n      { day: 'Ter', entries: 400, exits: 250 },\n      { day: 'Qua', entries: 700, exits: 100 },\n      { day: 'Qui', entries: 200, exits: 350 },\n      { day: 'Sex', entries: 450, exits: 200 }\n    ],\n    maxChartValue: 1000,\n    barMaxHeight: 170\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/grafic/grafic.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<GraficComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Grafic',\n  component: GraficComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule]\n    })\n  ],\n  argTypes: {\n    transactionData: {\n      control: 'object',\n      description: 'Dados de transações para exibição no gráfico',\n    },\n    maxChartValue: {\n      control: 'number',\n      description: 'Valor máximo para o eixo Y do gráfico',\n    },\n    barMaxHeight: {\n      control: 'number',\n      description: 'Altura máxima das barras em pixels',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de gráfico simplificado que exibe transações com barras para entradas e saídas.'\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/shared/components/input/input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: ['Opção 1', 'Opção 2', 'Opção 3'],\n    size: 'G',\n    placeholder: 'Selecione uma opção',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Input',\n  component: InputComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n    }),\n  ],\n  argTypes: {\n    options: {\n      control: 'object',\n      description: 'Lista de opções disponíveis no dropdown',\n    },\n    size: {\n      control: 'select',\n      options: ['G', 'P'],\n      description: 'Tamanho do input',\n      table: {\n        defaultValue: { summary: 'G' },\n      },\n    },\n    placeholder: {\n      control: 'text',\n      description: 'Texto exibido quando nenhuma opção está selecionada',\n      table: {\n        defaultValue: { summary: 'Selecione o tipo de transação' },\n      },\n    },\n    selectionChange: {\n      action: 'selectionChanged',\n      description: 'Evento emitido quando uma opção é selecionada',\n    },\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: ['Opção 1', 'Opção 2', 'Opção 3'],\n    size: 'P',\n    placeholder: 'Selecione uma opção',\n  },\n}"
                },
                {
                    "name": "TransactionType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: ['Receita', 'Despesa', 'Transferência'],\n    size: 'G',\n    placeholder: 'Selecione o tipo de transação',\n  },\n}"
                },
                {
                    "name": "WithObjectOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    options: [\n      { display: 'Opção A', value: 'a' },\n      { display: 'Opção B', value: 'b' },\n      { display: 'Opção C', value: 'c' },\n    ],\n    size: 'G',\n    placeholder: 'Selecione uma opção',\n  },\n}"
                }
            ],
            "src/app/shared/components/modal/edit-modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isOpen: true,\n    transaction: sampleTransaction,\n  },\n}"
                },
                {
                    "name": "EmptyDescription",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isOpen: true,\n    transaction: {\n      ...sampleTransaction,\n      description: ''\n    },\n  },\n}"
                },
                {
                    "name": "LargeAmount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isOpen: true,\n    transaction: {\n      ...sampleTransaction,\n      amount: 9999999.99,\n      description: 'Transação de alto valor'\n    },\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<EditModalComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Modal/EditModal',\n  component: EditModalComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, ButtonComponent, FormsModule],\n    }),\n  ],\n  argTypes: {\n    isOpen: {\n      control: 'boolean',\n      description: 'Define se o modal está aberto ou fechado',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    transaction: {\n      control: 'object',\n      description: 'Objeto de transação a ser editado',\n    },\n    save: {\n      action: 'save',\n      description: 'Evento emitido quando o usuário salva as alterações',\n    },\n    cancel: {\n      action: 'cancel',\n      description: 'Evento emitido quando o usuário cancela a edição',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Modal para edição de transações financeiras, permitindo alterar valor e descrição.'\n      },\n    },\n  },\n}"
                },
                {
                    "name": "sampleTransaction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction",
                    "defaultValue": "{\n  id: '1',\n  type: TransactionType.Exchange,\n  amount: 1500.75,\n  date: new Date(),\n  description: 'Câmbio de dólares',\n  id_user: 'user123'\n}"
                }
            ],
            "src/app/shared/components/new-transaction/new-transaction.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    valorTransacao: '',\n    selectedOption: '',\n    submitStatus: {\n      success: false,\n      message: ''\n    }\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"rounded-xl shadow p-6 bg-white\">\n        <div class=\"pb-6\">\n          <div class=\"border-b-2\">\n            <app-text\n              variant=\"subtitle\"\n              as=\"h1\"\n              color=\"text-gray-900\"\n              class=\"mb-4 border-gray-200 block\"\n              >Nova Transação</app-text\n            >\n          </div>\n        </div>\n      \n        <div class=\"flex flex-col md:flex-row\">\n          <div\n            class=\"w-full flex flex-col items-center md:items-start md:justify-start\"\n          >\n            <div class=\"w-full max-w-sm md:max-w-none\">\n              <div class=\"mb-4\">\n                <app-input\n                  [options]=\"transactionOptions\"\n                  placeholder=\"Selecione o tipo de transação\"\n                  size=\"G\"\n                  (selectionChange)=\"onTransactionTypeChange($event)\"\n                >\n                </app-input>\n              </div>\n      \n              <div class=\"mb-4\">\n                <div class=\"relative inline-block w-full\">\n                  <div\n                    class=\"w-full bg-gray-100 border border-cyan-blue-500 dark:border-blue-violet-500  text-cyan-blue-500 dark:text-blue-violet-500 font-lato font-medium rounded-md p-4 flex items-center max-w-[360px]\"\n                  >\n                    <span class=\"text-cyan-blue-500  dark:text-blue-violet-500 mr-2\">R$</span>\n                    <input\n                      type=\"text\"\n                      placeholder=\"00,00\"\n                      class=\"bg-transparent w-full outline-none text-cyan-blue-500 dark:text-blue-violet-500 placeholder-cyan-blue-500 dark:placeholder-blue-violet-500 placeholder-opacity-70\"\n                      [(ngModel)]=\"valorTransacao\"\n                      (input)=\"onAmountChange($event)\"\n                      autocomplete=\"off\"\n                      inputmode=\"numeric\"\n                    />\n                  </div>\n                </div>\n              </div>\n      \n              <div class=\"mb-4\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Descrição da transação\"\n                  class=\"w-full max-w-[360px] bg-gray-100 border border-cyan-blue-500 dark:border-blue-violet-500 text-cyan-blue-500 dark:text-blue-violet-500 font-lato font-medium rounded-md p-4\"\n                  [(ngModel)]=\"newTransaction.description\"\n                  (input)=\"onDescriptionChange($event)\"\n                />\n              </div>\n      \n              <div\n                *ngIf=\"submitStatus.message\"\n                class=\"mb-4 p-3 rounded-md max-w-[360px]\"\n                [ngClass]=\"{\n                  'bg-green-100 text-green-800': submitStatus.success,\n                  'bg-red-100 text-red-800': !submitStatus.success\n                }\"\n              >\n                {{ submitStatus.message }}\n              </div>\n      \n              <app-button\n                theme=\"primary\"\n                size=\"GG\"\n                label=\"Concluir Transação\"\n                class=\"w-full max-w-full sm:max-w-[360px]\"\n                (click)=\"createTransaction()\"\n              >\n              </app-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "ErrorState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    valorTransacao: '1.000,00',\n    selectedOption: 'Receita (Câmbio de Moeda)',\n    submitStatus: {\n      success: false,\n      message: 'Erro ao criar transação: Tente novamente mais tarde'\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NewTransactionComponent>",
                    "defaultValue": "{\n  title: 'Componentes/NewTransaction',\n  component: NewTransactionComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        ButtonComponent, \n        TextComponent, \n        InputComponent, \n        CommonModule, \n        HttpClientModule,\n        FormsModule\n      ],\n      providers: [\n        { provide: TransactionService, useValue: mockTransactionService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    valorTransacao: {\n      control: 'text',\n      description: 'Valor formatado da transação',\n    },\n    selectedOption: {\n      control: 'text',\n      description: 'Opção selecionada no dropdown',\n    },\n    submitStatus: {\n      control: 'object',\n      description: 'Status da submissão do formulário',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de formulário para criação de novas transações financeiras, permitindo selecionar o tipo, valor e descrição.'\n      },\n    },\n  },\n}"
                },
                {
                    "name": "mockTransactionService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  create: () => of({\n    id: '123',\n    type: 'exchange',\n    description: 'Transação de teste',\n    amount: 1000,\n    date: new Date(),\n    id_user: 'user123'\n  })\n}"
                },
                {
                    "name": "SuccessState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    valorTransacao: '1.000,00',\n    selectedOption: 'Receita (Câmbio de Moeda)',\n    submitStatus: {\n      success: true,\n      message: 'Transação de crédito (Câmbio de Moeda) criada com sucesso!'\n    }\n  },\n}"
                },
                {
                    "name": "WithValues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    valorTransacao: '1.000,00',\n    selectedOption: 'Receita (Câmbio de Moeda)',\n    submitStatus: {\n      success: false,\n      message: ''\n    }\n  },\n}"
                }
            ],
            "src/app/shared/components/transaction-chart/transaction-chart.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Semana 1', entries: 5000, exits: 1500 },\n      { day: 'Semana 2', entries: 0, exits: 500 },\n      { day: 'Semana 3', entries: 2000, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    totalEntries: 'R$ 7.000,00',\n    totalExits: 'R$ 2.000,00'\n  },\n}"
                },
                {
                    "name": "HighValues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Semana 1', entries: 12000, exits: 3000 },\n      { day: 'Semana 2', entries: 5000, exits: 8000 },\n      { day: 'Semana 3', entries: 7500, exits: 4500 },\n      { day: 'Semana 4', entries: 10000, exits: 6000 }\n    ],\n    totalEntries: 'R$ 34.500,00',\n    totalExits: 'R$ 21.500,00'\n  },\n}"
                },
                {
                    "name": "LowValues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Semana 1', entries: 100, exits: 50 },\n      { day: 'Semana 2', entries: 75, exits: 125 },\n      { day: 'Semana 3', entries: 200, exits: 150 },\n      { day: 'Semana 4', entries: 150, exits: 100 }\n    ],\n    totalEntries: 'R$ 525,00',\n    totalExits: 'R$ 425,00'\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TransactionChartComponent>",
                    "defaultValue": "{\n  title: 'Componentes/TransactionChart',\n  component: TransactionChartComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule]\n    })\n  ],\n  argTypes: {\n    transactionData: {\n      control: 'object',\n      description: 'Dados de transações para exibição no gráfico',\n    },\n    totalEntries: {\n      control: 'text',\n      description: 'Total de entradas formatado',\n    },\n    totalExits: {\n      control: 'text',\n      description: 'Total de saídas formatado',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de gráfico que exibe as transações por semana, mostrando entradas e saídas.'\n      },\n    },\n  },\n}"
                },
                {
                    "name": "NoTransactions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    transactionData: [\n      { day: 'Semana 1', entries: 0, exits: 0 },\n      { day: 'Semana 2', entries: 0, exits: 0 },\n      { day: 'Semana 3', entries: 0, exits: 0 },\n      { day: 'Semana 4', entries: 0, exits: 0 }\n    ],\n    totalEntries: 'R$ 0,00',\n    totalExits: 'R$ 0,00'\n  },\n}"
                }
            ],
            "src/app/shared/components/transaction-form/transaction-form.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    form: {\n      type: 'Câmbio de Moeda',\n      amount: '00,00'\n    }\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"rounded-xl shadow p-6 bg-white pb-[80px]\">\n        <div class=\"pb-4\">\n          <div class=\"border-b-2\">\n            <app-text variant=\"title-bold\" as=\"h1\" class=\"mb-4 border-gray-200 block\">\n              Nova Transação\n            </app-text>\n          </div>\n        </div>\n\n        <div class=\"flex flex-col md:flex-row\">\n          <div class=\"w-full flex flex-col items-center md:items-start md:justify-start\">\n            <form\n              class=\"w-full max-w-sm md:max-w-none mt-8\"\n              (ngSubmit)=\"submitForm()\"\n              #transactionForm=\"ngForm\"\n            >\n              <div class=\"mb-4\">\n                <app-input\n                  class=\"w-full\"\n                  [(ngModel)]=\"form.type\"\n                  name=\"type\"\n                  required\n                  [options]=\"transactionOptions\"\n                  placeholder=\"Selecione o tipo de transação\"\n                  size=\"G\"\n                >\n                </app-input>\n              </div>\n\n              <div class=\"mb-4\">\n                <div class=\"relative inline-block w-full\">\n                  <div\n                    class=\"w-full bg-gray-100 border border-cyan-blue-500 text-cyan-blue-500 font-lato font-medium rounded-md p-4 flex items-center\"\n                    [ngClass]=\"{\n                      'max-w-[360px]': true\n                    }\"\n                  >\n                    <span class=\"text-cyan-blue-500 mr-2\">R$</span>\n                    <input\n                      type=\"text\"\n                      placeholder=\"00,00\"\n                      class=\"bg-transparent w-full outline-none text-cyan-blue-500 placeholder-cyan-blue-500 placeholder-opacity-70\"\n                      [(ngModel)]=\"form.amount\"\n                      name=\"amount\"\n                      autocomplete=\"off\"\n                      inputmode=\"numeric\"\n                      (click)=\"form.amount = ''\"\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <app-button\n                theme=\"primary\"\n                size=\"GG\"\n                label=\"Concluir Transação\"\n                class=\"w-full\"\n                type=\"submit\"\n              ></app-button>\n            </form>\n          </div>\n        </div>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "LoanType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    form: {\n      type: 'Empréstimo e Financiamento',\n      amount: '5.000,00'\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TransactionFormComponent>",
                    "defaultValue": "{\n  title: 'Componentes/TransactionForm',\n  component: TransactionFormComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        ButtonComponent, \n        TextComponent, \n        InputComponent, \n        CommonModule, \n        HttpClientModule,\n        FormsModule\n      ],\n      providers: [\n        { provide: TransactionService, useValue: mockTransactionService },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({}),\n            queryParams: of({}),\n            snapshot: {\n              paramMap: {\n                get: () => null\n              },\n              queryParamMap: {\n                get: () => null\n              }\n            }\n          }\n        }\n      ]\n    })\n  ],\n  argTypes: {\n    form: {\n      control: 'object',\n      description: 'Formulário de transação com tipo e valor',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de formulário simplificado para criação de novas transações financeiras.'\n      },\n    },\n  },\n}"
                },
                {
                    "name": "mockTransactionService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  create: () => of({\n    id: '123',\n    type: 'exchange',\n    description: 'Transação de teste',\n    amount: 1000,\n    date: new Date(),\n    id_user: 'user123'\n  })\n}"
                },
                {
                    "name": "TransferType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    form: {\n      type: 'DOC/TED',\n      amount: '500,00'\n    }\n  },\n}"
                },
                {
                    "name": "WithAmount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    form: {\n      type: 'Câmbio de Moeda',\n      amount: '1.000,00'\n    }\n  },\n}"
                }
            ],
            "src/app/shared/components/under-construction/under-construction.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/under-construction/under-construction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {}\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/under-construction/under-construction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UnderConstructionComponent>",
                    "defaultValue": "{\n  title: 'Componentes/UnderConstruction',\n  component: UnderConstructionComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        TextComponent,\n        MockIconUnderConstructionComponent\n      ]\n    })\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente que exibe uma mensagem de página em construção, utilizado para páginas que ainda estão sendo desenvolvidas.'\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/shared/components/button/button.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    theme: 'primary',\n    size: 'G',\n    label: 'Botão Desabilitado',\n    disabled: true,\n  },\n}"
                },
                {
                    "name": "ExtraLarge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    theme: 'primary',\n    size: 'GG',\n    label: 'Botão Extra Grande',\n    disabled: false,\n  },\n}"
                },
                {
                    "name": "GhostCyanBlue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    theme: 'ghost-cyan-blue',\n    size: 'G',\n    label: 'Botão Ghost Cyan',\n    disabled: false,\n  },\n}"
                },
                {
                    "name": "GhostWhite",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    theme: 'ghost-white',\n    size: 'G',\n    label: 'Botão Ghost White',\n    disabled: false,\n  },\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    theme: 'primary',\n    size: 'G',\n    label: 'Botão Grande',\n    disabled: false,\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n    }),\n  ],\n  argTypes: {\n    theme: {\n      control: 'select',\n      options: ['primary', 'secondary', 'outline-cyan-blue', 'ghost-cyan-blue', 'ghost-white'],\n      description: 'Tema do botão que define suas cores e estilos',\n      table: {\n        defaultValue: { summary: 'primary' },\n      },\n    },\n    size: {\n      control: 'select',\n      options: ['P', 'G', 'GG'],\n      description: 'Tamanho do botão',\n      table: {\n        defaultValue: { summary: 'G' },\n      },\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Define se o botão está desabilitado',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    label: {\n      control: 'text',\n      description: 'Texto do botão',\n      table: {\n        defaultValue: { summary: 'Button' },\n      },\n    },\n    iconPosition: {\n      control: 'select',\n      options: ['left', 'right'],\n      description: 'Posição do ícone em relação ao texto',\n      table: {\n        defaultValue: { summary: 'left' },\n      },\n    },\n  },\n}"
                },
                {
                    "name": "OutlineCyanBlue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    theme: 'outline-cyan-blue',\n    size: 'G',\n    label: 'Botão Outline',\n    disabled: false,\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    theme: 'primary',\n    size: 'G',\n    label: 'Botão Primário',\n    disabled: false,\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    theme: 'secondary',\n    size: 'G',\n    label: 'Botão Secundário',\n    disabled: false,\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    theme: 'primary',\n    size: 'P',\n    label: 'Botão Pequeno',\n    disabled: false,\n  },\n}"
                }
            ],
            "src/app/shared/components/layout/layout.stories.ts": [
                {
                    "name": "Hidden",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: {\n    docs: {\n      disable: true,\n    },\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LayoutComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Layout',\n  component: LayoutComponent,\n  // Configuração para ocultar o componente no Storybook\n  parameters: {\n    previewTabs: {\n      'storybook/docs/panel': { hidden: true },\n    },\n    viewMode: 'story',\n    docsOnly: true,\n  },\n}"
                }
            ],
            "src/app/shared/components/footer/footer.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoggedIn: false,\n    company: 'ByteBank',\n    version: '1.0.0',\n    year: 2025,\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FooterComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Footer',\n  component: FooterComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        TextComponent,\n        ButtonComponent,\n        MockIconLogoComponent,\n        MockIconWhatsappComponent,\n        MockIconInstagramComponent,\n        MockIconYoutubeComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    company: {\n      control: 'text',\n      description: 'Nome da empresa',\n      table: {\n        defaultValue: { summary: 'ByteBank' },\n      },\n    },\n    version: {\n      control: 'text',\n      description: 'Versão da aplicação',\n      table: {\n        defaultValue: { summary: '1.0.0' },\n      },\n    },\n    year: {\n      control: 'number',\n      description: 'Ano atual para o copyright',\n      table: {\n        defaultValue: { summary: '2025' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de rodapé da aplicação, com diferentes layouts para usuários logados e não logados.'\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/shared/components/header/header.stories.ts": [
                {
                    "name": "LoggedInDesktop",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: false,\n    userName: 'João Silva'\n  }\n}"
                },
                {
                    "name": "LoggedInMobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    userName: 'João Silva'\n  }\n}"
                },
                {
                    "name": "LoggedInTablet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    userName: 'João Silva'\n  }\n}"
                },
                {
                    "name": "NotLoggedInDesktop",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoggedIn: false,\n    mobile: false,\n    tablet: false\n  }\n}"
                },
                {
                    "name": "NotLoggedInMobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false\n  }\n}"
                }
            ],
            "src/app/shared/components/menu/menu.stories.ts": [
                {
                    "name": "LoggedInMobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    mobile: true,\n    tablet: false,\n    menuOpen: true,\n  },\n}"
                },
                {
                    "name": "LoggedInTablet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoggedIn: true,\n    mobile: false,\n    tablet: true,\n    menuOpen: false,\n  },\n}"
                },
                {
                    "name": "LoggedOutMobile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isLoggedIn: false,\n    mobile: true,\n    tablet: false,\n    menuOpen: true,\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MenuComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Menu',\n  component: MenuComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        ButtonComponent,\n        MockIconExitComponent\n      ],\n      providers: [\n        { provide: Router, useValue: new Router() },\n        { provide: ThemeService, useValue: new ThemeService() }\n      ]\n    })\n  ],\n  argTypes: {\n    isLoggedIn: {\n      control: 'boolean',\n      description: 'Define se o usuário está logado ou não',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    mobile: {\n      control: 'boolean',\n      description: 'Define se está em modo mobile',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    tablet: {\n      control: 'boolean',\n      description: 'Define se está em modo tablet',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    menuOpen: {\n      control: 'boolean',\n      description: 'Define se o menu está aberto',\n      table: {\n        defaultValue: { summary: 'false' },\n      },\n    },\n    closeMenu: {\n      action: 'closeMenu',\n      description: 'Evento emitido quando o menu é fechado',\n    },\n    menuRefReady: {\n      action: 'menuRefReady',\n      description: 'Evento emitido quando a referência do menu está pronta',\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de menu da aplicação, com diferentes layouts para usuários logados e não logados, e responsivo para diferentes tamanhos de tela.'\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/shared/components/text/text.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TextComponent>",
                    "defaultValue": "{\n  title: 'Componentes/Text',\n  component: TextComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n    }),\n  ],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: [\n        'title-bold',\n        'title-regular',\n        'subtitle',\n        'text-regular',\n        'text-regular-special',\n        'text-small',\n        'text-small-bold'\n      ],\n      description: 'Variante do texto que define o tamanho e peso da fonte',\n      table: {\n        defaultValue: { summary: 'text-regular' },\n      },\n    },\n    color: {\n      control: 'text',\n      description: 'Classe CSS para a cor do texto (classes do Tailwind)',\n      table: {\n        defaultValue: { summary: 'text-white' },\n      },\n    },\n    tag: {\n      control: 'select',\n      options: ['p', 'h1', 'h2', 'span'],\n      description: 'Tag HTML a ser usada para renderizar o texto',\n      table: {\n        defaultValue: { summary: 'p' },\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: 'Componente de texto com diferentes variantes, cores e tags HTML.'\n      },\n    },\n  },\n}"
                },
                {
                    "name": "SpanText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'text-regular',\n    color: 'text-gray-800 dark:text-gray-200',\n    tag: 'span',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Texto em Span</app-text>`,\n  }),\n}"
                },
                {
                    "name": "Subtitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'subtitle',\n    color: 'text-cyan-blue-500 dark:text-blue-violet-500',\n    tag: 'h2',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Subtítulo</app-text>`,\n  }),\n}"
                },
                {
                    "name": "TextRegular",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'text-regular',\n    color: 'text-gray-800 dark:text-gray-200',\n    tag: 'p',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Texto Regular</app-text>`,\n  }),\n}"
                },
                {
                    "name": "TextRegularSpecial",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'text-regular-special',\n    color: 'text-gray-800 dark:text-gray-200',\n    tag: 'p',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Texto Regular Especial</app-text>`,\n  }),\n}"
                },
                {
                    "name": "TextSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'text-small',\n    color: 'text-gray-600 dark:text-gray-400',\n    tag: 'p',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Texto Pequeno</app-text>`,\n  }),\n}"
                },
                {
                    "name": "TextSmallBold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'text-small-bold',\n    color: 'text-gray-600 dark:text-gray-400',\n    tag: 'p',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Texto Pequeno em Negrito</app-text>`,\n  }),\n}"
                },
                {
                    "name": "TitleBold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'title-bold',\n    color: 'text-cyan-blue-500 dark:text-blue-violet-500',\n    tag: 'h1',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Título em Negrito</app-text>`,\n  }),\n}"
                },
                {
                    "name": "TitleRegular",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'title-regular',\n    color: 'text-cyan-blue-500 dark:text-blue-violet-500',\n    tag: 'h1',\n  },\n  render: (args) => ({\n    props: args,\n    template: `<app-text [variant]=\"variant\" [color]=\"color\" [tag]=\"tag\">Título Regular</app-text>`,\n  }),\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/models/transaction.ts": [
                {
                    "name": "isCredit",
                    "file": "src/app/shared/models/transaction.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "type",
                            "type": "TransactionType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "TransactionType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isDebit",
                    "file": "src/app/shared/models/transaction.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "type",
                            "type": "TransactionType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "TransactionType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/models/transaction.ts": [
                {
                    "name": "TransactionType",
                    "childs": [
                        {
                            "name": "Exchange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "exchange"
                        },
                        {
                            "name": "Loan",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "loan"
                        },
                        {
                            "name": "Transfer",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "transfer"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/models/transaction.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/components/aside/aside.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AsideComponent>",
                    "file": "src/app/shared/components/aside/aside.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/dashboard/dashboard.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DashboardComponent>",
                    "file": "src/app/shared/components/dashboard/dashboard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/footer/footer.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FooterComponent>",
                    "file": "src/app/shared/components/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/grafic/grafic.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<GraficComponent>",
                    "file": "src/app/shared/components/grafic/grafic.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/header/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "src/app/shared/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/input/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "src/app/shared/components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/layout/layout.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LayoutComponent>",
                    "file": "src/app/shared/components/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/menu/menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenuComponent>",
                    "file": "src/app/shared/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/menu-item/menu-item.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MenuItemComponent>",
                    "file": "src/app/shared/components/menu-item/menu-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/modal/delete-modal.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DeleteModalComponent>",
                    "file": "src/app/shared/components/modal/delete-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/modal/edit-modal.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<EditModalComponent>",
                    "file": "src/app/shared/components/modal/edit-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/new-transaction/new-transaction.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NewTransactionComponent>",
                    "file": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/statement/statement.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StatementComponent>",
                    "file": "src/app/shared/components/statement/statement.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/text/text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextComponent>",
                    "file": "src/app/shared/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/transaction-chart/transaction-chart.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TransactionChartComponent>",
                    "file": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/transaction-form/transaction-form.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TransactionFormComponent>",
                    "file": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shared/components/under-construction/under-construction.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UnderConstructionComponent>",
                    "file": "src/app/shared/components/under-construction/under-construction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "apiConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "systemConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/cards/cards.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/configurations/configurations.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfigurationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/panel/panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PainelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/transactions/transactions.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransactionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-account-circle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconAccountCircleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-arrow-down-left.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconArrowDownLeftComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-arrow-pencil.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconArrowPencilComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-arrow-right.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconArrowRightComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-arrowdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconArrowdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-bell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconBellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-bin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconBinComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-darkmode.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconDarkmodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-dollar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconDollarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-exit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconExitComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-gift.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconGiftComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-hamburger.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconHamburgerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconHomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-instagram.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconInstagramComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconLogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-notebook.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconNotebookComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-on.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconOnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-star.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconStarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-under-construction.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconUnderConstructionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-whatsapp.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconWhatsappComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/assets/icons/icon-youtube.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconYoutubeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AsideComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconDollarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconHomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Router",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardsActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ConfigurationsActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TransactionsActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/aside/aside.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraLarge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GhostCyanBlue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GhostWhite",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineCyanBlue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockTransactionChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HiddenBalance",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockTransactionEventService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockTransactionService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockUserService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dashboard/dashboard.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconInstagramComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconLogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconWhatsappComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconYoutubeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Router",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/footer/footer.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/grafic/grafic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GraficComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/grafic/grafic.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TransactionData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/grafic/grafic.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/grafic/grafic.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HighValues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/grafic/grafic.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LowValues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/grafic/grafic.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/grafic/grafic.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconAccountCircleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconArrowdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconBellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconDarkmodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconExitComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconHamburgerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconLogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RouterMock",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedInDesktop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedInMobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedInTablet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotLoggedInDesktop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotLoggedInMobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OptionItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TransactionType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithObjectOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/input/input.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Hidden",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/layout/layout.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu-item/menu-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconHomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconTransactionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Cards",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Home",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HomeActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Transactions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu-item/menu-item.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu/menu.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconExitComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu/menu.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Router",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu/menu.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedInMobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedInTablet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOutMobile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/menu/menu.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/delete-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/delete-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/delete-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/delete-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/delete-modal.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/edit-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/edit-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/edit-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmptyDescription",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/edit-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeAmount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/edit-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/edit-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleTransaction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/edit-modal.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/new-transaction/new-transaction.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewTransactionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockTransactionService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithValues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/new-transaction/new-transaction.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockDeleteModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockEditModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconArrowDownLeftComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconArrowPencilComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconArrowRightComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconBinComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconDollarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockBrlPipe",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllTransactions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CompactView",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockTransactionEventService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockTransactionService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SwappedColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/statement/statement.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SpanText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Subtitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextRegular",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextRegularSpecial",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextSmallBold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TitleBold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TitleRegular",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/text/text.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-chart/transaction-chart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransactionChartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HighValues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LowValues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoTransactions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-chart/transaction-chart.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-form/transaction-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TransactionFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-form/transaction-form.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TransactionForm",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoanType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockTransactionService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TransferType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAmount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/transaction-form/transaction-form.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/under-construction/under-construction.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnderConstructionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/under-construction/under-construction.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "MockIconUnderConstructionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/under-construction/under-construction.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/under-construction/under-construction.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/under-construction/under-construction.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/balance.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Balance",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/statement.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StatementItem",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/transaction-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TransactionData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/transaction.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Transaction",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/transaction.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isCredit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/transaction.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isDebit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/transaction.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CREDIT_TYPES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/transaction.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEBIT_TYPES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/transaction.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TRANSACTION_TYPE_LABELS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/brl.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "BrlPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/Theme/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/Transaction/transaction-service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TransactionService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/TransactionEvent/transaction-event.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TransactionEventService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/User/user-service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            }
        ]
    }
}